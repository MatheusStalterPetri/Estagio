{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { html } from 'lit';\nimport { property, query } from 'lit/decorators.js';\nimport { themes } from '../../../theming/theming-decorator.js';\nimport { blazorIndirectRender } from '../../common/decorators/blazorIndirectRender.js';\nimport { blazorSuppressComponent } from '../../common/decorators/blazorSuppressComponent.js';\nimport { watch } from '../../common/decorators/watch.js';\nimport { IgcCalendarResourceStringEN } from '../../common/i18n/calendar.resources.js';\nimport { EventEmitterMixin } from '../../common/mixins/event-emitter.js';\nimport { partNameMap } from '../../common/util.js';\nimport { IgcCalendarBaseComponent } from '../common/calendar-base.js';\nimport { DateRangeType, isDateInRanges, TimeDeltaInterval } from '../common/calendar.model.js';\nimport { areEqualDates, getDateOnly, isEqual } from '../common/utils.js';\nimport { styles as bootstrap } from '../themes/bootstrap/days-view.bootstrap.css.js';\nimport { styles } from '../themes/days-view.base.css.js';\nimport { styles as fluent } from '../themes/fluent/days-view.fluent.css.js';\nlet IgcDaysViewComponent = class IgcDaysViewComponent extends EventEmitterMixin(IgcCalendarBaseComponent) {\n  formattersChange() {\n    this.initFormatters();\n  }\n  datesChange() {\n    this.dates = this.getCalendarMonth();\n  }\n  constructor() {\n    super();\n    this.hideLeadingDays = false;\n    this.hideTrailingDays = false;\n    this.active = false;\n    this.weekDayFormat = 'narrow';\n    this.resourceStrings = IgcCalendarResourceStringEN;\n    this.setAttribute('role', 'grid');\n    this.initFormatters();\n  }\n  focusActiveDate() {\n    this.activeDay.focus();\n  }\n  initFormatters() {\n    this.formatterWeekday = new Intl.DateTimeFormat(this.locale, {\n      weekday: this.weekDayFormat\n    });\n    this.labelFormatter = new Intl.DateTimeFormat(this.locale, {\n      weekday: 'long',\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric'\n    });\n  }\n  generateWeekHeader() {\n    const dayNames = [];\n    const rv = this.calendarModel.monthdatescalendar(this.activeDate.getFullYear(), this.activeDate.getMonth())[0];\n    for (const day of rv) {\n      dayNames.push({\n        label: this.formatterWeekday.format(day.date),\n        ariaLabel: day.date.toLocaleString(this.locale, {\n          weekday: 'long'\n        })\n      });\n    }\n    return dayNames;\n  }\n  getCalendarMonth() {\n    return this.calendarModel.monthdatescalendar(this.activeDate.getFullYear(), this.activeDate.getMonth(), true);\n  }\n  titleCase(str) {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n  }\n  getWeekNumber(date) {\n    return this.calendarModel.getWeekNumber(date);\n  }\n  formattedDate(value) {\n    return `${value.getDate()}`;\n  }\n  get isSingleSelection() {\n    return this.selection !== 'range';\n  }\n  isLastInRange(date) {\n    if (this.isSingleSelection || !this.values || this.values.length === 0) {\n      return false;\n    }\n    const dates = this.values;\n    let lastDate = dates[dates.length - 1];\n    if (this.rangePreviewDate) {\n      if (this.rangePreviewDate > lastDate) {\n        lastDate = this.rangePreviewDate;\n      }\n    }\n    return isEqual(lastDate, date.date);\n  }\n  isFirstInRange(date) {\n    if (this.isSingleSelection || !this.values || this.values.length === 0) {\n      return false;\n    }\n    const dates = this.values;\n    let firstDate = dates[0];\n    if (this.rangePreviewDate) {\n      if (this.rangePreviewDate < firstDate) {\n        firstDate = this.rangePreviewDate;\n      }\n    }\n    return isEqual(firstDate, date.date);\n  }\n  isDisabled(date) {\n    if (!this.disabledDates) {\n      return false;\n    }\n    return isDateInRanges(date, this.disabledDates);\n  }\n  isWithinRange(date, min, max) {\n    return isDateInRanges(date, [{\n      type: DateRangeType.Between,\n      dateRange: [min, max]\n    }]);\n  }\n  isRangeDate(date) {\n    if (this.selection !== 'range' || !this.values || this.values.length === 0) {\n      return false;\n    }\n    const dates = this.values;\n    const min = dates[0];\n    let max;\n    if (dates.length === 1) {\n      if (!this.rangePreviewDate) {\n        return false;\n      }\n      max = this.rangePreviewDate;\n    } else {\n      max = dates[dates.length - 1];\n    }\n    return isDateInRanges(date, [{\n      type: DateRangeType.Between,\n      dateRange: [min, max]\n    }]);\n  }\n  isRangePreview(date) {\n    if (this.selection === 'range' && this.values && this.values.length > 0 && this.rangePreviewDate) {\n      return isDateInRanges(date, [{\n        type: DateRangeType.Between,\n        dateRange: [this.values[0], this.rangePreviewDate]\n      }]);\n    }\n    return false;\n  }\n  isSelected(date) {\n    if (this.isDisabled(date.date)) {\n      return false;\n    }\n    if (this.selection === 'single') {\n      if (!this.value) {\n        return false;\n      }\n      return getDateOnly(this.value).getTime() === date.date.getTime();\n    }\n    if (!this.values || this.values.length === 0) {\n      return false;\n    }\n    if (this.selection === 'range' && this.values.length === 1) {\n      return getDateOnly(this.values[0]).getTime() === date.date.getTime();\n    }\n    if (this.selection === 'multiple') {\n      const start = getDateOnly(this.values[0]);\n      const end = getDateOnly(this.values[this.values.length - 1]);\n      if (this.isWithinRange(date.date, start, end)) {\n        const currentDate = this.values.find(element => element.getTime() === date.date.getTime());\n        return !!currentDate;\n      } else {\n        return false;\n      }\n    } else {\n      return this.isWithinRange(date.date, this.values[0], this.values[this.values.length - 1]);\n    }\n  }\n  isToday(day) {\n    const today = new Date(Date.now());\n    const date = day.date;\n    return date.getFullYear() === today.getFullYear() && date.getMonth() === today.getMonth() && date.getDate() === today.getDate();\n  }\n  isWeekend(date) {\n    const day = date.date.getDay();\n    return day === 0 || day === 6;\n  }\n  isSpecial(day) {\n    if (this.specialDates === null) {\n      return false;\n    }\n    return isDateInRanges(day.date, this.specialDates);\n  }\n  dateClicked(event, day) {\n    event.stopPropagation();\n    this.selectDay(day);\n    this.changeActiveDate(day);\n  }\n  selectDay(day) {\n    if (this.rangePreviewDate) {\n      this.setRangePreviewDate(undefined);\n    }\n    const result = this.selectDate(day.date);\n    if (result) {\n      this.emitEvent('igcChange', {\n        detail: day.date\n      });\n    }\n  }\n  selectDate(value) {\n    var _a;\n    if (this.isDisabled(value)) {\n      return false;\n    }\n    switch (this.selection) {\n      case 'single':\n        if (((_a = this.value) === null || _a === void 0 ? void 0 : _a.getTime()) === value.getTime()) {\n          return false;\n        }\n        this.selectSingle(value);\n        break;\n      case 'multiple':\n        this.selectMultiple(value);\n        break;\n      case 'range':\n        this.selectRange(value);\n        break;\n    }\n    return true;\n  }\n  generateDateRange(start, end) {\n    const result = [];\n    start = getDateOnly(start);\n    end = getDateOnly(end);\n    while (start.getTime() < end.getTime()) {\n      start = this.calendarModel.timedelta(start, TimeDeltaInterval.Day, 1);\n      result.push(start);\n    }\n    return result;\n  }\n  selectRange(value) {\n    var _a;\n    let start;\n    let end;\n    let selectedDates = (_a = this.values) !== null && _a !== void 0 ? _a : [];\n    if (selectedDates.length !== 1) {\n      selectedDates = [value];\n    } else {\n      if (selectedDates[0].getTime() === value.getTime()) {\n        this.values = [];\n        return;\n      }\n      selectedDates.push(value);\n      selectedDates.sort((a, b) => a.valueOf() - b.valueOf());\n      start = selectedDates.shift();\n      end = selectedDates.pop();\n      selectedDates = [start, ...this.generateDateRange(start, end)];\n    }\n    selectedDates = selectedDates.filter(d => !this.isDisabled(d));\n    this.values = [...selectedDates];\n  }\n  selectSingle(value) {\n    this.value = getDateOnly(value);\n  }\n  selectMultiple(value) {\n    var _a;\n    let selectedDates = (_a = this.values) !== null && _a !== void 0 ? _a : [];\n    const valueDateOnly = getDateOnly(value);\n    const newSelection = [];\n    if (selectedDates.every(date => date.getTime() !== valueDateOnly.getTime())) {\n      newSelection.push(valueDateOnly);\n    } else {\n      selectedDates = selectedDates.filter(date => date.getTime() !== valueDateOnly.getTime());\n    }\n    if (newSelection.length > 0) {\n      selectedDates = selectedDates.concat(newSelection);\n    }\n    selectedDates = selectedDates.filter(d => !this.isDisabled(d));\n    selectedDates.sort((a, b) => a.valueOf() - b.valueOf());\n    this.values = [...selectedDates];\n  }\n  changeActiveDate(day) {\n    this.activeDate = day.date;\n    this.emitEvent('igcActiveDateChange', {\n      detail: day\n    });\n  }\n  dateKeyDown(event, day) {\n    if (event.key === 'Enter' || event.key === ' ') {\n      event.preventDefault();\n      this.selectDay(day);\n    }\n  }\n  changeRangePreview(date) {\n    if (this.selection === 'range' && this.values && this.values.length === 1 && !isEqual(this.values[0], date)) {\n      this.setRangePreviewDate(date);\n    }\n  }\n  clearRangePreview() {\n    if (this.rangePreviewDate) {\n      this.setRangePreviewDate(undefined);\n    }\n  }\n  setRangePreviewDate(value) {\n    this.rangePreviewDate = value;\n    this.emitEvent('igcRangePreviewDateChange', {\n      detail: value\n    });\n  }\n  resolveDayItemPartName(day) {\n    const isInactive = day.isNextMonth || day.isPrevMonth;\n    const isHidden = this.hideLeadingDays && day.isPrevMonth || this.hideTrailingDays && day.isNextMonth;\n    const isDisabled = this.isDisabled(day.date);\n    return {\n      date: true,\n      first: this.isFirstInRange(day),\n      last: this.isLastInRange(day),\n      selected: !isDisabled && this.isSelected(day),\n      inactive: isInactive,\n      hidden: isHidden,\n      current: this.isToday(day),\n      weekend: this.isWeekend(day),\n      range: this.selection === 'range' && this.isRangeDate(day.date),\n      special: this.isSpecial(day),\n      disabled: isHidden || isDisabled,\n      single: this.selection !== 'range',\n      preview: this.isRangePreview(day.date)\n    };\n  }\n  renderWeekHeaders() {\n    return html`<div role=\"row\" part=\"days-row first\">\n      ${this.showWeekNumbers ? html`<span role=\"columnheader\" part=\"label week-number first\">\n            <span part=\"week-number-inner first\"\n              >${this.resourceStrings.weekLabel}</span\n            >\n          </span>` : ''}\n      ${this.generateWeekHeader().map(weekday => html`<span\n          role=\"columnheader\"\n          part=\"label\"\n          aria-label=${weekday.ariaLabel}\n        >\n          <span part=\"label-inner\">${this.titleCase(weekday.label)}</span>\n        </span> `)}\n    </div>`;\n  }\n  renderDates() {\n    return this.dates.map((week, i) => {\n      const last = i === this.dates.length - 1;\n      return html`<div role=\"row\" part=\"days-row\">\n        ${this.showWeekNumbers ? html`<span\n              role=\"rowheader\"\n              part=${partNameMap({\n        'week-number': true,\n        last\n      })}\n            >\n              <span part=${partNameMap({\n        'week-number-inner': true,\n        last\n      })}\n                >${this.getWeekNumber(week[0].date)}</span\n              >\n            </span>` : ''}\n        ${week.map(day => this.renderDateItem(day))}\n      </div>`;\n    });\n  }\n  dayLabelFormatter(value) {\n    if (this.rangePreviewDate && areEqualDates(this.rangePreviewDate, value.date)) {\n      return this.labelFormatter.formatRange(this.values.at(0), this.rangePreviewDate);\n    }\n    if (this.isFirstInRange(value) || this.isLastInRange(value)) {\n      return this.labelFormatter.formatRange(this.values.at(0), this.values.at(-1));\n    }\n    return this.labelFormatter.format(value.date);\n  }\n  renderDateItem(day) {\n    const datePartName = partNameMap(this.resolveDayItemPartName(day));\n    const dateInnerPartName = datePartName.replace('date', 'date-inner');\n    return html`<span part=${datePartName}>\n      <span\n        part=${dateInnerPartName}\n        role=\"gridcell\"\n        aria-label=${this.dayLabelFormatter(day)}\n        aria-selected=${this.isSelected(day)}\n        aria-disabled=${this.isDisabled(day.date)}\n        tabindex=${this.active && areEqualDates(this.activeDate, day.date) ? 0 : -1}\n        @click=${event => this.dateClicked(event, day)}\n        @focus=${() => this.changeRangePreview(day.date)}\n        @blur=${() => this.clearRangePreview()}\n        @keydown=${event => this.dateKeyDown(event, day)}\n        @mouseenter=${() => this.changeRangePreview(day.date)}\n        @mouseleave=${() => this.clearRangePreview()}\n        >${this.formattedDate(day.date)}</span\n      >\n    </span>`;\n  }\n  render() {\n    return html`${this.renderWeekHeaders()} ${this.renderDates()}`;\n  }\n};\nIgcDaysViewComponent.tagName = 'igc-days-view';\nIgcDaysViewComponent.styles = styles;\n__decorate([query('[tabindex=\"0\"]')], IgcDaysViewComponent.prototype, \"activeDay\", void 0);\n__decorate([property({\n  type: Boolean,\n  attribute: 'hide-leading-days'\n})], IgcDaysViewComponent.prototype, \"hideLeadingDays\", void 0);\n__decorate([property({\n  type: Boolean,\n  attribute: 'hide-trailing-days'\n})], IgcDaysViewComponent.prototype, \"hideTrailingDays\", void 0);\n__decorate([property({\n  type: Boolean\n})], IgcDaysViewComponent.prototype, \"active\", void 0);\n__decorate([property({\n  attribute: false\n})], IgcDaysViewComponent.prototype, \"rangePreviewDate\", void 0);\n__decorate([property({\n  attribute: 'week-day-format'\n})], IgcDaysViewComponent.prototype, \"weekDayFormat\", void 0);\n__decorate([property({\n  attribute: false\n})], IgcDaysViewComponent.prototype, \"resourceStrings\", void 0);\n__decorate([watch('weekDayFormat'), watch('locale')], IgcDaysViewComponent.prototype, \"formattersChange\", null);\n__decorate([watch('weekStart'), watch('activeDate')], IgcDaysViewComponent.prototype, \"datesChange\", null);\nIgcDaysViewComponent = __decorate([blazorSuppressComponent, blazorIndirectRender, themes({\n  bootstrap,\n  fluent\n})], IgcDaysViewComponent);\nexport default IgcDaysViewComponent;","map":{"version":3,"names":["html","property","query","themes","blazorIndirectRender","blazorSuppressComponent","watch","IgcCalendarResourceStringEN","EventEmitterMixin","partNameMap","IgcCalendarBaseComponent","DateRangeType","isDateInRanges","TimeDeltaInterval","areEqualDates","getDateOnly","isEqual","styles","bootstrap","fluent","IgcDaysViewComponent","formattersChange","initFormatters","datesChange","dates","getCalendarMonth","constructor","hideLeadingDays","hideTrailingDays","active","weekDayFormat","resourceStrings","setAttribute","focusActiveDate","activeDay","focus","formatterWeekday","Intl","DateTimeFormat","locale","weekday","labelFormatter","year","month","day","generateWeekHeader","dayNames","rv","calendarModel","monthdatescalendar","activeDate","getFullYear","getMonth","push","label","format","date","ariaLabel","toLocaleString","titleCase","str","charAt","toUpperCase","slice","getWeekNumber","formattedDate","value","getDate","isSingleSelection","selection","isLastInRange","values","length","lastDate","rangePreviewDate","isFirstInRange","firstDate","isDisabled","disabledDates","isWithinRange","min","max","type","Between","dateRange","isRangeDate","isRangePreview","isSelected","getTime","start","end","currentDate","find","element","isToday","today","Date","now","isWeekend","getDay","isSpecial","specialDates","dateClicked","event","stopPropagation","selectDay","changeActiveDate","setRangePreviewDate","undefined","result","selectDate","emitEvent","detail","_a","selectSingle","selectMultiple","selectRange","generateDateRange","timedelta","Day","selectedDates","sort","a","b","valueOf","shift","pop","filter","d","valueDateOnly","newSelection","every","concat","dateKeyDown","key","preventDefault","changeRangePreview","clearRangePreview","resolveDayItemPartName","isInactive","isNextMonth","isPrevMonth","isHidden","first","last","selected","inactive","hidden","current","weekend","range","special","disabled","single","preview","renderWeekHeaders","showWeekNumbers","weekLabel","map","renderDates","week","i","renderDateItem","dayLabelFormatter","formatRange","at","datePartName","dateInnerPartName","replace","render","tagName","__decorate","Boolean","attribute"],"sources":["../../../../src/components/calendar/days-view/days-view.ts"],"sourcesContent":["import { html } from 'lit';\nimport { property, query } from 'lit/decorators.js';\nimport { themes } from '../../../theming/theming-decorator.js';\nimport { blazorIndirectRender } from '../../common/decorators/blazorIndirectRender.js';\nimport { blazorSuppressComponent } from '../../common/decorators/blazorSuppressComponent.js';\nimport { watch } from '../../common/decorators/watch.js';\nimport {\n  IgcCalendarResourceStringEN,\n  IgcCalendarResourceStrings,\n} from '../../common/i18n/calendar.resources.js';\nimport { Constructor } from '../../common/mixins/constructor.js';\nimport { EventEmitterMixin } from '../../common/mixins/event-emitter.js';\nimport { partNameMap } from '../../common/util.js';\nimport {\n  IgcCalendarBaseComponent,\n  IgcCalendarBaseEventMap,\n} from '../common/calendar-base.js';\nimport {\n  DateRangeType,\n  ICalendarDate,\n  isDateInRanges,\n  TimeDeltaInterval,\n} from '../common/calendar.model.js';\nimport { areEqualDates, getDateOnly, isEqual } from '../common/utils.js';\nimport { styles as bootstrap } from '../themes/bootstrap/days-view.bootstrap.css.js';\nimport { styles } from '../themes/days-view.base.css.js';\nimport { styles as fluent } from '../themes/fluent/days-view.fluent.css.js';\n\nexport interface IgcDaysViewEventMap extends IgcCalendarBaseEventMap {\n  igcActiveDateChange: CustomEvent<ICalendarDate>;\n  igcRangePreviewDateChange: CustomEvent<Date>;\n}\n\n/**\n * Instantiate a days view as a separate component in the calendar.\n *\n * @element igc-days-view\n *\n * @fires igcActiveDateChange - Emitted when the active date changes.\n * @fires igcRangePreviewDateChange - Emitted when the range preview date changes.\n *\n * @csspart days-row - The days row container.\n * @csspart label - The label container.\n * @csspart label-inner - The inner label container.\n * @csspart week-number - The week number container.\n * @csspart week-number-inner - The inner week number container.\n */\n@blazorSuppressComponent\n@blazorIndirectRender\n@themes({\n  bootstrap,\n  fluent,\n})\nexport default class IgcDaysViewComponent extends EventEmitterMixin<\n  IgcDaysViewEventMap,\n  Constructor<IgcCalendarBaseComponent>\n>(IgcCalendarBaseComponent) {\n  public static readonly tagName = 'igc-days-view';\n  public static styles = styles;\n  private labelFormatter!: Intl.DateTimeFormat;\n  private formatterWeekday!: Intl.DateTimeFormat;\n  private dates!: ICalendarDate[][];\n\n  @query('[tabindex=\"0\"]')\n  private activeDay!: HTMLElement;\n\n  /** Controls the visibility of the leading dates that do not belong to the current month. */\n  @property({ type: Boolean, attribute: 'hide-leading-days' })\n  public hideLeadingDays = false;\n\n  /** Controls the visibility of the trailing dates that do not belong to the current month. */\n  @property({ type: Boolean, attribute: 'hide-trailing-days' })\n  public hideTrailingDays = false;\n\n  /** Gets/sets the active state of the days view. */\n  @property({ type: Boolean })\n  public active = false;\n\n  /** The range preview date. */\n  @property({ attribute: false })\n  public rangePreviewDate?: Date;\n\n  /** The format of the days. Defaults to narrow. */\n  @property({ attribute: 'week-day-format' })\n  public weekDayFormat: 'long' | 'short' | 'narrow' | undefined = 'narrow';\n\n  /** The resource strings. */\n  @property({ attribute: false })\n  public resourceStrings: IgcCalendarResourceStrings =\n    IgcCalendarResourceStringEN;\n\n  @watch('weekDayFormat')\n  @watch('locale')\n  protected formattersChange() {\n    this.initFormatters();\n  }\n\n  @watch('weekStart')\n  @watch('activeDate')\n  protected datesChange() {\n    this.dates = this.getCalendarMonth();\n  }\n\n  constructor() {\n    super();\n    this.setAttribute('role', 'grid');\n    this.initFormatters();\n  }\n\n  /** Focuses the active date. */\n  public focusActiveDate() {\n    this.activeDay.focus();\n  }\n\n  private initFormatters() {\n    this.formatterWeekday = new Intl.DateTimeFormat(this.locale, {\n      weekday: this.weekDayFormat,\n    });\n    this.labelFormatter = new Intl.DateTimeFormat(this.locale, {\n      weekday: 'long',\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric',\n    });\n  }\n\n  private generateWeekHeader(): { label: string; ariaLabel: string }[] {\n    const dayNames = [];\n    const rv = this.calendarModel.monthdatescalendar(\n      this.activeDate.getFullYear(),\n      this.activeDate.getMonth()\n    )[0];\n    for (const day of rv) {\n      dayNames.push({\n        label: this.formatterWeekday.format(day.date),\n        ariaLabel: day.date.toLocaleString(this.locale, { weekday: 'long' }),\n      });\n    }\n\n    return dayNames;\n  }\n\n  private getCalendarMonth(): ICalendarDate[][] {\n    return this.calendarModel.monthdatescalendar(\n      this.activeDate.getFullYear(),\n      this.activeDate.getMonth(),\n      true\n    );\n  }\n\n  private titleCase(str: string) {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n  }\n\n  private getWeekNumber(date: Date): number {\n    return this.calendarModel.getWeekNumber(date);\n  }\n\n  private formattedDate(value: Date): string {\n    return `${value.getDate()}`;\n  }\n\n  private get isSingleSelection(): boolean {\n    return this.selection !== 'range';\n  }\n\n  private isLastInRange(date: ICalendarDate): boolean {\n    if (this.isSingleSelection || !this.values || this.values.length === 0) {\n      return false;\n    }\n\n    const dates = this.values;\n    let lastDate = dates[dates.length - 1];\n\n    if (this.rangePreviewDate) {\n      if (this.rangePreviewDate > lastDate) {\n        lastDate = this.rangePreviewDate;\n      }\n    }\n\n    return isEqual(lastDate, date.date);\n  }\n\n  private isFirstInRange(date: ICalendarDate): boolean {\n    if (this.isSingleSelection || !this.values || this.values.length === 0) {\n      return false;\n    }\n\n    const dates = this.values;\n    let firstDate = dates[0];\n\n    if (this.rangePreviewDate) {\n      if (this.rangePreviewDate < firstDate) {\n        firstDate = this.rangePreviewDate;\n      }\n    }\n\n    return isEqual(firstDate, date.date);\n  }\n\n  private isDisabled(date: Date): boolean {\n    if (!this.disabledDates) {\n      return false;\n    }\n\n    return isDateInRanges(date, this.disabledDates);\n  }\n\n  private isWithinRange(date: Date, min: Date, max: Date): boolean {\n    return isDateInRanges(date, [\n      {\n        type: DateRangeType.Between,\n        dateRange: [min, max],\n      },\n    ]);\n  }\n\n  private isRangeDate(date: Date) {\n    if (\n      this.selection !== 'range' ||\n      !this.values ||\n      this.values.length === 0\n    ) {\n      return false;\n    }\n\n    const dates = this.values;\n    const min = dates[0];\n    let max;\n\n    if (dates.length === 1) {\n      if (!this.rangePreviewDate) {\n        return false;\n      }\n\n      max = this.rangePreviewDate;\n    } else {\n      max = dates[dates.length - 1];\n    }\n\n    return isDateInRanges(date, [\n      {\n        type: DateRangeType.Between,\n        dateRange: [min, max],\n      },\n    ]);\n  }\n\n  private isRangePreview(date: Date) {\n    if (\n      this.selection === 'range' &&\n      this.values &&\n      this.values.length > 0 &&\n      this.rangePreviewDate\n    ) {\n      return isDateInRanges(date, [\n        {\n          type: DateRangeType.Between,\n          dateRange: [this.values[0], this.rangePreviewDate],\n        },\n      ]);\n    }\n\n    return false;\n  }\n\n  private isSelected(date: ICalendarDate) {\n    if (this.isDisabled(date.date)) {\n      return false;\n    }\n\n    if (this.selection === 'single') {\n      if (!this.value) {\n        return false;\n      }\n      return getDateOnly(this.value).getTime() === date.date.getTime();\n    }\n\n    if (!this.values || this.values.length === 0) {\n      return false;\n    }\n\n    if (this.selection === 'range' && this.values.length === 1) {\n      return getDateOnly(this.values[0]).getTime() === date.date.getTime();\n    }\n\n    if (this.selection === 'multiple') {\n      const start = getDateOnly(this.values[0]);\n      const end = getDateOnly(this.values[this.values.length - 1]);\n\n      if (this.isWithinRange(date.date, start, end)) {\n        const currentDate = this.values.find(\n          (element) => element.getTime() === date.date.getTime()\n        );\n        return !!currentDate;\n      } else {\n        return false;\n      }\n    } else {\n      return this.isWithinRange(\n        date.date,\n        this.values[0],\n        this.values[this.values.length - 1]\n      );\n    }\n  }\n\n  private isToday(day: ICalendarDate): boolean {\n    const today = new Date(Date.now());\n    const date = day.date;\n\n    // TODO\n    // if (date.getDate() === today.getDate()) {\n    //     this.nativeElement.setAttribute('aria-current', 'date');\n    // }\n\n    return (\n      date.getFullYear() === today.getFullYear() &&\n      date.getMonth() === today.getMonth() &&\n      date.getDate() === today.getDate()\n    );\n  }\n\n  private isWeekend(date: ICalendarDate): boolean {\n    const day = date.date.getDay();\n    return day === 0 || day === 6;\n  }\n\n  private isSpecial(day: ICalendarDate): boolean {\n    if (this.specialDates === null) {\n      return false;\n    }\n\n    return isDateInRanges(day.date, this.specialDates);\n  }\n\n  private dateClicked(event: Event, day: ICalendarDate) {\n    event.stopPropagation();\n\n    this.selectDay(day);\n\n    this.changeActiveDate(day);\n  }\n\n  private selectDay(day: ICalendarDate) {\n    if (this.rangePreviewDate) {\n      this.setRangePreviewDate(undefined);\n    }\n\n    const result = this.selectDate(day.date);\n\n    if (result) {\n      this.emitEvent('igcChange', { detail: day.date });\n    }\n  }\n\n  private selectDate(value: Date) {\n    if (this.isDisabled(value)) {\n      return false;\n    }\n\n    switch (this.selection) {\n      case 'single':\n        if (this.value?.getTime() === value.getTime()) {\n          return false;\n        }\n        this.selectSingle(value);\n        break;\n      case 'multiple':\n        this.selectMultiple(value);\n        break;\n      case 'range':\n        this.selectRange(value);\n        break;\n    }\n\n    return true;\n  }\n\n  private generateDateRange(start: Date, end: Date): Date[] {\n    const result = [];\n    start = getDateOnly(start);\n    end = getDateOnly(end);\n    while (start.getTime() < end.getTime()) {\n      start = this.calendarModel.timedelta(start, TimeDeltaInterval.Day, 1);\n      result.push(start);\n    }\n\n    return result;\n  }\n\n  private selectRange(value: Date) {\n    let start: Date;\n    let end: Date;\n    let selectedDates: Date[] = (this.values ?? []) as Date[];\n\n    if (selectedDates.length !== 1) {\n      // start new range\n      selectedDates = [value];\n    } else {\n      if (selectedDates[0].getTime() === value.getTime()) {\n        this.values = [];\n        return;\n      }\n\n      selectedDates.push(value);\n      selectedDates.sort((a: Date, b: Date) => a.valueOf() - b.valueOf());\n\n      start = selectedDates.shift()!;\n      end = selectedDates.pop()!;\n      selectedDates = [start, ...this.generateDateRange(start, end)];\n    }\n\n    // exclude disabled dates\n    selectedDates = selectedDates.filter((d) => !this.isDisabled(d));\n\n    this.values = [...selectedDates];\n  }\n\n  private selectSingle(value: Date) {\n    this.value = getDateOnly(value);\n  }\n\n  private selectMultiple(value: Date) {\n    let selectedDates: Date[] = (this.values ?? []) as Date[];\n    const valueDateOnly = getDateOnly(value);\n    const newSelection = [];\n\n    if (\n      selectedDates.every(\n        (date: Date) => date.getTime() !== valueDateOnly.getTime()\n      )\n    ) {\n      newSelection.push(valueDateOnly);\n    } else {\n      selectedDates = selectedDates.filter(\n        (date: Date) => date.getTime() !== valueDateOnly.getTime()\n      );\n    }\n\n    if (newSelection.length > 0) {\n      selectedDates = selectedDates.concat(newSelection);\n    }\n\n    selectedDates = selectedDates.filter((d) => !this.isDisabled(d));\n    selectedDates.sort((a: Date, b: Date) => a.valueOf() - b.valueOf());\n    this.values = [...selectedDates];\n  }\n\n  private changeActiveDate(day: ICalendarDate) {\n    this.activeDate = day.date;\n    this.emitEvent('igcActiveDateChange', { detail: day });\n  }\n\n  private dateKeyDown(event: KeyboardEvent, day: ICalendarDate) {\n    if (event.key === 'Enter' || event.key === ' ') {\n      event.preventDefault();\n      this.selectDay(day);\n    }\n  }\n\n  private changeRangePreview(date: Date) {\n    if (\n      this.selection === 'range' &&\n      this.values &&\n      this.values.length === 1 &&\n      !isEqual(this.values[0], date)\n    ) {\n      this.setRangePreviewDate(date);\n    }\n  }\n\n  private clearRangePreview() {\n    if (this.rangePreviewDate) {\n      this.setRangePreviewDate(undefined);\n    }\n  }\n\n  private setRangePreviewDate(value?: Date) {\n    this.rangePreviewDate = value;\n    this.emitEvent('igcRangePreviewDateChange', { detail: value });\n  }\n\n  private resolveDayItemPartName(day: ICalendarDate) {\n    const isInactive = day.isNextMonth || day.isPrevMonth;\n    const isHidden =\n      (this.hideLeadingDays && day.isPrevMonth) ||\n      (this.hideTrailingDays && day.isNextMonth);\n    const isDisabled = this.isDisabled(day.date);\n\n    return {\n      date: true,\n      first: this.isFirstInRange(day),\n      last: this.isLastInRange(day),\n      selected: !isDisabled && this.isSelected(day),\n      inactive: isInactive,\n      hidden: isHidden,\n      current: this.isToday(day),\n      weekend: this.isWeekend(day),\n      range: this.selection === 'range' && this.isRangeDate(day.date),\n      special: this.isSpecial(day),\n      disabled: isHidden || isDisabled,\n      single: this.selection !== 'range',\n      preview: this.isRangePreview(day.date),\n    };\n  }\n\n  private renderWeekHeaders() {\n    return html`<div role=\"row\" part=\"days-row first\">\n      ${this.showWeekNumbers\n        ? html`<span role=\"columnheader\" part=\"label week-number first\">\n            <span part=\"week-number-inner first\"\n              >${this.resourceStrings.weekLabel}</span\n            >\n          </span>`\n        : ''}\n      ${this.generateWeekHeader().map(\n        (weekday) => html`<span\n          role=\"columnheader\"\n          part=\"label\"\n          aria-label=${weekday.ariaLabel}\n        >\n          <span part=\"label-inner\">${this.titleCase(weekday.label)}</span>\n        </span> `\n      )}\n    </div>`;\n  }\n\n  private renderDates() {\n    return this.dates.map((week, i) => {\n      const last = i === this.dates.length - 1;\n\n      return html`<div role=\"row\" part=\"days-row\">\n        ${this.showWeekNumbers\n          ? html`<span\n              role=\"rowheader\"\n              part=${partNameMap({ 'week-number': true, last })}\n            >\n              <span part=${partNameMap({ 'week-number-inner': true, last })}\n                >${this.getWeekNumber(week[0].date)}</span\n              >\n            </span>`\n          : ''}\n        ${week.map((day) => this.renderDateItem(day))}\n      </div>`;\n    });\n  }\n\n  protected dayLabelFormatter(value: ICalendarDate) {\n    // Range selection in progress\n    if (\n      this.rangePreviewDate &&\n      areEqualDates(this.rangePreviewDate, value.date)\n    ) {\n      return (this.labelFormatter as any).formatRange(\n        this.values!.at(0),\n        this.rangePreviewDate\n      );\n    }\n\n    // Range selection finished\n    if (this.isFirstInRange(value) || this.isLastInRange(value)) {\n      return (this.labelFormatter as any).formatRange(\n        this.values!.at(0),\n        this.values!.at(-1)\n      );\n    }\n\n    // Default\n    return this.labelFormatter.format(value.date);\n  }\n\n  private renderDateItem(day: ICalendarDate) {\n    const datePartName = partNameMap(this.resolveDayItemPartName(day));\n    const dateInnerPartName = datePartName.replace('date', 'date-inner');\n\n    return html`<span part=${datePartName}>\n      <span\n        part=${dateInnerPartName}\n        role=\"gridcell\"\n        aria-label=${this.dayLabelFormatter(day)}\n        aria-selected=${this.isSelected(day)}\n        aria-disabled=${this.isDisabled(day.date)}\n        tabindex=${this.active && areEqualDates(this.activeDate, day.date)\n          ? 0\n          : -1}\n        @click=${(event: MouseEvent) => this.dateClicked(event, day)}\n        @focus=${() => this.changeRangePreview(day.date)}\n        @blur=${() => this.clearRangePreview()}\n        @keydown=${(event: KeyboardEvent) => this.dateKeyDown(event, day)}\n        @mouseenter=${() => this.changeRangePreview(day.date)}\n        @mouseleave=${() => this.clearRangePreview()}\n        >${this.formattedDate(day.date)}</span\n      >\n    </span>`;\n  }\n\n  protected override render() {\n    return html`${this.renderWeekHeaders()} ${this.renderDates()}`;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'igc-days-view': IgcDaysViewComponent;\n  }\n}\n"],"mappings":";;;;;;;;AAAA,SAASA,IAAI,QAAQ,KAAK;AAC1B,SAASC,QAAQ,EAAEC,KAAK,QAAQ,mBAAmB;AACnD,SAASC,MAAM,QAAQ,uCAAuC;AAC9D,SAASC,oBAAoB,QAAQ,iDAAiD;AACtF,SAASC,uBAAuB,QAAQ,oDAAoD;AAC5F,SAASC,KAAK,QAAQ,kCAAkC;AACxD,SACEC,2BAA2B,QAEtB,yCAAyC;AAEhD,SAASC,iBAAiB,QAAQ,sCAAsC;AACxE,SAASC,WAAW,QAAQ,sBAAsB;AAClD,SACEC,wBAAwB,QAEnB,4BAA4B;AACnC,SACEC,aAAa,EAEbC,cAAc,EACdC,iBAAiB,QACZ,6BAA6B;AACpC,SAASC,aAAa,EAAEC,WAAW,EAAEC,OAAO,QAAQ,oBAAoB;AACxE,SAASC,MAAM,IAAIC,SAAS,QAAQ,gDAAgD;AACpF,SAASD,MAAM,QAAQ,iCAAiC;AACxD,SAASA,MAAM,IAAIE,MAAM,QAAQ,0CAA0C;AA2B5D,IAAMC,oBAAoB,GAA1B,MAAMA,oBAAqB,SAAQZ,iBAAiB,CAGjEE,wBAAwB,CAAC;EAqCfW,gBAAgBA,CAAA;IACxB,IAAI,CAACC,cAAc,EAAE;EACvB;EAIUC,WAAWA,CAAA;IACnB,IAAI,CAACC,KAAK,GAAG,IAAI,CAACC,gBAAgB,EAAE;EACtC;EAEAC,YAAA;IACE,KAAK,EAAE;IApCF,KAAAC,eAAe,GAAG,KAAK;IAIvB,KAAAC,gBAAgB,GAAG,KAAK;IAIxB,KAAAC,MAAM,GAAG,KAAK;IAQd,KAAAC,aAAa,GAA4C,QAAQ;IAIjE,KAAAC,eAAe,GACpBxB,2BAA2B;IAgB3B,IAAI,CAACyB,YAAY,CAAC,MAAM,EAAE,MAAM,CAAC;IACjC,IAAI,CAACV,cAAc,EAAE;EACvB;EAGOW,eAAeA,CAAA;IACpB,IAAI,CAACC,SAAS,CAACC,KAAK,EAAE;EACxB;EAEQb,cAAcA,CAAA;IACpB,IAAI,CAACc,gBAAgB,GAAG,IAAIC,IAAI,CAACC,cAAc,CAAC,IAAI,CAACC,MAAM,EAAE;MAC3DC,OAAO,EAAE,IAAI,CAACV;KACf,CAAC;IACF,IAAI,CAACW,cAAc,GAAG,IAAIJ,IAAI,CAACC,cAAc,CAAC,IAAI,CAACC,MAAM,EAAE;MACzDC,OAAO,EAAE,MAAM;MACfE,IAAI,EAAE,SAAS;MACfC,KAAK,EAAE,MAAM;MACbC,GAAG,EAAE;KACN,CAAC;EACJ;EAEQC,kBAAkBA,CAAA;IACxB,MAAMC,QAAQ,GAAG,EAAE;IACnB,MAAMC,EAAE,GAAG,IAAI,CAACC,aAAa,CAACC,kBAAkB,CAC9C,IAAI,CAACC,UAAU,CAACC,WAAW,EAAE,EAC7B,IAAI,CAACD,UAAU,CAACE,QAAQ,EAAE,CAC3B,CAAC,CAAC,CAAC;IACJ,KAAK,MAAMR,GAAG,IAAIG,EAAE,EAAE;MACpBD,QAAQ,CAACO,IAAI,CAAC;QACZC,KAAK,EAAE,IAAI,CAAClB,gBAAgB,CAACmB,MAAM,CAACX,GAAG,CAACY,IAAI,CAAC;QAC7CC,SAAS,EAAEb,GAAG,CAACY,IAAI,CAACE,cAAc,CAAC,IAAI,CAACnB,MAAM,EAAE;UAAEC,OAAO,EAAE;QAAM,CAAE;OACpE,CAAC;;IAGJ,OAAOM,QAAQ;EACjB;EAEQrB,gBAAgBA,CAAA;IACtB,OAAO,IAAI,CAACuB,aAAa,CAACC,kBAAkB,CAC1C,IAAI,CAACC,UAAU,CAACC,WAAW,EAAE,EAC7B,IAAI,CAACD,UAAU,CAACE,QAAQ,EAAE,EAC1B,IAAI,CACL;EACH;EAEQO,SAASA,CAACC,GAAW;IAC3B,OAAOA,GAAG,CAACC,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,EAAE,GAAGF,GAAG,CAACG,KAAK,CAAC,CAAC,CAAC;EACnD;EAEQC,aAAaA,CAACR,IAAU;IAC9B,OAAO,IAAI,CAACR,aAAa,CAACgB,aAAa,CAACR,IAAI,CAAC;EAC/C;EAEQS,aAAaA,CAACC,KAAW;IAC/B,OAAO,GAAGA,KAAK,CAACC,OAAO,EAAE,EAAE;EAC7B;EAEA,IAAYC,iBAAiBA,CAAA;IAC3B,OAAO,IAAI,CAACC,SAAS,KAAK,OAAO;EACnC;EAEQC,aAAaA,CAACd,IAAmB;IACvC,IAAI,IAAI,CAACY,iBAAiB,IAAI,CAAC,IAAI,CAACG,MAAM,IAAI,IAAI,CAACA,MAAM,CAACC,MAAM,KAAK,CAAC,EAAE;MACtE,OAAO,KAAK;;IAGd,MAAMhD,KAAK,GAAG,IAAI,CAAC+C,MAAM;IACzB,IAAIE,QAAQ,GAAGjD,KAAK,CAACA,KAAK,CAACgD,MAAM,GAAG,CAAC,CAAC;IAEtC,IAAI,IAAI,CAACE,gBAAgB,EAAE;MACzB,IAAI,IAAI,CAACA,gBAAgB,GAAGD,QAAQ,EAAE;QACpCA,QAAQ,GAAG,IAAI,CAACC,gBAAgB;;;IAIpC,OAAO1D,OAAO,CAACyD,QAAQ,EAAEjB,IAAI,CAACA,IAAI,CAAC;EACrC;EAEQmB,cAAcA,CAACnB,IAAmB;IACxC,IAAI,IAAI,CAACY,iBAAiB,IAAI,CAAC,IAAI,CAACG,MAAM,IAAI,IAAI,CAACA,MAAM,CAACC,MAAM,KAAK,CAAC,EAAE;MACtE,OAAO,KAAK;;IAGd,MAAMhD,KAAK,GAAG,IAAI,CAAC+C,MAAM;IACzB,IAAIK,SAAS,GAAGpD,KAAK,CAAC,CAAC,CAAC;IAExB,IAAI,IAAI,CAACkD,gBAAgB,EAAE;MACzB,IAAI,IAAI,CAACA,gBAAgB,GAAGE,SAAS,EAAE;QACrCA,SAAS,GAAG,IAAI,CAACF,gBAAgB;;;IAIrC,OAAO1D,OAAO,CAAC4D,SAAS,EAAEpB,IAAI,CAACA,IAAI,CAAC;EACtC;EAEQqB,UAAUA,CAACrB,IAAU;IAC3B,IAAI,CAAC,IAAI,CAACsB,aAAa,EAAE;MACvB,OAAO,KAAK;;IAGd,OAAOlE,cAAc,CAAC4C,IAAI,EAAE,IAAI,CAACsB,aAAa,CAAC;EACjD;EAEQC,aAAaA,CAACvB,IAAU,EAAEwB,GAAS,EAAEC,GAAS;IACpD,OAAOrE,cAAc,CAAC4C,IAAI,EAAE,CAC1B;MACE0B,IAAI,EAAEvE,aAAa,CAACwE,OAAO;MAC3BC,SAAS,EAAE,CAACJ,GAAG,EAAEC,GAAG;KACrB,CACF,CAAC;EACJ;EAEQI,WAAWA,CAAC7B,IAAU;IAC5B,IACE,IAAI,CAACa,SAAS,KAAK,OAAO,IAC1B,CAAC,IAAI,CAACE,MAAM,IACZ,IAAI,CAACA,MAAM,CAACC,MAAM,KAAK,CAAC,EACxB;MACA,OAAO,KAAK;;IAGd,MAAMhD,KAAK,GAAG,IAAI,CAAC+C,MAAM;IACzB,MAAMS,GAAG,GAAGxD,KAAK,CAAC,CAAC,CAAC;IACpB,IAAIyD,GAAG;IAEP,IAAIzD,KAAK,CAACgD,MAAM,KAAK,CAAC,EAAE;MACtB,IAAI,CAAC,IAAI,CAACE,gBAAgB,EAAE;QAC1B,OAAO,KAAK;;MAGdO,GAAG,GAAG,IAAI,CAACP,gBAAgB;KAC5B,MAAM;MACLO,GAAG,GAAGzD,KAAK,CAACA,KAAK,CAACgD,MAAM,GAAG,CAAC,CAAC;;IAG/B,OAAO5D,cAAc,CAAC4C,IAAI,EAAE,CAC1B;MACE0B,IAAI,EAAEvE,aAAa,CAACwE,OAAO;MAC3BC,SAAS,EAAE,CAACJ,GAAG,EAAEC,GAAG;KACrB,CACF,CAAC;EACJ;EAEQK,cAAcA,CAAC9B,IAAU;IAC/B,IACE,IAAI,CAACa,SAAS,KAAK,OAAO,IAC1B,IAAI,CAACE,MAAM,IACX,IAAI,CAACA,MAAM,CAACC,MAAM,GAAG,CAAC,IACtB,IAAI,CAACE,gBAAgB,EACrB;MACA,OAAO9D,cAAc,CAAC4C,IAAI,EAAE,CAC1B;QACE0B,IAAI,EAAEvE,aAAa,CAACwE,OAAO;QAC3BC,SAAS,EAAE,CAAC,IAAI,CAACb,MAAM,CAAC,CAAC,CAAC,EAAE,IAAI,CAACG,gBAAgB;OAClD,CACF,CAAC;;IAGJ,OAAO,KAAK;EACd;EAEQa,UAAUA,CAAC/B,IAAmB;IACpC,IAAI,IAAI,CAACqB,UAAU,CAACrB,IAAI,CAACA,IAAI,CAAC,EAAE;MAC9B,OAAO,KAAK;;IAGd,IAAI,IAAI,CAACa,SAAS,KAAK,QAAQ,EAAE;MAC/B,IAAI,CAAC,IAAI,CAACH,KAAK,EAAE;QACf,OAAO,KAAK;;MAEd,OAAOnD,WAAW,CAAC,IAAI,CAACmD,KAAK,CAAC,CAACsB,OAAO,EAAE,KAAKhC,IAAI,CAACA,IAAI,CAACgC,OAAO,EAAE;;IAGlE,IAAI,CAAC,IAAI,CAACjB,MAAM,IAAI,IAAI,CAACA,MAAM,CAACC,MAAM,KAAK,CAAC,EAAE;MAC5C,OAAO,KAAK;;IAGd,IAAI,IAAI,CAACH,SAAS,KAAK,OAAO,IAAI,IAAI,CAACE,MAAM,CAACC,MAAM,KAAK,CAAC,EAAE;MAC1D,OAAOzD,WAAW,CAAC,IAAI,CAACwD,MAAM,CAAC,CAAC,CAAC,CAAC,CAACiB,OAAO,EAAE,KAAKhC,IAAI,CAACA,IAAI,CAACgC,OAAO,EAAE;;IAGtE,IAAI,IAAI,CAACnB,SAAS,KAAK,UAAU,EAAE;MACjC,MAAMoB,KAAK,GAAG1E,WAAW,CAAC,IAAI,CAACwD,MAAM,CAAC,CAAC,CAAC,CAAC;MACzC,MAAMmB,GAAG,GAAG3E,WAAW,CAAC,IAAI,CAACwD,MAAM,CAAC,IAAI,CAACA,MAAM,CAACC,MAAM,GAAG,CAAC,CAAC,CAAC;MAE5D,IAAI,IAAI,CAACO,aAAa,CAACvB,IAAI,CAACA,IAAI,EAAEiC,KAAK,EAAEC,GAAG,CAAC,EAAE;QAC7C,MAAMC,WAAW,GAAG,IAAI,CAACpB,MAAM,CAACqB,IAAI,CACjCC,OAAO,IAAKA,OAAO,CAACL,OAAO,EAAE,KAAKhC,IAAI,CAACA,IAAI,CAACgC,OAAO,EAAE,CACvD;QACD,OAAO,CAAC,CAACG,WAAW;OACrB,MAAM;QACL,OAAO,KAAK;;KAEf,MAAM;MACL,OAAO,IAAI,CAACZ,aAAa,CACvBvB,IAAI,CAACA,IAAI,EACT,IAAI,CAACe,MAAM,CAAC,CAAC,CAAC,EACd,IAAI,CAACA,MAAM,CAAC,IAAI,CAACA,MAAM,CAACC,MAAM,GAAG,CAAC,CAAC,CACpC;;EAEL;EAEQsB,OAAOA,CAAClD,GAAkB;IAChC,MAAMmD,KAAK,GAAG,IAAIC,IAAI,CAACA,IAAI,CAACC,GAAG,EAAE,CAAC;IAClC,MAAMzC,IAAI,GAAGZ,GAAG,CAACY,IAAI;IAOrB,OACEA,IAAI,CAACL,WAAW,EAAE,KAAK4C,KAAK,CAAC5C,WAAW,EAAE,IAC1CK,IAAI,CAACJ,QAAQ,EAAE,KAAK2C,KAAK,CAAC3C,QAAQ,EAAE,IACpCI,IAAI,CAACW,OAAO,EAAE,KAAK4B,KAAK,CAAC5B,OAAO,EAAE;EAEtC;EAEQ+B,SAASA,CAAC1C,IAAmB;IACnC,MAAMZ,GAAG,GAAGY,IAAI,CAACA,IAAI,CAAC2C,MAAM,EAAE;IAC9B,OAAOvD,GAAG,KAAK,CAAC,IAAIA,GAAG,KAAK,CAAC;EAC/B;EAEQwD,SAASA,CAACxD,GAAkB;IAClC,IAAI,IAAI,CAACyD,YAAY,KAAK,IAAI,EAAE;MAC9B,OAAO,KAAK;;IAGd,OAAOzF,cAAc,CAACgC,GAAG,CAACY,IAAI,EAAE,IAAI,CAAC6C,YAAY,CAAC;EACpD;EAEQC,WAAWA,CAACC,KAAY,EAAE3D,GAAkB;IAClD2D,KAAK,CAACC,eAAe,EAAE;IAEvB,IAAI,CAACC,SAAS,CAAC7D,GAAG,CAAC;IAEnB,IAAI,CAAC8D,gBAAgB,CAAC9D,GAAG,CAAC;EAC5B;EAEQ6D,SAASA,CAAC7D,GAAkB;IAClC,IAAI,IAAI,CAAC8B,gBAAgB,EAAE;MACzB,IAAI,CAACiC,mBAAmB,CAACC,SAAS,CAAC;;IAGrC,MAAMC,MAAM,GAAG,IAAI,CAACC,UAAU,CAAClE,GAAG,CAACY,IAAI,CAAC;IAExC,IAAIqD,MAAM,EAAE;MACV,IAAI,CAACE,SAAS,CAAC,WAAW,EAAE;QAAEC,MAAM,EAAEpE,GAAG,CAACY;MAAI,CAAE,CAAC;;EAErD;EAEQsD,UAAUA,CAAC5C,KAAW;;IAC5B,IAAI,IAAI,CAACW,UAAU,CAACX,KAAK,CAAC,EAAE;MAC1B,OAAO,KAAK;;IAGd,QAAQ,IAAI,CAACG,SAAS;MACpB,KAAK,QAAQ;QACX,IAAI,EAAA4C,EAAA,OAAI,CAAC/C,KAAK,cAAA+C,EAAA,uBAAAA,EAAA,CAAEzB,OAAO,EAAE,MAAKtB,KAAK,CAACsB,OAAO,EAAE,EAAE;UAC7C,OAAO,KAAK;;QAEd,IAAI,CAAC0B,YAAY,CAAChD,KAAK,CAAC;QACxB;MACF,KAAK,UAAU;QACb,IAAI,CAACiD,cAAc,CAACjD,KAAK,CAAC;QAC1B;MACF,KAAK,OAAO;QACV,IAAI,CAACkD,WAAW,CAAClD,KAAK,CAAC;QACvB;IAAM;IAGV,OAAO,IAAI;EACb;EAEQmD,iBAAiBA,CAAC5B,KAAW,EAAEC,GAAS;IAC9C,MAAMmB,MAAM,GAAG,EAAE;IACjBpB,KAAK,GAAG1E,WAAW,CAAC0E,KAAK,CAAC;IAC1BC,GAAG,GAAG3E,WAAW,CAAC2E,GAAG,CAAC;IACtB,OAAOD,KAAK,CAACD,OAAO,EAAE,GAAGE,GAAG,CAACF,OAAO,EAAE,EAAE;MACtCC,KAAK,GAAG,IAAI,CAACzC,aAAa,CAACsE,SAAS,CAAC7B,KAAK,EAAE5E,iBAAiB,CAAC0G,GAAG,EAAE,CAAC,CAAC;MACrEV,MAAM,CAACxD,IAAI,CAACoC,KAAK,CAAC;;IAGpB,OAAOoB,MAAM;EACf;EAEQO,WAAWA,CAAClD,KAAW;;IAC7B,IAAIuB,KAAW;IACf,IAAIC,GAAS;IACb,IAAI8B,aAAa,GAAY,CAAAP,EAAA,OAAI,CAAC1C,MAAM,cAAA0C,EAAA,cAAAA,EAAA,GAAI,EAAa;IAEzD,IAAIO,aAAa,CAAChD,MAAM,KAAK,CAAC,EAAE;MAE9BgD,aAAa,GAAG,CAACtD,KAAK,CAAC;KACxB,MAAM;MACL,IAAIsD,aAAa,CAAC,CAAC,CAAC,CAAChC,OAAO,EAAE,KAAKtB,KAAK,CAACsB,OAAO,EAAE,EAAE;QAClD,IAAI,CAACjB,MAAM,GAAG,EAAE;QAChB;;MAGFiD,aAAa,CAACnE,IAAI,CAACa,KAAK,CAAC;MACzBsD,aAAa,CAACC,IAAI,CAAC,CAACC,CAAO,EAAEC,CAAO,KAAKD,CAAC,CAACE,OAAO,EAAE,GAAGD,CAAC,CAACC,OAAO,EAAE,CAAC;MAEnEnC,KAAK,GAAG+B,aAAa,CAACK,KAAK,EAAG;MAC9BnC,GAAG,GAAG8B,aAAa,CAACM,GAAG,EAAG;MAC1BN,aAAa,GAAG,CAAC/B,KAAK,EAAE,GAAG,IAAI,CAAC4B,iBAAiB,CAAC5B,KAAK,EAAEC,GAAG,CAAC,CAAC;;IAIhE8B,aAAa,GAAGA,aAAa,CAACO,MAAM,CAAEC,CAAC,IAAK,CAAC,IAAI,CAACnD,UAAU,CAACmD,CAAC,CAAC,CAAC;IAEhE,IAAI,CAACzD,MAAM,GAAG,CAAC,GAAGiD,aAAa,CAAC;EAClC;EAEQN,YAAYA,CAAChD,KAAW;IAC9B,IAAI,CAACA,KAAK,GAAGnD,WAAW,CAACmD,KAAK,CAAC;EACjC;EAEQiD,cAAcA,CAACjD,KAAW;;IAChC,IAAIsD,aAAa,GAAY,CAAAP,EAAA,OAAI,CAAC1C,MAAM,cAAA0C,EAAA,cAAAA,EAAA,GAAI,EAAa;IACzD,MAAMgB,aAAa,GAAGlH,WAAW,CAACmD,KAAK,CAAC;IACxC,MAAMgE,YAAY,GAAG,EAAE;IAEvB,IACEV,aAAa,CAACW,KAAK,CAChB3E,IAAU,IAAKA,IAAI,CAACgC,OAAO,EAAE,KAAKyC,aAAa,CAACzC,OAAO,EAAE,CAC3D,EACD;MACA0C,YAAY,CAAC7E,IAAI,CAAC4E,aAAa,CAAC;KACjC,MAAM;MACLT,aAAa,GAAGA,aAAa,CAACO,MAAM,CACjCvE,IAAU,IAAKA,IAAI,CAACgC,OAAO,EAAE,KAAKyC,aAAa,CAACzC,OAAO,EAAE,CAC3D;;IAGH,IAAI0C,YAAY,CAAC1D,MAAM,GAAG,CAAC,EAAE;MAC3BgD,aAAa,GAAGA,aAAa,CAACY,MAAM,CAACF,YAAY,CAAC;;IAGpDV,aAAa,GAAGA,aAAa,CAACO,MAAM,CAAEC,CAAC,IAAK,CAAC,IAAI,CAACnD,UAAU,CAACmD,CAAC,CAAC,CAAC;IAChER,aAAa,CAACC,IAAI,CAAC,CAACC,CAAO,EAAEC,CAAO,KAAKD,CAAC,CAACE,OAAO,EAAE,GAAGD,CAAC,CAACC,OAAO,EAAE,CAAC;IACnE,IAAI,CAACrD,MAAM,GAAG,CAAC,GAAGiD,aAAa,CAAC;EAClC;EAEQd,gBAAgBA,CAAC9D,GAAkB;IACzC,IAAI,CAACM,UAAU,GAAGN,GAAG,CAACY,IAAI;IAC1B,IAAI,CAACuD,SAAS,CAAC,qBAAqB,EAAE;MAAEC,MAAM,EAAEpE;IAAG,CAAE,CAAC;EACxD;EAEQyF,WAAWA,CAAC9B,KAAoB,EAAE3D,GAAkB;IAC1D,IAAI2D,KAAK,CAAC+B,GAAG,KAAK,OAAO,IAAI/B,KAAK,CAAC+B,GAAG,KAAK,GAAG,EAAE;MAC9C/B,KAAK,CAACgC,cAAc,EAAE;MACtB,IAAI,CAAC9B,SAAS,CAAC7D,GAAG,CAAC;;EAEvB;EAEQ4F,kBAAkBA,CAAChF,IAAU;IACnC,IACE,IAAI,CAACa,SAAS,KAAK,OAAO,IAC1B,IAAI,CAACE,MAAM,IACX,IAAI,CAACA,MAAM,CAACC,MAAM,KAAK,CAAC,IACxB,CAACxD,OAAO,CAAC,IAAI,CAACuD,MAAM,CAAC,CAAC,CAAC,EAAEf,IAAI,CAAC,EAC9B;MACA,IAAI,CAACmD,mBAAmB,CAACnD,IAAI,CAAC;;EAElC;EAEQiF,iBAAiBA,CAAA;IACvB,IAAI,IAAI,CAAC/D,gBAAgB,EAAE;MACzB,IAAI,CAACiC,mBAAmB,CAACC,SAAS,CAAC;;EAEvC;EAEQD,mBAAmBA,CAACzC,KAAY;IACtC,IAAI,CAACQ,gBAAgB,GAAGR,KAAK;IAC7B,IAAI,CAAC6C,SAAS,CAAC,2BAA2B,EAAE;MAAEC,MAAM,EAAE9C;IAAK,CAAE,CAAC;EAChE;EAEQwE,sBAAsBA,CAAC9F,GAAkB;IAC/C,MAAM+F,UAAU,GAAG/F,GAAG,CAACgG,WAAW,IAAIhG,GAAG,CAACiG,WAAW;IACrD,MAAMC,QAAQ,GACX,IAAI,CAACnH,eAAe,IAAIiB,GAAG,CAACiG,WAAW,IACvC,IAAI,CAACjH,gBAAgB,IAAIgB,GAAG,CAACgG,WAAY;IAC5C,MAAM/D,UAAU,GAAG,IAAI,CAACA,UAAU,CAACjC,GAAG,CAACY,IAAI,CAAC;IAE5C,OAAO;MACLA,IAAI,EAAE,IAAI;MACVuF,KAAK,EAAE,IAAI,CAACpE,cAAc,CAAC/B,GAAG,CAAC;MAC/BoG,IAAI,EAAE,IAAI,CAAC1E,aAAa,CAAC1B,GAAG,CAAC;MAC7BqG,QAAQ,EAAE,CAACpE,UAAU,IAAI,IAAI,CAACU,UAAU,CAAC3C,GAAG,CAAC;MAC7CsG,QAAQ,EAAEP,UAAU;MACpBQ,MAAM,EAAEL,QAAQ;MAChBM,OAAO,EAAE,IAAI,CAACtD,OAAO,CAAClD,GAAG,CAAC;MAC1ByG,OAAO,EAAE,IAAI,CAACnD,SAAS,CAACtD,GAAG,CAAC;MAC5B0G,KAAK,EAAE,IAAI,CAACjF,SAAS,KAAK,OAAO,IAAI,IAAI,CAACgB,WAAW,CAACzC,GAAG,CAACY,IAAI,CAAC;MAC/D+F,OAAO,EAAE,IAAI,CAACnD,SAAS,CAACxD,GAAG,CAAC;MAC5B4G,QAAQ,EAAEV,QAAQ,IAAIjE,UAAU;MAChC4E,MAAM,EAAE,IAAI,CAACpF,SAAS,KAAK,OAAO;MAClCqF,OAAO,EAAE,IAAI,CAACpE,cAAc,CAAC1C,GAAG,CAACY,IAAI;KACtC;EACH;EAEQmG,iBAAiBA,CAAA;IACvB,OAAO3J,IAAI;QACP,IAAI,CAAC4J,eAAe,GAClB5J,IAAI;;iBAEG,IAAI,CAAC+B,eAAe,CAAC8H,SAAS;;kBAE7B,GACR,EAAE;QACJ,IAAI,CAAChH,kBAAkB,EAAE,CAACiH,GAAG,CAC5BtH,OAAO,IAAKxC,IAAI;;;uBAGFwC,OAAO,CAACiB,SAAS;;qCAEH,IAAI,CAACE,SAAS,CAACnB,OAAO,CAACc,KAAK,CAAC;iBACjD,CACV;WACI;EACT;EAEQyG,WAAWA,CAAA;IACjB,OAAO,IAAI,CAACvI,KAAK,CAACsI,GAAG,CAAC,CAACE,IAAI,EAAEC,CAAC,KAAI;MAChC,MAAMjB,IAAI,GAAGiB,CAAC,KAAK,IAAI,CAACzI,KAAK,CAACgD,MAAM,GAAG,CAAC;MAExC,OAAOxE,IAAI;UACP,IAAI,CAAC4J,eAAe,GAClB5J,IAAI;;qBAEKS,WAAW,CAAC;QAAE,aAAa,EAAE,IAAI;QAAEuI;MAAI,CAAE,CAAC;;2BAEpCvI,WAAW,CAAC;QAAE,mBAAmB,EAAE,IAAI;QAAEuI;MAAI,CAAE,CAAC;mBACxD,IAAI,CAAChF,aAAa,CAACgG,IAAI,CAAC,CAAC,CAAC,CAACxG,IAAI,CAAC;;oBAE/B,GACR,EAAE;UACJwG,IAAI,CAACF,GAAG,CAAElH,GAAG,IAAK,IAAI,CAACsH,cAAc,CAACtH,GAAG,CAAC,CAAC;aACxC;IACT,CAAC,CAAC;EACJ;EAEUuH,iBAAiBA,CAACjG,KAAoB;IAE9C,IACE,IAAI,CAACQ,gBAAgB,IACrB5D,aAAa,CAAC,IAAI,CAAC4D,gBAAgB,EAAER,KAAK,CAACV,IAAI,CAAC,EAChD;MACA,OAAQ,IAAI,CAACf,cAAsB,CAAC2H,WAAW,CAC7C,IAAI,CAAC7F,MAAO,CAAC8F,EAAE,CAAC,CAAC,CAAC,EAClB,IAAI,CAAC3F,gBAAgB,CACtB;;IAIH,IAAI,IAAI,CAACC,cAAc,CAACT,KAAK,CAAC,IAAI,IAAI,CAACI,aAAa,CAACJ,KAAK,CAAC,EAAE;MAC3D,OAAQ,IAAI,CAACzB,cAAsB,CAAC2H,WAAW,CAC7C,IAAI,CAAC7F,MAAO,CAAC8F,EAAE,CAAC,CAAC,CAAC,EAClB,IAAI,CAAC9F,MAAO,CAAC8F,EAAE,CAAC,CAAC,CAAC,CAAC,CACpB;;IAIH,OAAO,IAAI,CAAC5H,cAAc,CAACc,MAAM,CAACW,KAAK,CAACV,IAAI,CAAC;EAC/C;EAEQ0G,cAAcA,CAACtH,GAAkB;IACvC,MAAM0H,YAAY,GAAG7J,WAAW,CAAC,IAAI,CAACiI,sBAAsB,CAAC9F,GAAG,CAAC,CAAC;IAClE,MAAM2H,iBAAiB,GAAGD,YAAY,CAACE,OAAO,CAAC,MAAM,EAAE,YAAY,CAAC;IAEpE,OAAOxK,IAAI,cAAcsK,YAAY;;eAE1BC,iBAAiB;;qBAEX,IAAI,CAACJ,iBAAiB,CAACvH,GAAG,CAAC;wBACxB,IAAI,CAAC2C,UAAU,CAAC3C,GAAG,CAAC;wBACpB,IAAI,CAACiC,UAAU,CAACjC,GAAG,CAACY,IAAI,CAAC;mBAC9B,IAAI,CAAC3B,MAAM,IAAIf,aAAa,CAAC,IAAI,CAACoC,UAAU,EAAEN,GAAG,CAACY,IAAI,CAAC,GAC9D,CAAC,GACD,CAAC,CAAC;iBACI+C,KAAiB,IAAK,IAAI,CAACD,WAAW,CAACC,KAAK,EAAE3D,GAAG,CAAC;iBACnD,MAAM,IAAI,CAAC4F,kBAAkB,CAAC5F,GAAG,CAACY,IAAI,CAAC;gBACxC,MAAM,IAAI,CAACiF,iBAAiB,EAAE;mBAC1BlC,KAAoB,IAAK,IAAI,CAAC8B,WAAW,CAAC9B,KAAK,EAAE3D,GAAG,CAAC;sBACnD,MAAM,IAAI,CAAC4F,kBAAkB,CAAC5F,GAAG,CAACY,IAAI,CAAC;sBACvC,MAAM,IAAI,CAACiF,iBAAiB,EAAE;WACzC,IAAI,CAACxE,aAAa,CAACrB,GAAG,CAACY,IAAI,CAAC;;YAE3B;EACV;EAEmBiH,MAAMA,CAAA;IACvB,OAAOzK,IAAI,GAAG,IAAI,CAAC2J,iBAAiB,EAAE,IAAI,IAAI,CAACI,WAAW,EAAE,EAAE;EAChE;;AA9hBuB3I,oBAAA,CAAAsJ,OAAO,GAAG,eAAe;AAClCtJ,oBAAA,CAAAH,MAAM,GAAGA,MAAM;AAM7B0J,UAAA,EADCzK,KAAK,CAAC,gBAAgB,CAAC,C,sDACQ;AAIhCyK,UAAA,EADC1K,QAAQ,CAAC;EAAEiF,IAAI,EAAE0F,OAAO;EAAEC,SAAS,EAAE;AAAmB,CAAE,CAAC,C,4DAC7B;AAI/BF,UAAA,EADC1K,QAAQ,CAAC;EAAEiF,IAAI,EAAE0F,OAAO;EAAEC,SAAS,EAAE;AAAoB,CAAE,CAAC,C,6DAC7B;AAIhCF,UAAA,EADC1K,QAAQ,CAAC;EAAEiF,IAAI,EAAE0F;AAAO,CAAE,CAAC,C,mDACN;AAItBD,UAAA,EADC1K,QAAQ,CAAC;EAAE4K,SAAS,EAAE;AAAK,CAAE,CAAC,C,6DACA;AAI/BF,UAAA,EADC1K,QAAQ,CAAC;EAAE4K,SAAS,EAAE;AAAiB,CAAE,CAAC,C,0DAC8B;AAIzEF,UAAA,EADC1K,QAAQ,CAAC;EAAE4K,SAAS,EAAE;AAAK,CAAE,CAAC,C,4DAED;AAI9BF,UAAA,EAFCrK,KAAK,CAAC,eAAe,CAAC,EACtBA,KAAK,CAAC,QAAQ,CAAC,C,2DAGf;AAIDqK,UAAA,EAFCrK,KAAK,CAAC,WAAW,CAAC,EAClBA,KAAK,CAAC,YAAY,CAAC,C,sDAGnB;AAhDkBc,oBAAoB,GAAAuJ,UAAA,EANxCtK,uBAAuB,EACvBD,oBAAoB,EACpBD,MAAM,CAAC;EACNe,SAAS;EACTC;CACD,CAAC,C,EACmBC,oBAAoB,CAmiBxC;eAniBoBA,oBAAoB"},"metadata":{},"sourceType":"module","externalDependencies":[]}