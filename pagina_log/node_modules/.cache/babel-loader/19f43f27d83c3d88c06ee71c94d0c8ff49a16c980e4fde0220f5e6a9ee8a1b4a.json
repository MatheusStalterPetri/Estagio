{"ast":null,"code":"var __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { html } from 'lit';\nimport { property, query } from 'lit/decorators.js';\nimport { ifDefined } from 'lit/directives/if-defined.js';\nimport { styleMap } from 'lit/directives/style-map.js';\nimport { EventEmitterMixin } from '../common/mixins/event-emitter.js';\nimport { IgcSliderBaseComponent } from './slider-base.js';\nexport default class IgcRangeSliderComponent extends EventEmitterMixin(IgcSliderBaseComponent) {\n  constructor() {\n    super(...arguments);\n    this._lower = 0;\n    this._upper = 0;\n  }\n  set lower(val) {\n    const oldVal = this._lower;\n    this._lower = this.validateValue(val);\n    this.requestUpdate('lower', oldVal);\n  }\n  get lower() {\n    return this._lower;\n  }\n  set upper(val) {\n    const oldVal = this._upper;\n    this._upper = this.validateValue(val);\n    this.requestUpdate('upper', oldVal);\n  }\n  get upper() {\n    return this._upper;\n  }\n  get activeValue() {\n    return this.activeThumb === this.thumbFrom ? this.lower : this.upper;\n  }\n  normalizeValue() {\n    this._lower = this.validateValue(this._lower);\n    this._upper = this.validateValue(this._upper);\n  }\n  getTrackStyle() {\n    const toPosition = this.valueToFraction(this.upper);\n    const fromPosition = this.valueToFraction(this.lower);\n    const positionGap = toPosition - fromPosition;\n    const filledTrackStyle = {\n      width: `${positionGap * 100}%`,\n      insetInlineStart: `${fromPosition * 100}%`\n    };\n    return filledTrackStyle;\n  }\n  closestTo(goal, positions) {\n    return positions.reduce((previous, current) => Math.abs(goal - current) < Math.abs(goal - previous) ? current : previous);\n  }\n  closestHandle(event) {\n    const fromOffset = this.thumbFrom.offsetLeft + this.thumbFrom.offsetWidth / 2;\n    const toOffset = this.thumbTo.offsetLeft + this.thumbTo.offsetWidth / 2;\n    const xPointer = event.clientX - this.getBoundingClientRect().left;\n    const match = this.closestTo(xPointer, [fromOffset, toOffset]);\n    if (fromOffset === toOffset && toOffset < xPointer) {\n      return this.thumbTo;\n    } else if (fromOffset === toOffset && toOffset > xPointer) {\n      return this.thumbFrom;\n    } else if (match === fromOffset) {\n      return this.thumbFrom;\n    } else {\n      return this.thumbTo;\n    }\n  }\n  updateValue(increment) {\n    const oldValue = this.activeValue;\n    let lower = this.lower;\n    let upper = this.upper;\n    if (this.activeThumb === this.thumbFrom) {\n      lower += increment;\n    } else {\n      upper += increment;\n    }\n    if (lower >= upper) {\n      this.swapValues(lower, upper);\n      this.toggleActiveThumb();\n    } else {\n      if (this.activeThumb === this.thumbFrom) {\n        this.lower = lower;\n      } else {\n        this.upper = upper;\n      }\n    }\n    if (oldValue === this.activeValue) {\n      return false;\n    }\n    this.emitInputEvent();\n    return true;\n  }\n  emitInputEvent() {\n    this.emitEvent('igcInput', {\n      detail: {\n        lower: this.lower,\n        upper: this.upper\n      }\n    });\n  }\n  emitChangeEvent() {\n    this.emitEvent('igcChange', {\n      detail: {\n        lower: this.lower,\n        upper: this.upper\n      }\n    });\n  }\n  swapValues(lower, upper) {\n    this.lower = upper;\n    this.upper = lower;\n  }\n  toggleActiveThumb() {\n    const thumb = this.activeThumb === this.thumbFrom ? this.thumbTo : this.thumbFrom;\n    thumb.focus();\n  }\n  handleFocus(ev) {\n    var _a, _b;\n    this.activeThumb = ev.target;\n    const thumbId = (_a = this.activeThumb) === null || _a === void 0 ? void 0 : _a.id;\n    const thumbs = (_b = this.shadowRoot) === null || _b === void 0 ? void 0 : _b.querySelectorAll('div[part=\"thumb\"]');\n    thumbs === null || thumbs === void 0 ? void 0 : thumbs.forEach(t => {\n      var _a;\n      if (t.id !== thumbId) {\n        const activeThumbVal = parseFloat(this.activeThumb.ariaValueNow);\n        const thumbVal = parseFloat(t.ariaValueNow);\n        const rangeFrom = Math.min(activeThumbVal, thumbVal);\n        const rangeTo = Math.max(activeThumbVal, thumbVal);\n        (_a = this.activeThumb) === null || _a === void 0 ? void 0 : _a.setAttribute('aria-valuetext', `${this.formatValue(rangeFrom)} - ${this.formatValue(rangeTo)}`);\n      }\n    });\n  }\n  renderThumb(value, ariaLabel, thumbId) {\n    const percent = `${this.valueToFraction(value) * 100}%`;\n    const ariaValueText = thumbId === 'thumbFrom' ? `min ${this.lower}` : `max ${this.upper}`;\n    const textValue = this.labels ? this.labels[value] : this.valueFormat || this.valueFormatOptions ? this.formatValue(value) : ariaValueText;\n    return html`\n      <div\n        part=\"thumb\"\n        id=${ifDefined(thumbId)}\n        tabindex=${this.disabled ? -1 : 0}\n        style=${styleMap({\n      insetInlineStart: percent\n    })}\n        role=\"slider\"\n        aria-valuemin=${this.actualMin}\n        aria-valuemax=${this.actualMax}\n        aria-valuenow=${value}\n        aria-valuetext=${ifDefined(textValue)}\n        aria-label=${ifDefined(ariaLabel)}\n        aria-disabled=${this.disabled ? 'true' : 'false'}\n        @pointerenter=${this.handleThumbPointerEnter}\n        @pointerleave=${this.handleThumbPointerLeave}\n        @focus=${ev => this.handleFocus(ev)}\n        @blur=${() => {\n      var _a;\n      return (_a = this.activeThumb) === null || _a === void 0 ? void 0 : _a.part.remove('focused'), this.activeThumb = undefined;\n    }}\n      ></div>\n      ${this.hideTooltip ? html`` : html`\n            <div\n              part=\"thumb-label\"\n              style=${styleMap({\n      opacity: this.thumbLabelsVisible ? '1' : '0',\n      insetInlineStart: percent\n    })}\n            >\n              <div part=\"thumb-label-inner\">\n                ${this.labels ? this.labels[value] : this.formatValue(value)}\n              </div>\n            </div>\n          `}\n    `;\n  }\n  renderThumbs() {\n    return html`${this.renderThumb(this.lower, this.ariaLabelLower, 'thumbFrom')}\n    ${this.renderThumb(this.upper, this.ariaLabelUpper, 'thumbTo')}`;\n  }\n}\nIgcRangeSliderComponent.tagName = 'igc-range-slider';\n__decorate([query(`#thumbFrom`)], IgcRangeSliderComponent.prototype, \"thumbFrom\", void 0);\n__decorate([query(`#thumbTo`)], IgcRangeSliderComponent.prototype, \"thumbTo\", void 0);\n__decorate([property({\n  type: Number\n})], IgcRangeSliderComponent.prototype, \"lower\", null);\n__decorate([property({\n  type: Number\n})], IgcRangeSliderComponent.prototype, \"upper\", null);\n__decorate([property({\n  attribute: 'aria-label-lower'\n})], IgcRangeSliderComponent.prototype, \"ariaLabelLower\", void 0);\n__decorate([property({\n  attribute: 'aria-label-upper'\n})], IgcRangeSliderComponent.prototype, \"ariaLabelUpper\", void 0);","map":{"version":3,"names":["html","property","query","ifDefined","styleMap","EventEmitterMixin","IgcSliderBaseComponent","IgcRangeSliderComponent","constructor","_lower","_upper","lower","val","oldVal","validateValue","requestUpdate","upper","activeValue","activeThumb","thumbFrom","normalizeValue","getTrackStyle","toPosition","valueToFraction","fromPosition","positionGap","filledTrackStyle","width","insetInlineStart","closestTo","goal","positions","reduce","previous","current","Math","abs","closestHandle","event","fromOffset","offsetLeft","offsetWidth","toOffset","thumbTo","xPointer","clientX","getBoundingClientRect","left","match","updateValue","increment","oldValue","swapValues","toggleActiveThumb","emitInputEvent","emitEvent","detail","emitChangeEvent","thumb","focus","handleFocus","ev","target","thumbId","_a","id","thumbs","_b","shadowRoot","querySelectorAll","forEach","t","activeThumbVal","parseFloat","ariaValueNow","thumbVal","rangeFrom","min","rangeTo","max","setAttribute","formatValue","renderThumb","value","ariaLabel","percent","ariaValueText","textValue","labels","valueFormat","valueFormatOptions","disabled","actualMin","actualMax","handleThumbPointerEnter","handleThumbPointerLeave","part","remove","undefined","hideTooltip","opacity","thumbLabelsVisible","renderThumbs","ariaLabelLower","ariaLabelUpper","tagName","__decorate","type","Number","attribute"],"sources":["../../../src/components/slider/range-slider.ts"],"sourcesContent":["import { html } from 'lit';\nimport { property, query } from 'lit/decorators.js';\nimport { ifDefined } from 'lit/directives/if-defined.js';\nimport { styleMap } from 'lit/directives/style-map.js';\nimport { Constructor } from '../common/mixins/constructor.js';\nimport { EventEmitterMixin } from '../common/mixins/event-emitter.js';\nimport { IgcSliderBaseComponent } from './slider-base.js';\n\n/* blazorSuppress */\nexport interface IgcRangeSliderValue {\n  lower: number;\n  upper: number;\n}\n\nexport interface IgcRangeSliderEventMap {\n  /**\n   * Emitted when a value is changed via thumb drag or keyboard interaction.\n   */\n  igcInput: CustomEvent<IgcRangeSliderValue>;\n  /**\n   * Emitted when a value change is committed on a thumb drag end or keyboard interaction.\n   */\n  igcChange: CustomEvent<IgcRangeSliderValue>;\n}\n\n/**\n * A range slider component used to select two numeric values within a range.\n *\n * @element igc-range-slider\n *\n * @fires igcInput - Emitted when a value is changed via thumb drag or keyboard interaction.\n * @fires igcChange - Emitted when a value change is committed on a thumb drag end or keyboard interaction.\n *\n * @csspart base - The base wrapper of the slider.\n * @csspart ticks - The ticks container.\n * @csspart tick-group - The tick group container.\n * @csspart tick - The tick element.\n * @csspart tick-label - The tick label element.\n * @csspart tick-label-inner - The inner element of the tick label.\n * @csspart thumbs - The thumbs container.\n * @csspart thumb - The thumb element.\n * @csspart thumb-label - The thumb tooltip label container.\n * @csspart thumb-label-inner - The thumb tooltip label inner element.\n * @csspart track - The track container.\n * @csspart steps - The track steps element.\n * @csspart inactive - The inactive element of the track.\n * @csspart fill - The filled part of the track.\n */\nexport default class IgcRangeSliderComponent extends EventEmitterMixin<\n  IgcRangeSliderEventMap,\n  Constructor<IgcSliderBaseComponent>\n>(IgcSliderBaseComponent) {\n  public static readonly tagName = 'igc-range-slider';\n\n  @query(`#thumbFrom`)\n  private thumbFrom!: HTMLElement;\n\n  @query(`#thumbTo`)\n  private thumbTo!: HTMLElement;\n\n  private _lower = 0;\n  private _upper = 0;\n\n  public set lower(val: number) {\n    const oldVal = this._lower;\n    this._lower = this.validateValue(val);\n    this.requestUpdate('lower', oldVal);\n  }\n\n  /**\n   * The current value of the lower thumb.\n   * @attr\n   */\n  @property({ type: Number })\n  public get lower() {\n    return this._lower;\n  }\n\n  public set upper(val: number) {\n    const oldVal = this._upper;\n    this._upper = this.validateValue(val);\n    this.requestUpdate('upper', oldVal);\n  }\n\n  /**\n   * The current value of the upper thumb.\n   * @attr\n   */\n  @property({ type: Number })\n  public get upper() {\n    return this._upper;\n  }\n\n  /**\n   * The aria label of the lower thumb.\n   * @attr aria-label-lower\n   */\n  @property({ attribute: 'aria-label-lower' })\n  public ariaLabelLower!: string;\n\n  /**\n   * The aria label of the upper thumb.\n   * @attr aria-label-upper\n   */\n  @property({ attribute: 'aria-label-upper' })\n  public ariaLabelUpper!: string;\n\n  protected override get activeValue(): number {\n    return this.activeThumb === this.thumbFrom ? this.lower : this.upper;\n  }\n\n  protected override normalizeValue(): void {\n    this._lower = this.validateValue(this._lower);\n    this._upper = this.validateValue(this._upper);\n  }\n\n  protected override getTrackStyle() {\n    const toPosition = this.valueToFraction(this.upper);\n    const fromPosition = this.valueToFraction(this.lower);\n    const positionGap = toPosition - fromPosition;\n\n    const filledTrackStyle = {\n      width: `${positionGap * 100}%`,\n      insetInlineStart: `${fromPosition * 100}%`,\n    };\n\n    return filledTrackStyle;\n  }\n\n  private closestTo(goal: number, positions: number[]): number {\n    return positions.reduce((previous, current) =>\n      Math.abs(goal - current) < Math.abs(goal - previous) ? current : previous\n    );\n  }\n\n  protected override closestHandle(event: PointerEvent): HTMLElement {\n    const fromOffset =\n      this.thumbFrom.offsetLeft + this.thumbFrom.offsetWidth / 2;\n    const toOffset = this.thumbTo.offsetLeft + this.thumbTo.offsetWidth / 2;\n    const xPointer = event.clientX - this.getBoundingClientRect().left;\n    const match = this.closestTo(xPointer, [fromOffset, toOffset]);\n\n    if (fromOffset === toOffset && toOffset < xPointer) {\n      return this.thumbTo;\n    } else if (fromOffset === toOffset && toOffset > xPointer) {\n      return this.thumbFrom;\n    } else if (match === fromOffset) {\n      return this.thumbFrom;\n    } else {\n      return this.thumbTo;\n    }\n  }\n\n  protected override updateValue(increment: number) {\n    const oldValue = this.activeValue;\n\n    let lower = this.lower;\n    let upper = this.upper;\n\n    if (this.activeThumb === this.thumbFrom) {\n      lower += increment;\n    } else {\n      upper += increment;\n    }\n\n    if (lower >= upper) {\n      this.swapValues(lower, upper);\n      this.toggleActiveThumb();\n    } else {\n      if (this.activeThumb === this.thumbFrom) {\n        this.lower = lower;\n      } else {\n        this.upper = upper;\n      }\n    }\n\n    if (oldValue === this.activeValue) {\n      return false;\n    }\n\n    this.emitInputEvent();\n    return true;\n  }\n\n  protected override emitInputEvent() {\n    this.emitEvent('igcInput', {\n      detail: { lower: this.lower, upper: this.upper },\n    });\n  }\n\n  protected override emitChangeEvent() {\n    this.emitEvent('igcChange', {\n      detail: { lower: this.lower, upper: this.upper },\n    });\n  }\n\n  private swapValues(lower: number, upper: number) {\n    this.lower = upper;\n    this.upper = lower;\n  }\n\n  private toggleActiveThumb() {\n    const thumb =\n      this.activeThumb === this.thumbFrom ? this.thumbTo : this.thumbFrom;\n    thumb.focus();\n  }\n\n  private handleFocus(ev: Event) {\n    this.activeThumb = ev.target as HTMLElement;\n    const thumbId = this.activeThumb?.id;\n    const thumbs = this.shadowRoot?.querySelectorAll('div[part=\"thumb\"]');\n\n    thumbs?.forEach((t) => {\n      if (t.id !== thumbId) {\n        const activeThumbVal = parseFloat(this.activeThumb!.ariaValueNow!);\n        const thumbVal = parseFloat(t.ariaValueNow!);\n        const rangeFrom = Math.min(activeThumbVal, thumbVal);\n        const rangeTo = Math.max(activeThumbVal, thumbVal);\n\n        this.activeThumb?.setAttribute(\n          'aria-valuetext',\n          `${this.formatValue(rangeFrom)} - ${this.formatValue(rangeTo)}`\n        );\n      }\n    });\n  }\n\n  protected override renderThumb(\n    value: number,\n    ariaLabel?: string,\n    thumbId?: string\n  ) {\n    const percent = `${this.valueToFraction(value) * 100}%`;\n    const ariaValueText =\n      thumbId === 'thumbFrom' ? `min ${this.lower}` : `max ${this.upper}`;\n\n    const textValue = this.labels\n      ? this.labels[value]\n      : this.valueFormat || this.valueFormatOptions\n      ? this.formatValue(value)\n      : ariaValueText;\n\n    return html`\n      <div\n        part=\"thumb\"\n        id=${ifDefined(thumbId)}\n        tabindex=${this.disabled ? -1 : 0}\n        style=${styleMap({ insetInlineStart: percent })}\n        role=\"slider\"\n        aria-valuemin=${this.actualMin}\n        aria-valuemax=${this.actualMax}\n        aria-valuenow=${value}\n        aria-valuetext=${ifDefined(textValue)}\n        aria-label=${ifDefined(ariaLabel)}\n        aria-disabled=${this.disabled ? 'true' : 'false'}\n        @pointerenter=${this.handleThumbPointerEnter}\n        @pointerleave=${this.handleThumbPointerLeave}\n        @focus=${(ev: Event) => this.handleFocus(ev)}\n        @blur=${() => (\n          this.activeThumb?.part.remove('focused'),\n          (this.activeThumb = undefined)\n        )}\n      ></div>\n      ${this.hideTooltip\n        ? html``\n        : html`\n            <div\n              part=\"thumb-label\"\n              style=${styleMap({\n                opacity: this.thumbLabelsVisible ? '1' : '0',\n                insetInlineStart: percent,\n              })}\n            >\n              <div part=\"thumb-label-inner\">\n                ${this.labels ? this.labels[value] : this.formatValue(value)}\n              </div>\n            </div>\n          `}\n    `;\n  }\n\n  protected override renderThumbs() {\n    return html`${this.renderThumb(\n      this.lower,\n      this.ariaLabelLower,\n      'thumbFrom'\n    )}\n    ${this.renderThumb(this.upper, this.ariaLabelUpper, 'thumbTo')}`;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'igc-range-slider': IgcRangeSliderComponent;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}