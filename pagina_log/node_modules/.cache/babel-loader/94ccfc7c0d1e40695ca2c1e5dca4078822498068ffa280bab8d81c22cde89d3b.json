{"ast":null,"code":"var __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { property, queryAssignedElements } from 'lit/decorators.js';\nimport { watch } from '../common/decorators/watch.js';\nimport IgcDropdownGroupComponent from '../dropdown/dropdown-group.js';\nexport default class IgcSelectGroupComponent extends IgcDropdownGroupComponent {\n  constructor() {\n    super();\n    this.disabled = false;\n    this.observer = new MutationObserver(this.updateControlledItems.bind(this));\n  }\n  disconnectedCallback() {\n    this.observer.disconnect();\n    super.disconnectedCallback();\n  }\n  getParent() {\n    return this.closest('igc-select');\n  }\n  async firstUpdated() {\n    await this.updateComplete;\n    this.controlledItems = this.activeItems;\n    this.setAttribute('role', 'presentation');\n    this.items.forEach(i => {\n      this.observer.observe(i, {\n        attributes: true,\n        attributeFilter: ['disabled']\n      });\n    });\n    this.updateDisabled();\n  }\n  updateControlledItems(mutations) {\n    mutations.forEach(mutation => {\n      const item = mutation.target;\n      if (!this.disabled) {\n        this.controlledItems = this.activeItems;\n      }\n      if (this.disabled && !item.disabled) {\n        item.disabled = true;\n      }\n    });\n  }\n  updateDisabled() {\n    var _a;\n    this.disabled ? this.setAttribute('aria-disabled', 'true') : this.removeAttribute('aria-disabled');\n    (_a = this.controlledItems) === null || _a === void 0 ? void 0 : _a.forEach(i => i.disabled = this.disabled);\n  }\n}\nIgcSelectGroupComponent.tagName = 'igc-select-group';\n__decorate([queryAssignedElements({\n  flatten: true,\n  selector: 'igc-select-item'\n})], IgcSelectGroupComponent.prototype, \"items\", void 0);\n__decorate([queryAssignedElements({\n  flatten: true,\n  selector: 'igc-select-item:not([disabled])'\n})], IgcSelectGroupComponent.prototype, \"activeItems\", void 0);\n__decorate([property({\n  reflect: true,\n  type: Boolean\n})], IgcSelectGroupComponent.prototype, \"disabled\", void 0);\n__decorate([watch('disabled', {\n  waitUntilFirstUpdate: true\n})], IgcSelectGroupComponent.prototype, \"updateDisabled\", null);","map":{"version":3,"names":["property","queryAssignedElements","watch","IgcDropdownGroupComponent","IgcSelectGroupComponent","constructor","disabled","observer","MutationObserver","updateControlledItems","bind","disconnectedCallback","disconnect","getParent","closest","firstUpdated","updateComplete","controlledItems","activeItems","setAttribute","items","forEach","i","observe","attributes","attributeFilter","updateDisabled","mutations","mutation","item","target","removeAttribute","_a","tagName","__decorate","flatten","selector","reflect","type","Boolean","waitUntilFirstUpdate"],"sources":["../../../src/components/select/select-group.ts"],"sourcesContent":["import { property, queryAssignedElements } from 'lit/decorators.js';\nimport { watch } from '../common/decorators/watch.js';\nimport IgcDropdownGroupComponent from '../dropdown/dropdown-group.js';\nimport IgcSelectItemComponent from './select-item.js';\n\n/**\n * @element igc-select-group - A container for a group of `igc-select-item` components.\n *\n * @slot label - Contains the group's label.\n * @slot - Intended to contain the items belonging to this group.\n *\n * @csspart label - The native label element.\n */\nexport default class IgcSelectGroupComponent extends IgcDropdownGroupComponent {\n  /** @private */\n  public static override readonly tagName = 'igc-select-group';\n\n  private observer!: MutationObserver;\n  private controlledItems!: Array<IgcSelectItemComponent>;\n\n  /** All child `igc-select-item`s. */\n  @queryAssignedElements({ flatten: true, selector: 'igc-select-item' })\n  public override items!: Array<IgcSelectItemComponent>;\n\n  @queryAssignedElements({\n    flatten: true,\n    selector: 'igc-select-item:not([disabled])',\n  })\n  protected activeItems!: Array<IgcSelectItemComponent>;\n\n  /**\n   * Whether the group item and all its children are disabled.\n   * @attr\n   */\n  @property({ reflect: true, type: Boolean })\n  public disabled = false;\n\n  constructor() {\n    super();\n\n    this.observer = new MutationObserver(this.updateControlledItems.bind(this));\n  }\n\n  public override disconnectedCallback() {\n    this.observer.disconnect();\n    super.disconnectedCallback();\n  }\n\n  protected override getParent() {\n    return this.closest('igc-select')!;\n  }\n\n  protected override async firstUpdated() {\n    await this.updateComplete;\n    this.controlledItems = this.activeItems;\n    this.setAttribute('role', 'presentation');\n\n    this.items.forEach((i) => {\n      this.observer.observe(i, {\n        attributes: true,\n        attributeFilter: ['disabled'],\n      });\n    });\n\n    this.updateDisabled();\n  }\n\n  protected updateControlledItems(mutations: MutationRecord[]) {\n    mutations.forEach((mutation) => {\n      const item = mutation.target as IgcSelectItemComponent;\n\n      if (!this.disabled) {\n        this.controlledItems = this.activeItems;\n      }\n\n      if (this.disabled && !item.disabled) {\n        item.disabled = true;\n      }\n    });\n  }\n\n  @watch('disabled', { waitUntilFirstUpdate: true })\n  protected updateDisabled() {\n    this.disabled\n      ? this.setAttribute('aria-disabled', 'true')\n      : this.removeAttribute('aria-disabled');\n\n    this.controlledItems?.forEach((i) => (i.disabled = this.disabled));\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'igc-select-group': IgcSelectGroupComponent;\n  }\n}\n"],"mappings":";;;;;;;AAAA,SAASA,QAAQ,EAAEC,qBAAqB,QAAQ,mBAAmB;AACnE,SAASC,KAAK,QAAQ,+BAA+B;AACrD,OAAOC,yBAAyB,MAAM,+BAA+B;AAWrE,eAAc,MAAOC,uBAAwB,SAAQD,yBAAyB;EAwB5EE,YAAA;IACE,KAAK,EAAE;IAHF,KAAAC,QAAQ,GAAG,KAAK;IAKrB,IAAI,CAACC,QAAQ,GAAG,IAAIC,gBAAgB,CAAC,IAAI,CAACC,qBAAqB,CAACC,IAAI,CAAC,IAAI,CAAC,CAAC;EAC7E;EAEgBC,oBAAoBA,CAAA;IAClC,IAAI,CAACJ,QAAQ,CAACK,UAAU,EAAE;IAC1B,KAAK,CAACD,oBAAoB,EAAE;EAC9B;EAEmBE,SAASA,CAAA;IAC1B,OAAO,IAAI,CAACC,OAAO,CAAC,YAAY,CAAE;EACpC;EAEmB,MAAMC,YAAYA,CAAA;IACnC,MAAM,IAAI,CAACC,cAAc;IACzB,IAAI,CAACC,eAAe,GAAG,IAAI,CAACC,WAAW;IACvC,IAAI,CAACC,YAAY,CAAC,MAAM,EAAE,cAAc,CAAC;IAEzC,IAAI,CAACC,KAAK,CAACC,OAAO,CAAEC,CAAC,IAAI;MACvB,IAAI,CAACf,QAAQ,CAACgB,OAAO,CAACD,CAAC,EAAE;QACvBE,UAAU,EAAE,IAAI;QAChBC,eAAe,EAAE,CAAC,UAAU;OAC7B,CAAC;IACJ,CAAC,CAAC;IAEF,IAAI,CAACC,cAAc,EAAE;EACvB;EAEUjB,qBAAqBA,CAACkB,SAA2B;IACzDA,SAAS,CAACN,OAAO,CAAEO,QAAQ,IAAI;MAC7B,MAAMC,IAAI,GAAGD,QAAQ,CAACE,MAAgC;MAEtD,IAAI,CAAC,IAAI,CAACxB,QAAQ,EAAE;QAClB,IAAI,CAACW,eAAe,GAAG,IAAI,CAACC,WAAW;;MAGzC,IAAI,IAAI,CAACZ,QAAQ,IAAI,CAACuB,IAAI,CAACvB,QAAQ,EAAE;QACnCuB,IAAI,CAACvB,QAAQ,GAAG,IAAI;;IAExB,CAAC,CAAC;EACJ;EAGUoB,cAAcA,CAAA;;IACtB,IAAI,CAACpB,QAAQ,GACT,IAAI,CAACa,YAAY,CAAC,eAAe,EAAE,MAAM,CAAC,GAC1C,IAAI,CAACY,eAAe,CAAC,eAAe,CAAC;IAEzC,CAAAC,EAAA,OAAI,CAACf,eAAe,cAAAe,EAAA,uBAAAA,EAAA,CAAEX,OAAO,CAAEC,CAAC,IAAMA,CAAC,CAAChB,QAAQ,GAAG,IAAI,CAACA,QAAS,CAAC;EACpE;;AAzEgCF,uBAAA,CAAA6B,OAAO,GAAG,kBAAkB;AAO5DC,UAAA,EADCjC,qBAAqB,CAAC;EAAEkC,OAAO,EAAE,IAAI;EAAEC,QAAQ,EAAE;AAAiB,CAAE,CAAC,C,qDAChB;AAMtDF,UAAA,EAJCjC,qBAAqB,CAAC;EACrBkC,OAAO,EAAE,IAAI;EACbC,QAAQ,EAAE;CACX,CAAC,C,2DACoD;AAOtDF,UAAA,EADClC,QAAQ,CAAC;EAAEqC,OAAO,EAAE,IAAI;EAAEC,IAAI,EAAEC;AAAO,CAAE,CAAC,C,wDACnB;AA+CxBL,UAAA,EADChC,KAAK,CAAC,UAAU,EAAE;EAAEsC,oBAAoB,EAAE;AAAI,CAAE,CAAC,C,4DAOjD"},"metadata":{},"sourceType":"module","externalDependencies":[]}