{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"Visualizador de logs\", -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_apex_grid = _resolveComponent(\"apex-grid\");\n  return _openBlock(), _createElementBlock(\"div\", null, [_hoisted_1, _createElementVNode(\"input\", {\n    type: \"file\",\n    onChange: _cache[0] || (_cache[0] = (...args) => $options.onFileChange && $options.onFileChange(...args)),\n    accept: \".log\"\n  }, null, 32 /* HYDRATE_EVENTS */), _createVNode(_component_apex_grid, {\n    columns: $data.columns,\n    rows: $data.rows\n  }, null, 8 /* PROPS */, [\"columns\", \"rows\"])]);\n}","map":{"version":3,"names":["_createElementVNode","_createElementBlock","_hoisted_1","type","onChange","_cache","args","$options","onFileChange","accept","_createVNode","_component_apex_grid","columns","$data","rows"],"sources":["C:\\Users\\mthss\\Documentos\\Projeto_estagio\\pagina_log\\src\\views\\LogView.vue"],"sourcesContent":["<!--\r\n<template>\r\n  <div>\r\n    <h1>Visualizador de logs</h1>\r\n    <input type=\"file\" @change=\"onFileChange\" accept=\".log\">\r\n    <div v-if=\"logData.length > 0\">\r\n      <h2>Conte√∫do do arquivo:</h2>\r\n      <pre>{{ logData }}</pre>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      logData: ''\r\n    }\r\n  },\r\n  methods: {\r\n    onFileChange(event) {\r\n      const file = event.target.files[0];\r\n      const reader = new FileReader();\r\n\r\n      reader.onload = () => {\r\n        this.logData = reader.result;\r\n      };\r\n\r\n      reader.readAsText(file);\r\n    }\r\n  }\r\n}\r\n</script>\r\n-->\r\n\r\n<template>\r\n  <div>\r\n    <h1>Visualizador de logs</h1>\r\n    <input type=\"file\" @change=\"onFileChange\" accept=\".log\">\r\n    <apex-grid :columns=\"columns\" :rows=\"rows\"></apex-grid>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { VueApexCharts } from 'vue3-apexcharts';\r\n\r\nexport default {\r\n  components: {\r\n    ApexCharts: VueApexCharts,\r\n  },\r\n  data() {\r\n    return {\r\n      columns: [],\r\n      rows: []\r\n    }\r\n  },\r\n  methods: {\r\n    onFileChange(event) {\r\n      const file = event.target.files[0];\r\n      const reader = new FileReader();\r\n\r\n      reader.onload = () => {\r\n        const logData = reader.result;\r\n        this.parseLogData(logData);\r\n      };\r\n\r\n      reader.readAsText(file);\r\n    },\r\n    parseLogData(logData) {\r\n      const lines = logData.split('\\n');\r\n      const columnHeaders = lines[0].split(/\\s+/);\r\n\r\n      this.columns = columnHeaders.map(header => ({\r\n        header,\r\n        field: header\r\n      }));\r\n\r\n      this.rows = lines.slice(1).map(line => {\r\n        const cells = line.split(/\\s+/);\r\n        return columnHeaders.reduce((obj, header, index) => {\r\n          obj[header] = cells[index];\r\n          return obj;\r\n        }, {});\r\n      });\r\n    }\r\n  }\r\n}\r\n</script>\r\n"],"mappings":";gCAqCIA,mBAAA,CAA6B,YAAzB,sBAAoB;;;;uBAD1BC,mBAAA,CAIM,cAHJC,UAA6B,EAC7BF,mBAAA,CAAwD;IAAjDG,IAAI,EAAC,MAAM;IAAEC,QAAM,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,YAAA,IAAAD,QAAA,CAAAC,YAAA,IAAAF,IAAA,CAAY;IAAEG,MAAM,EAAC;qCACjDC,YAAA,CAAuDC,oBAAA;IAA3CC,OAAO,EAAEC,KAAA,CAAAD,OAAO;IAAGE,IAAI,EAAED,KAAA,CAAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}