{"ast":null,"code":"var __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { html, LitElement } from 'lit';\nimport { property } from 'lit/decorators.js';\nimport { registerComponent } from '../internal/register.js';\nimport { GRID_CELL_TAG } from '../internal/tags.js';\nimport { styles } from '../styles/body-cell/body-cell-styles.css.js';\n/**\n * Component representing a DOM cell of the Apex grid.\n */\nexport default class ApexGridCell extends LitElement {\n  constructor() {\n    super(...arguments);\n    /**\n     * Indicates whether this is the active cell in the grid.\n     *\n     */\n    this.active = false;\n  }\n  static get is() {\n    return GRID_CELL_TAG;\n  }\n  static register() {\n    registerComponent(this);\n  }\n  get context() {\n    return {\n      parent: this,\n      row: this.row,\n      column: this.column,\n      value: this.value\n    };\n  }\n  render() {\n    return this.column.cellTemplate ? this.column.cellTemplate(this.context) : html`${this.value}`;\n  }\n}\nApexGridCell.styles = styles;\n__decorate([property({\n  attribute: false\n})], ApexGridCell.prototype, \"value\", void 0);\n__decorate([property({\n  attribute: false\n})], ApexGridCell.prototype, \"column\", void 0);\n__decorate([property({\n  type: Boolean,\n  reflect: true\n})], ApexGridCell.prototype, \"active\", void 0);","map":{"version":3,"names":["html","LitElement","property","registerComponent","GRID_CELL_TAG","styles","ApexGridCell","constructor","active","is","register","context","parent","row","column","value","render","cellTemplate","__decorate","attribute","type","Boolean","reflect"],"sources":["../../../src/components/cell.ts"],"sourcesContent":["import { html, LitElement } from 'lit';\nimport { property } from 'lit/decorators.js';\nimport { registerComponent } from '../internal/register.js';\nimport { GRID_CELL_TAG } from '../internal/tags.js';\nimport type { ApexCellContext, ColumnConfiguration, PropertyType } from '../internal/types.js';\nimport { styles } from '../styles/body-cell/body-cell-styles.css.js';\nimport type ApexGridRow from './row.js';\n\n/**\n * Component representing a DOM cell of the Apex grid.\n */\nexport default class ApexGridCell<T extends object> extends LitElement {\n  public static get is() {\n    return GRID_CELL_TAG;\n  }\n\n  public static override styles = styles;\n\n  public static register() {\n    registerComponent(this);\n  }\n\n  /**\n   * The value which will be rendered by the component.\n   */\n  @property({ attribute: false })\n  public value!: PropertyType<T>;\n\n  /**\n   * A reference to the column configuration object.\n   */\n  @property({ attribute: false })\n  public column!: ColumnConfiguration<T>;\n\n  /**\n   * Indicates whether this is the active cell in the grid.\n   *\n   */\n  @property({ type: Boolean, reflect: true })\n  public active = false;\n\n  /**\n   * The parent row component holding this cell.\n   */\n  public row!: ApexGridRow<T>;\n\n  protected get context(): ApexCellContext<T> {\n    return {\n      parent: this,\n      row: this.row,\n      column: this.column,\n      value: this.value,\n    } as unknown as ApexCellContext<T>;\n  }\n\n  protected override render() {\n    return this.column.cellTemplate\n      ? this.column.cellTemplate(this.context as ApexCellContext<T> as any)\n      : html`${this.value}`;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    [ApexGridCell.is]: ApexGridCell<object>;\n  }\n}\n"],"mappings":";;;;;;;AAAA,SAASA,IAAI,EAAEC,UAAU,QAAQ,KAAK;AACtC,SAASC,QAAQ,QAAQ,mBAAmB;AAC5C,SAASC,iBAAiB,QAAQ,yBAAyB;AAC3D,SAASC,aAAa,QAAQ,qBAAqB;AAEnD,SAASC,MAAM,QAAQ,6CAA6C;AAGpE;;;AAGA,eAAc,MAAOC,YAA+B,SAAQL,UAAU;EAAtEM,YAAA;;IAuBE;;;;IAKO,KAAAC,MAAM,GAAG,KAAK;EAqBvB;EAhDS,WAAWC,EAAEA,CAAA;IAClB,OAAOL,aAAa;EACtB;EAIO,OAAOM,QAAQA,CAAA;IACpBP,iBAAiB,CAAC,IAAI,CAAC;EACzB;EA0BA,IAAcQ,OAAOA,CAAA;IACnB,OAAO;MACLC,MAAM,EAAE,IAAI;MACZC,GAAG,EAAE,IAAI,CAACA,GAAG;MACbC,MAAM,EAAE,IAAI,CAACA,MAAM;MACnBC,KAAK,EAAE,IAAI,CAACA;KACoB;EACpC;EAEmBC,MAAMA,CAAA;IACvB,OAAO,IAAI,CAACF,MAAM,CAACG,YAAY,GAC3B,IAAI,CAACH,MAAM,CAACG,YAAY,CAAC,IAAI,CAACN,OAAoC,CAAC,GACnEX,IAAI,GAAG,IAAI,CAACe,KAAK,EAAE;EACzB;;AA3CuBT,YAAA,CAAAD,MAAM,GAAGA,MAAM;AAUtCa,UAAA,EADChB,QAAQ,CAAC;EAAEiB,SAAS,EAAE;AAAK,CAAE,CAAC,C,0CACA;AAM/BD,UAAA,EADChB,QAAQ,CAAC;EAAEiB,SAAS,EAAE;AAAK,CAAE,CAAC,C,2CACQ;AAOvCD,UAAA,EADChB,QAAQ,CAAC;EAAEkB,IAAI,EAAEC,OAAO;EAAEC,OAAO,EAAE;AAAI,CAAE,CAAC,C,2CACrB"},"metadata":{},"sourceType":"module","externalDependencies":[]}