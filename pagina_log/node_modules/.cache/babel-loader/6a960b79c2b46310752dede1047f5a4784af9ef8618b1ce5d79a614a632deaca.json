{"ast":null,"code":"var __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar IgcTabComponent_1;\nimport { html, LitElement } from 'lit';\nimport { property, query } from 'lit/decorators.js';\nimport { themes } from '../../theming/theming-decorator.js';\nimport { createCounter } from '../common/util.js';\nimport { styles } from './themes/light/tab.base.css.js';\nimport { styles as bootstrap } from './themes/light/tab.bootstrap.css.js';\nimport { styles as fluent } from './themes/light/tab.fluent.css.js';\nimport { styles as indigo } from './themes/light/tab.indigo.css.js';\nlet IgcTabComponent = IgcTabComponent_1 = class IgcTabComponent extends LitElement {\n  constructor() {\n    super(...arguments);\n    this.panel = '';\n    this.selected = false;\n    this.disabled = false;\n  }\n  connectedCallback() {\n    super.connectedCallback();\n    this.id = this.getAttribute('id') || `igc-tab-${IgcTabComponent_1.increment()}`;\n  }\n  focus(options) {\n    this.tab.focus(options);\n  }\n  blur() {\n    this.tab.blur();\n  }\n  render() {\n    return html`\n      <div\n        part=\"base\"\n        role=\"tab\"\n        aria-disabled=${this.disabled ? 'true' : 'false'}\n        aria-selected=${this.selected ? 'true' : 'false'}\n        tabindex=${this.disabled || !this.selected ? -1 : 0}\n      >\n        <slot name=\"prefix\" part=\"prefix\"></slot>\n        <div part=\"content\">\n          <slot></slot>\n        </div>\n        <slot name=\"suffix\" part=\"suffix\"></slot>\n      </div>\n    `;\n  }\n};\nIgcTabComponent.tagName = 'igc-tab';\nIgcTabComponent.styles = styles;\nIgcTabComponent.increment = createCounter();\n__decorate([query('[part=\"base\"]', true)], IgcTabComponent.prototype, \"tab\", void 0);\n__decorate([property()], IgcTabComponent.prototype, \"panel\", void 0);\n__decorate([property({\n  type: Boolean,\n  reflect: true\n})], IgcTabComponent.prototype, \"selected\", void 0);\n__decorate([property({\n  type: Boolean,\n  reflect: true\n})], IgcTabComponent.prototype, \"disabled\", void 0);\nIgcTabComponent = IgcTabComponent_1 = __decorate([themes({\n  bootstrap,\n  fluent,\n  indigo\n})], IgcTabComponent);\nexport default IgcTabComponent;","map":{"version":3,"names":["html","LitElement","property","query","themes","createCounter","styles","bootstrap","fluent","indigo","IgcTabComponent","IgcTabComponent_1","constructor","panel","selected","disabled","connectedCallback","id","getAttribute","increment","focus","options","tab","blur","render","tagName","__decorate","type","Boolean","reflect"],"sources":["../../../src/components/tabs/tab.ts"],"sourcesContent":["import { html, LitElement } from 'lit';\nimport { property, query } from 'lit/decorators.js';\nimport { themes } from '../../theming/theming-decorator.js';\nimport { createCounter } from '../common/util.js';\nimport { styles } from './themes/light/tab.base.css.js';\nimport { styles as bootstrap } from './themes/light/tab.bootstrap.css.js';\nimport { styles as fluent } from './themes/light/tab.fluent.css.js';\nimport { styles as indigo } from './themes/light/tab.indigo.css.js';\n\n/**\n * Represents the tab header.\n *\n * @element igc-tab\n *\n * @slot prefix - Renders before the tab header content.\n * @slot - Renders the tab header content.\n * @slot suffix - Renders after the tab header content.\n *\n * @csspart content - The content wrapper.\n * @csspart prefix - The prefix wrapper.\n * @csspart suffix - The suffix wrapper.\n */\n@themes({ bootstrap, fluent, indigo })\nexport default class IgcTabComponent extends LitElement {\n  public static readonly tagName = 'igc-tab';\n\n  public static override styles = styles;\n\n  private static readonly increment = createCounter();\n\n  @query('[part=\"base\"]', true)\n  private tab!: HTMLElement;\n\n  /**\n   * The id of the tab panel which will be controlled by the tab.\n   * @attr\n   */\n  @property()\n  public panel = '';\n\n  /**\n   * Determines whether the tab is selected.\n   * @attr\n   */\n  @property({ type: Boolean, reflect: true })\n  public selected = false;\n\n  /**\n   * Determines whether the tab is disabled.\n   * @attr\n   */\n  @property({ type: Boolean, reflect: true })\n  public disabled = false;\n\n  public override connectedCallback(): void {\n    super.connectedCallback();\n    this.id =\n      this.getAttribute('id') || `igc-tab-${IgcTabComponent.increment()}`;\n  }\n\n  /** Sets focus to the tab. */\n  public override focus(options?: FocusOptions) {\n    this.tab.focus(options);\n  }\n\n  /** Removes focus from the tab. */\n  public override blur() {\n    this.tab.blur();\n  }\n\n  protected override render() {\n    return html`\n      <div\n        part=\"base\"\n        role=\"tab\"\n        aria-disabled=${this.disabled ? 'true' : 'false'}\n        aria-selected=${this.selected ? 'true' : 'false'}\n        tabindex=${this.disabled || !this.selected ? -1 : 0}\n      >\n        <slot name=\"prefix\" part=\"prefix\"></slot>\n        <div part=\"content\">\n          <slot></slot>\n        </div>\n        <slot name=\"suffix\" part=\"suffix\"></slot>\n      </div>\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'igc-tab': IgcTabComponent;\n  }\n}\n"],"mappings":";;;;;;;;AAAA,SAASA,IAAI,EAAEC,UAAU,QAAQ,KAAK;AACtC,SAASC,QAAQ,EAAEC,KAAK,QAAQ,mBAAmB;AACnD,SAASC,MAAM,QAAQ,oCAAoC;AAC3D,SAASC,aAAa,QAAQ,mBAAmB;AACjD,SAASC,MAAM,QAAQ,gCAAgC;AACvD,SAASA,MAAM,IAAIC,SAAS,QAAQ,qCAAqC;AACzE,SAASD,MAAM,IAAIE,MAAM,QAAQ,kCAAkC;AACnE,SAASF,MAAM,IAAIG,MAAM,QAAQ,kCAAkC;AAgBpD,IAAMC,eAAe,GAAAC,iBAAA,GAArB,MAAMD,eAAgB,SAAQT,UAAU;EAAxCW,YAAA;;IAeN,KAAAC,KAAK,GAAG,EAAE;IAOV,KAAAC,QAAQ,GAAG,KAAK;IAOhB,KAAAC,QAAQ,GAAG,KAAK;EAmCzB;EAjCkBC,iBAAiBA,CAAA;IAC/B,KAAK,CAACA,iBAAiB,EAAE;IACzB,IAAI,CAACC,EAAE,GACL,IAAI,CAACC,YAAY,CAAC,IAAI,CAAC,IAAI,WAAWP,iBAAe,CAACQ,SAAS,EAAE,EAAE;EACvE;EAGgBC,KAAKA,CAACC,OAAsB;IAC1C,IAAI,CAACC,GAAG,CAACF,KAAK,CAACC,OAAO,CAAC;EACzB;EAGgBE,IAAIA,CAAA;IAClB,IAAI,CAACD,GAAG,CAACC,IAAI,EAAE;EACjB;EAEmBC,MAAMA,CAAA;IACvB,OAAOxB,IAAI;;;;wBAIS,IAAI,CAACe,QAAQ,GAAG,MAAM,GAAG,OAAO;wBAChC,IAAI,CAACD,QAAQ,GAAG,MAAM,GAAG,OAAO;mBACrC,IAAI,CAACC,QAAQ,IAAI,CAAC,IAAI,CAACD,QAAQ,GAAG,CAAC,CAAC,GAAG,CAAC;;;;;;;;KAQtD;EACH;;AA9DuBJ,eAAA,CAAAe,OAAO,GAAG,SAAS;AAEnBf,eAAA,CAAAJ,MAAM,GAAGA,MAAM;AAEdI,eAAA,CAAAS,SAAS,GAAGd,aAAa,EAAE;AAGnDqB,UAAA,EADCvB,KAAK,CAAC,eAAe,EAAE,IAAI,CAAC,C,2CACH;AAO1BuB,UAAA,EADCxB,QAAQ,EAAE,C,6CACO;AAOlBwB,UAAA,EADCxB,QAAQ,CAAC;EAAEyB,IAAI,EAAEC,OAAO;EAAEC,OAAO,EAAE;AAAI,CAAE,CAAC,C,gDACnB;AAOxBH,UAAA,EADCxB,QAAQ,CAAC;EAAEyB,IAAI,EAAEC,OAAO;EAAEC,OAAO,EAAE;AAAI,CAAE,CAAC,C,gDACnB;AA7BLnB,eAAe,GAAAC,iBAAA,GAAAe,UAAA,EADnCtB,MAAM,CAAC;EAAEG,SAAS;EAAEC,MAAM;EAAEC;AAAM,CAAE,CAAC,C,EACjBC,eAAe,CAgEnC;eAhEoBA,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}