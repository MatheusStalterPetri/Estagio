{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default class GroupDataOperation {\n  constructor() {\n    this.orderBy = new Map(Object.entries({\n      asc: 1,\n      desc: -1\n    }));\n  }\n  resolveValue(record, key) {\n    return record[key];\n  }\n  compareValues(first, second) {\n    if (typeof first === 'string' && typeof second === 'string') {\n      return first.localeCompare(second);\n    }\n    return first > second ? 1 : first < second ? -1 : 0;\n  }\n  compareObjects(first, second, key, direction) {\n    const [a, b] = [this.resolveValue(first, key), this.resolveValue(second, key)];\n    return this.orderBy.get(direction) * this.compareValues(a, b);\n  }\n  apply(data, controller) {\n    const {\n      groupingOptions: {\n        groupKey,\n        valueKey,\n        displayKey,\n        direction\n      }\n    } = controller;\n    if (!groupKey) return data;\n    const groups = new Map();\n    data.forEach(item => {\n      var _a, _b;\n      if (typeof item !== 'object' || item === null) return;\n      const key = (_a = item[groupKey]) !== null && _a !== void 0 ? _a : 'Other';\n      const group = (_b = groups.get(key)) !== null && _b !== void 0 ? _b : [];\n      if (group.length === 0) {\n        group.push({\n          [valueKey]: key,\n          [displayKey]: key,\n          [groupKey]: key,\n          header: true\n        });\n      }\n      group.push(item);\n      groups.set(key, group);\n    });\n    groups.forEach(group => {\n      group.sort((a, b) => {\n        if (a.header || b.header) return;\n        return this.compareObjects(a, b, displayKey, direction);\n      });\n    });\n    return Array.from(groups.values()).flat();\n  }\n}","map":{"version":3,"names":["GroupDataOperation","constructor","orderBy","Map","Object","entries","asc","desc","resolveValue","record","key","compareValues","first","second","localeCompare","compareObjects","direction","a","b","get","apply","data","controller","groupingOptions","groupKey","valueKey","displayKey","groups","forEach","item","_a","group","_b","length","push","header","set","sort","Array","from","values","flat"],"sources":["../../../../src/components/combo/operations/group.ts"],"sourcesContent":["import { DataController } from '../controllers/data.js';\nimport { ComboRecord, GroupingDirection, Keys, Values } from '../types.js';\n\nexport default class GroupDataOperation<T extends object> {\n  protected orderBy = new Map(\n    Object.entries({\n      asc: 1,\n      desc: -1,\n    })\n  );\n\n  protected resolveValue(record: T, key: Keys<T>) {\n    return record[key];\n  }\n\n  protected compareValues(first: Values<T>, second: Values<T>) {\n    if (typeof first === 'string' && typeof second === 'string') {\n      return first.localeCompare(second);\n    }\n    return first > second ? 1 : first < second ? -1 : 0;\n  }\n\n  protected compareObjects(\n    first: T,\n    second: T,\n    key: Keys<T>,\n    direction: GroupingDirection\n  ) {\n    const [a, b] = [\n      this.resolveValue(first, key),\n      this.resolveValue(second, key),\n    ];\n\n    return this.orderBy.get(direction)! * this.compareValues(a, b);\n  }\n\n  public apply(data: T[], controller: DataController<T>) {\n    const {\n      groupingOptions: { groupKey, valueKey, displayKey, direction },\n    } = controller;\n\n    if (!groupKey) return data;\n\n    const groups = new Map();\n\n    data.forEach((item: T) => {\n      if (typeof item !== 'object' || item === null) return;\n\n      const key = item[groupKey!] ?? 'Other';\n      const group = groups.get(key) ?? <ComboRecord<T>>[];\n\n      if (group.length === 0) {\n        group.push({\n          [valueKey as Keys<T>]: key,\n          [displayKey as Keys<T>]: key,\n          [groupKey as Keys<T>]: key,\n          header: true,\n        });\n      }\n\n      group.push(item);\n      groups.set(key, group);\n    });\n\n    groups.forEach((group) => {\n      group.sort((a: ComboRecord<T>, b: ComboRecord<T>) => {\n        if (a.header || b.header) return;\n        return this.compareObjects(a, b, displayKey!, direction);\n      });\n    });\n\n    return Array.from(groups.values()).flat();\n  }\n}\n"],"mappings":";AAGA,eAAc,MAAOA,kBAAkB;EAAvCC,YAAA;IACY,KAAAC,OAAO,GAAG,IAAIC,GAAG,CACzBC,MAAM,CAACC,OAAO,CAAC;MACbC,GAAG,EAAE,CAAC;MACNC,IAAI,EAAE,CAAC;KACR,CAAC,CACH;EAgEH;EA9DYC,YAAYA,CAACC,MAAS,EAAEC,GAAY;IAC5C,OAAOD,MAAM,CAACC,GAAG,CAAC;EACpB;EAEUC,aAAaA,CAACC,KAAgB,EAAEC,MAAiB;IACzD,IAAI,OAAOD,KAAK,KAAK,QAAQ,IAAI,OAAOC,MAAM,KAAK,QAAQ,EAAE;MAC3D,OAAOD,KAAK,CAACE,aAAa,CAACD,MAAM,CAAC;;IAEpC,OAAOD,KAAK,GAAGC,MAAM,GAAG,CAAC,GAAGD,KAAK,GAAGC,MAAM,GAAG,CAAC,CAAC,GAAG,CAAC;EACrD;EAEUE,cAAcA,CACtBH,KAAQ,EACRC,MAAS,EACTH,GAAY,EACZM,SAA4B;IAE5B,MAAM,CAACC,CAAC,EAAEC,CAAC,CAAC,GAAG,CACb,IAAI,CAACV,YAAY,CAACI,KAAK,EAAEF,GAAG,CAAC,EAC7B,IAAI,CAACF,YAAY,CAACK,MAAM,EAAEH,GAAG,CAAC,CAC/B;IAED,OAAO,IAAI,CAACR,OAAO,CAACiB,GAAG,CAACH,SAAS,CAAE,GAAG,IAAI,CAACL,aAAa,CAACM,CAAC,EAAEC,CAAC,CAAC;EAChE;EAEOE,KAAKA,CAACC,IAAS,EAAEC,UAA6B;IACnD,MAAM;MACJC,eAAe,EAAE;QAAEC,QAAQ;QAAEC,QAAQ;QAAEC,UAAU;QAAEV;MAAS;IAAE,CAC/D,GAAGM,UAAU;IAEd,IAAI,CAACE,QAAQ,EAAE,OAAOH,IAAI;IAE1B,MAAMM,MAAM,GAAG,IAAIxB,GAAG,EAAE;IAExBkB,IAAI,CAACO,OAAO,CAAEC,IAAO,IAAI;;MACvB,IAAI,OAAOA,IAAI,KAAK,QAAQ,IAAIA,IAAI,KAAK,IAAI,EAAE;MAE/C,MAAMnB,GAAG,GAAG,CAAAoB,EAAA,GAAAD,IAAI,CAACL,QAAS,CAAC,cAAAM,EAAA,cAAAA,EAAA,GAAI,OAAO;MACtC,MAAMC,KAAK,GAAG,CAAAC,EAAA,GAAAL,MAAM,CAACR,GAAG,CAACT,GAAG,CAAC,cAAAsB,EAAA,cAAAA,EAAA,GAAoB,EAAE;MAEnD,IAAID,KAAK,CAACE,MAAM,KAAK,CAAC,EAAE;QACtBF,KAAK,CAACG,IAAI,CAAC;UACT,CAACT,QAAmB,GAAGf,GAAG;UAC1B,CAACgB,UAAqB,GAAGhB,GAAG;UAC5B,CAACc,QAAmB,GAAGd,GAAG;UAC1ByB,MAAM,EAAE;SACT,CAAC;;MAGJJ,KAAK,CAACG,IAAI,CAACL,IAAI,CAAC;MAChBF,MAAM,CAACS,GAAG,CAAC1B,GAAG,EAAEqB,KAAK,CAAC;IACxB,CAAC,CAAC;IAEFJ,MAAM,CAACC,OAAO,CAAEG,KAAK,IAAI;MACvBA,KAAK,CAACM,IAAI,CAAC,CAACpB,CAAiB,EAAEC,CAAiB,KAAI;QAClD,IAAID,CAAC,CAACkB,MAAM,IAAIjB,CAAC,CAACiB,MAAM,EAAE;QAC1B,OAAO,IAAI,CAACpB,cAAc,CAACE,CAAC,EAAEC,CAAC,EAAEQ,UAAW,EAAEV,SAAS,CAAC;MAC1D,CAAC,CAAC;IACJ,CAAC,CAAC;IAEF,OAAOsB,KAAK,CAACC,IAAI,CAACZ,MAAM,CAACa,MAAM,EAAE,CAAC,CAACC,IAAI,EAAE;EAC3C"},"metadata":{},"sourceType":"module","externalDependencies":[]}