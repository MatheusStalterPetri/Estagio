{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"Leitura de Log do Squid Web Cache\", -1 /* HOISTED */);\nconst _hoisted_2 = {\n  key: 0\n};\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"thead\", null, [/*#__PURE__*/_createElementVNode(\"tr\", null, [/*#__PURE__*/_createElementVNode(\"th\", null, \"IP de Origem\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Data e Hora\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"URL Requisitada\")])], -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_hoisted_1, _createElementVNode(\"input\", {\n    type: \"file\",\n    onChange: _cache[0] || (_cache[0] = (...args) => $setup.handleFileUpload && $setup.handleFileUpload(...args))\n  }, null, 32 /* HYDRATE_EVENTS */), $setup.logData ? (_openBlock(), _createElementBlock(\"table\", _hoisted_2, [_hoisted_3, _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.logData, (log, index) => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: index\n    }, [_createElementVNode(\"td\", null, _toDisplayString(log.ip), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(log.timestamp), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(log.url), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))])])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["_createElementVNode","_createElementBlock","_hoisted_1","type","onChange","_cache","args","$setup","handleFileUpload","logData","_hoisted_2","_hoisted_3","_Fragment","_renderList","log","index","key","_toDisplayString","ip","timestamp","url"],"sources":["C:\\Users\\mthss\\Documentos\\Projeto_estagio\\pagina_log\\src\\views\\LogView.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <h1>Leitura de Log do Squid Web Cache</h1>\r\n    <input type=\"file\" @change=\"handleFileUpload\" />\r\n    <table v-if=\"logData\">\r\n      <thead>\r\n        <tr>\r\n          <th>IP de Origem</th>\r\n          <th>Data e Hora</th>\r\n          <th>URL Requisitada</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr v-for=\"(log, index) in logData\" :key=\"index\">\r\n          <td>{{ log.ip }}</td>\r\n          <td>{{ log.timestamp }}</td>\r\n          <td>{{ log.url }}</td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref } from 'vue';\r\n\r\nexport default {\r\n  name: 'LogSquid',\r\n\r\n  setup() {\r\n    const logData = ref(null);\r\n\r\n    const handleFileUpload = (event) => {\r\n      const file = event.target.files[0];\r\n      const reader = new FileReader();\r\n\r\n      reader.onload = () => {\r\n        const logContent = reader.result;\r\n        const regex = /(.)\\1+/g; // Expressão regular para encontrar sequências repetidas\r\n\r\n        // Substitui as sequências repetidas por uma única ocorrência do caractere\r\n        const cleanedLog = logContent.replace(regex, '$1');\r\n\r\n        // Separa o log em linhas e transforma cada linha em um objeto\r\n        const logArray = cleanedLog.split('\\n').map((line) => {\r\n          const [timestamp, ip, url] = line.split(/\\s+/);\r\n          return {\r\n            timestamp,\r\n            ip,\r\n            url\r\n          };\r\n        });\r\n\r\n        logData.value = logArray;\r\n      };\r\n\r\n      reader.readAsText(file);\r\n    };\r\n\r\n    return {\r\n      logData,\r\n      handleFileUpload\r\n    };\r\n  }\r\n};\r\n</script>\r\n"],"mappings":";gCAEIA,mBAAA,CAA0C,YAAtC,mCAAiC;;;;gCAGnCA,mBAAA,CAMQ,gB,aALNA,mBAAA,CAIK,a,aAHHA,mBAAA,CAAqB,YAAjB,cAAY,G,aAChBA,mBAAA,CAAoB,YAAhB,aAAW,G,aACfA,mBAAA,CAAwB,YAApB,iBAAe,E;;;uBAR3BC,mBAAA,CAmBM,cAlBJC,UAA0C,EAC1CF,mBAAA,CAAgD;IAAzCG,IAAI,EAAC,MAAM;IAAEC,QAAM,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,MAAA,CAAAC,gBAAA,IAAAD,MAAA,CAAAC,gBAAA,IAAAF,IAAA,CAAgB;qCAC/BC,MAAA,CAAAE,OAAO,I,cAApBR,mBAAA,CAeQ,SAAAS,UAAA,GAdNC,UAMQ,EACRX,mBAAA,CAMQ,iB,kBALNC,mBAAA,CAIKW,SAAA,QAAAC,WAAA,CAJsBN,MAAA,CAAAE,OAAO,GAAtBK,GAAG,EAAEC,KAAK;yBAAtBd,mBAAA,CAIK;MAJgCe,GAAG,EAAED;IAAK,IAC7Cf,mBAAA,CAAqB,YAAAiB,gBAAA,CAAdH,GAAG,CAACI,EAAE,kBACblB,mBAAA,CAA4B,YAAAiB,gBAAA,CAArBH,GAAG,CAACK,SAAS,kBACpBnB,mBAAA,CAAsB,YAAAiB,gBAAA,CAAfH,GAAG,CAACM,GAAG,iB"},"metadata":{},"sourceType":"module","externalDependencies":[]}