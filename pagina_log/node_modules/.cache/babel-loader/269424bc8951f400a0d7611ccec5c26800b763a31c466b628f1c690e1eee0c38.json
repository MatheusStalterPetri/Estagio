{"ast":null,"code":"var __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar IgcExpansionPanelComponent_1;\nimport { LitElement, html } from 'lit';\nimport { property, query } from 'lit/decorators.js';\nimport { EventEmitterMixin } from '../common/mixins/event-emitter.js';\nimport { themes } from '../../theming/theming-decorator.js';\nimport { styles } from './themes/light/expansion-panel.base.css.js';\nimport { styles as bootstrap } from './themes/light/expansion-panel.bootstrap.css.js';\nimport { styles as fluent } from './themes/light/expansion-panel.fluent.css.js';\nimport { styles as indigo } from './themes/light/expansion-panel.indigo.css.js';\nimport { createCounter } from '../common/util.js';\nimport { defineComponents } from '../common/definitions/defineComponents.js';\nimport IgcIconComponent from '../icon/icon.js';\nimport { AnimationPlayer, growVerIn, growVerOut } from '../../animations/index.js';\ndefineComponents(IgcIconComponent);\nlet IgcExpansionPanelComponent = IgcExpansionPanelComponent_1 = class IgcExpansionPanelComponent extends EventEmitterMixin(LitElement) {\n  constructor() {\n    super(...arguments);\n    this.open = false;\n    this.disabled = false;\n    this.indicatorPosition = 'start';\n  }\n  connectedCallback() {\n    super.connectedCallback();\n    this.panelId = this.getAttribute('id') || `igc-expansion-panel-${IgcExpansionPanelComponent_1.increment()}`;\n  }\n  firstUpdated() {\n    this.animationPlayer = new AnimationPlayer(this.panelContent);\n  }\n  handleClicked() {\n    this.panelHeader.focus();\n    if (this.open) {\n      this.closeWithEvent();\n    } else {\n      this.openWithEvent();\n    }\n  }\n  handleKeydown(event) {\n    if (this.disabled) {\n      return;\n    }\n    switch (event.key.toLowerCase()) {\n      case 'arrowdown':\n      case 'down':\n        if (event.altKey) {\n          this.openWithEvent();\n        }\n        break;\n      case 'arrowup':\n      case 'up':\n        if (event.altKey) {\n          this.closeWithEvent();\n        }\n        break;\n      case 'enter':\n      case ' ':\n        this.open ? this.closeWithEvent() : this.openWithEvent();\n        break;\n    }\n  }\n  async toggleAnimation(dir) {\n    const animation = dir === 'open' ? growVerIn : growVerOut;\n    const [_, event] = await Promise.all([this.animationPlayer.stopAll(), this.animationPlayer.play(animation)]);\n    return event.type === 'finish';\n  }\n  async openWithEvent() {\n    if (this.open) {\n      return;\n    }\n    const args = {\n      cancelable: true,\n      detail: this\n    };\n    const allowed = this.emitEvent('igcOpening', args);\n    if (!allowed) {\n      return;\n    }\n    this.open = true;\n    if (await this.toggleAnimation('open')) {\n      this.emitEvent('igcOpened', {\n        detail: this\n      });\n    }\n  }\n  async closeWithEvent() {\n    if (!this.open) {\n      return;\n    }\n    const args = {\n      cancelable: true,\n      detail: this\n    };\n    const allowed = this.emitEvent('igcClosing', args);\n    if (!allowed) {\n      return;\n    }\n    this.open = false;\n    if (await this.toggleAnimation('close')) {\n      this.emitEvent('igcClosed', {\n        detail: this\n      });\n    }\n  }\n  toggle() {\n    this.open ? this.hide() : this.show();\n  }\n  hide() {\n    if (this.open) {\n      this.toggleAnimation('close');\n    }\n    this.open = false;\n  }\n  show() {\n    if (!this.open) {\n      this.toggleAnimation('open');\n    }\n    this.open = true;\n  }\n  indicatorTemplate() {\n    return html`\n      <div part=\"indicator\" aria-hidden=\"true\">\n        <slot name=\"indicator\">\n          <igc-icon\n            name=${this.open ? 'keyboard_arrow_up' : 'keyboard_arrow_down'}\n            collection=\"internal\"\n          >\n          </igc-icon>\n        </slot>\n      </div>\n    `;\n  }\n  headerTemplate() {\n    return html`\n      <div\n        part=\"header\"\n        id=\"${this.panelId}-header\"\n        role=\"button\"\n        aria-expanded=\"${this.open}\"\n        aria-disabled=\"${this.disabled}\"\n        aria-controls=\"${this.panelId}-content\"\n        tabindex=${this.disabled ? '-1' : '0'}\n        @click=${this.handleClicked}\n        @keydown=${this.handleKeydown}\n      >\n        ${this.indicatorTemplate()}\n        <div>\n          <slot name=\"title\" part=\"title\"></slot>\n          <slot name=\"subtitle\" part=\"subtitle\"></slot>\n        </div>\n      </div>\n    `;\n  }\n  contentTemplate() {\n    return html`\n      <div\n        part=\"content\"\n        role=\"region\"\n        id=\"${this.panelId}-content\"\n        aria-labelledby=\"${this.panelId}-header\"\n        aria-hidden=${!this.open}\n      >\n        <slot></slot>\n      </div>\n    `;\n  }\n  render() {\n    return html` ${this.headerTemplate()} ${this.contentTemplate()}`;\n  }\n};\nIgcExpansionPanelComponent.tagName = 'igc-expansion-panel';\nIgcExpansionPanelComponent.styles = styles;\nIgcExpansionPanelComponent.increment = createCounter();\n__decorate([property({\n  reflect: true,\n  type: Boolean\n})], IgcExpansionPanelComponent.prototype, \"open\", void 0);\n__decorate([property({\n  reflect: true,\n  type: Boolean\n})], IgcExpansionPanelComponent.prototype, \"disabled\", void 0);\n__decorate([property({\n  reflect: true,\n  attribute: 'indicator-position'\n})], IgcExpansionPanelComponent.prototype, \"indicatorPosition\", void 0);\n__decorate([query('[part~=\"header\"]', true)], IgcExpansionPanelComponent.prototype, \"panelHeader\", void 0);\n__decorate([query('[part~=\"content\"]', true)], IgcExpansionPanelComponent.prototype, \"panelContent\", void 0);\nIgcExpansionPanelComponent = IgcExpansionPanelComponent_1 = __decorate([themes({\n  bootstrap,\n  fluent,\n  indigo\n})], IgcExpansionPanelComponent);\nexport default IgcExpansionPanelComponent;","map":{"version":3,"names":["LitElement","html","property","query","EventEmitterMixin","themes","styles","bootstrap","fluent","indigo","createCounter","defineComponents","IgcIconComponent","AnimationPlayer","growVerIn","growVerOut","IgcExpansionPanelComponent","IgcExpansionPanelComponent_1","constructor","open","disabled","indicatorPosition","connectedCallback","panelId","getAttribute","increment","firstUpdated","animationPlayer","panelContent","handleClicked","panelHeader","focus","closeWithEvent","openWithEvent","handleKeydown","event","key","toLowerCase","altKey","toggleAnimation","dir","animation","_","Promise","all","stopAll","play","type","args","cancelable","detail","allowed","emitEvent","toggle","hide","show","indicatorTemplate","headerTemplate","contentTemplate","render","tagName","__decorate","reflect","Boolean","attribute"],"sources":["../../../src/components/expansion-panel/expansion-panel.ts"],"sourcesContent":["import { LitElement, html } from 'lit';\nimport { property, query } from 'lit/decorators.js';\nimport { Constructor } from '../common/mixins/constructor.js';\nimport { EventEmitterMixin } from '../common/mixins/event-emitter.js';\nimport { themes } from '../../theming/theming-decorator.js';\nimport { styles } from './themes/light/expansion-panel.base.css.js';\nimport { styles as bootstrap } from './themes/light/expansion-panel.bootstrap.css.js';\nimport { styles as fluent } from './themes/light/expansion-panel.fluent.css.js';\nimport { styles as indigo } from './themes/light/expansion-panel.indigo.css.js';\nimport { createCounter } from '../common/util.js';\n\nimport { defineComponents } from '../common/definitions/defineComponents.js';\nimport IgcIconComponent from '../icon/icon.js';\nimport {\n  AnimationPlayer,\n  growVerIn,\n  growVerOut,\n} from '../../animations/index.js';\n\ndefineComponents(IgcIconComponent);\n\nexport interface IgcExpansionPanelComponentEventMap {\n  igcOpening: CustomEvent<IgcExpansionPanelComponent>;\n  igcOpened: CustomEvent<IgcExpansionPanelComponent>;\n  igcClosing: CustomEvent<IgcExpansionPanelComponent>;\n  igcClosed: CustomEvent<IgcExpansionPanelComponent>;\n}\n\n/**\n * The Expansion Panel Component provides a way to display information in a toggleable way -\n * compact summary view containing title and description and expanded detail view containing\n * additional content to the summary header.\n *\n * @element igc-expansion-panel\n *\n * @slot title - renders the title of the panel's header\n * @slot subtitle - renders the subtitle of the panel's header\n * @slot indicator - renders the expand/collapsed indicator\n *\n * @fires igcOpening - Emitted before opening the expansion panel.\n * @fires igcOpened - Emitted after the expansion panel is opened.\n * @fires igcClosing - Emitted before closing the expansion panel.\n * @fires igcClosed - Emitted after the expansion panel is closed.\n *\n * @csspart header - The container of the expansion indicator, title and subtitle.\n * @csspart title -  The title container.\n * @csspart subtitle - The subtitle container.\n * @csspart indicator - The indicator container.\n * @csspart content - The expansion panel's content wrapper.\n */\n@themes({ bootstrap, fluent, indigo })\nexport default class IgcExpansionPanelComponent extends EventEmitterMixin<\n  IgcExpansionPanelComponentEventMap,\n  Constructor<LitElement>\n>(LitElement) {\n  public static readonly tagName = 'igc-expansion-panel';\n  public static styles = styles;\n  private static readonly increment = createCounter();\n  private animationPlayer!: AnimationPlayer;\n\n  /**\n   * Indicates whether the contents of the control should be visible.\n   * @attr\n   */\n  @property({ reflect: true, type: Boolean })\n  public open = false;\n\n  /**\n   * Get/Set whether the expansion panel is disabled. Disabled panels are ignored for user interactions.\n   * @attr\n   */\n  @property({ reflect: true, type: Boolean })\n  public disabled = false;\n\n  /**\n   * The indicator position of the expansion panel.\n   * @attr indicator-position\n   */\n  @property({ reflect: true, attribute: 'indicator-position' })\n  public indicatorPosition: 'start' | 'end' | 'none' = 'start';\n\n  @query('[part~=\"header\"]', true)\n  protected panelHeader!: HTMLElement;\n\n  @query('[part~=\"content\"]', true)\n  protected panelContent!: HTMLElement;\n\n  private panelId!: string;\n\n  public override connectedCallback() {\n    super.connectedCallback();\n    this.panelId =\n      this.getAttribute('id') ||\n      `igc-expansion-panel-${IgcExpansionPanelComponent.increment()}`;\n  }\n\n  public override firstUpdated() {\n    this.animationPlayer = new AnimationPlayer(this.panelContent);\n  }\n\n  private handleClicked() {\n    this.panelHeader!.focus();\n\n    if (this.open) {\n      this.closeWithEvent();\n    } else {\n      this.openWithEvent();\n    }\n  }\n\n  private handleKeydown(event: KeyboardEvent) {\n    if (this.disabled) {\n      return;\n    }\n\n    switch (event.key.toLowerCase()) {\n      case 'arrowdown':\n      case 'down':\n        if (event.altKey) {\n          this.openWithEvent();\n        }\n        break;\n      case 'arrowup':\n      case 'up':\n        if (event.altKey) {\n          this.closeWithEvent();\n        }\n        break;\n      case 'enter':\n      case ' ':\n        this.open ? this.closeWithEvent() : this.openWithEvent();\n        break;\n    }\n  }\n\n  private async toggleAnimation(dir: 'open' | 'close') {\n    const animation = dir === 'open' ? growVerIn : growVerOut;\n\n    const [_, event] = await Promise.all([\n      this.animationPlayer.stopAll(),\n      this.animationPlayer.play(animation),\n    ]);\n\n    return event.type === 'finish';\n  }\n\n  /**\n   * @private\n   * Opens the panel.\n   */\n  private async openWithEvent() {\n    if (this.open) {\n      return;\n    }\n\n    const args = {\n      cancelable: true,\n      detail: this,\n    };\n\n    const allowed = this.emitEvent('igcOpening', args);\n\n    if (!allowed) {\n      return;\n    }\n\n    this.open = true;\n\n    if (await this.toggleAnimation('open')) {\n      this.emitEvent('igcOpened', { detail: this });\n    }\n  }\n\n  /**\n   * @private\n   * Closes the panel.\n   */\n  private async closeWithEvent() {\n    if (!this.open) {\n      return;\n    }\n\n    const args = {\n      cancelable: true,\n      detail: this,\n    };\n\n    const allowed = this.emitEvent('igcClosing', args);\n\n    if (!allowed) {\n      return;\n    }\n\n    this.open = false;\n\n    if (await this.toggleAnimation('close')) {\n      this.emitEvent('igcClosed', { detail: this });\n    }\n  }\n\n  /** Toggles panel open state. */\n  public toggle(): void {\n    this.open ? this.hide() : this.show();\n  }\n\n  /** Hides the panel content. */\n  public hide(): void {\n    if (this.open) {\n      this.toggleAnimation('close');\n    }\n\n    this.open = false;\n  }\n\n  /** Shows the panel content. */\n  public show(): void {\n    if (!this.open) {\n      this.toggleAnimation('open');\n    }\n\n    this.open = true;\n  }\n\n  private indicatorTemplate() {\n    return html`\n      <div part=\"indicator\" aria-hidden=\"true\">\n        <slot name=\"indicator\">\n          <igc-icon\n            name=${this.open ? 'keyboard_arrow_up' : 'keyboard_arrow_down'}\n            collection=\"internal\"\n          >\n          </igc-icon>\n        </slot>\n      </div>\n    `;\n  }\n\n  private headerTemplate() {\n    return html`\n      <div\n        part=\"header\"\n        id=\"${this.panelId!}-header\"\n        role=\"button\"\n        aria-expanded=\"${this.open}\"\n        aria-disabled=\"${this.disabled}\"\n        aria-controls=\"${this.panelId!}-content\"\n        tabindex=${this.disabled ? '-1' : '0'}\n        @click=${this.handleClicked}\n        @keydown=${this.handleKeydown}\n      >\n        ${this.indicatorTemplate()}\n        <div>\n          <slot name=\"title\" part=\"title\"></slot>\n          <slot name=\"subtitle\" part=\"subtitle\"></slot>\n        </div>\n      </div>\n    `;\n  }\n\n  private contentTemplate() {\n    return html`\n      <div\n        part=\"content\"\n        role=\"region\"\n        id=\"${this.panelId!}-content\"\n        aria-labelledby=\"${this.panelId!}-header\"\n        aria-hidden=${!this.open}\n      >\n        <slot></slot>\n      </div>\n    `;\n  }\n\n  protected override render() {\n    return html` ${this.headerTemplate()} ${this.contentTemplate()}`;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'igc-expansion-panel': IgcExpansionPanelComponent;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}