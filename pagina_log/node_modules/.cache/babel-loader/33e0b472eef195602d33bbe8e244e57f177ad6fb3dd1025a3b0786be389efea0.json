{"ast":null,"code":"var __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { html } from 'lit';\nimport { property } from 'lit/decorators.js';\nimport { themes } from '../../theming/theming-decorator.js';\nimport { IgcButtonBaseComponent } from './button-base.js';\nimport { styles } from './themes/button/light/button.base.css.js';\nimport { styles as bootstrap } from './themes/button/light/button.bootstrap.css.js';\nimport { styles as fluent } from './themes/button/light/button.fluent.css.js';\nimport { styles as indigo } from './themes/button/light/button.indigo.css.js';\nimport { styles as material } from './themes/button/light/button.material.css.js';\nlet IgcButtonComponent = class IgcButtonComponent extends IgcButtonBaseComponent {\n  constructor() {\n    super();\n    this.variant = 'contained';\n    this.size = 'medium';\n  }\n  get classes() {\n    const {\n      size,\n      variant\n    } = this;\n    return {\n      flat: variant === 'flat',\n      outlined: variant === 'outlined',\n      contained: variant === 'contained',\n      fab: variant === 'fab',\n      small: size === 'small',\n      medium: size === 'medium',\n      large: size === 'large',\n      disabled: this.disabled\n    };\n  }\n  renderContent() {\n    return html`\n      <slot name=\"prefix\"></slot>\n      <slot></slot>\n      <slot name=\"suffix\"></slot>\n    `;\n  }\n};\nIgcButtonComponent.tagName = 'igc-button';\nIgcButtonComponent.styles = styles;\n__decorate([property({\n  reflect: true\n})], IgcButtonComponent.prototype, \"variant\", void 0);\nIgcButtonComponent = __decorate([themes({\n  bootstrap,\n  indigo,\n  fluent,\n  material\n})], IgcButtonComponent);\nexport default IgcButtonComponent;","map":{"version":3,"names":["html","property","themes","IgcButtonBaseComponent","styles","bootstrap","fluent","indigo","material","IgcButtonComponent","constructor","variant","size","classes","flat","outlined","contained","fab","small","medium","large","disabled","renderContent","tagName","__decorate","reflect"],"sources":["../../../src/components/button/button.ts"],"sourcesContent":["import { html } from 'lit';\nimport { property } from 'lit/decorators.js';\nimport { themes } from '../../theming/theming-decorator.js';\nimport { IgcButtonBaseComponent } from './button-base.js';\nimport { styles } from './themes/button/light/button.base.css.js';\nimport { styles as bootstrap } from './themes/button/light/button.bootstrap.css.js';\nimport { styles as fluent } from './themes/button/light/button.fluent.css.js';\nimport { styles as indigo } from './themes/button/light/button.indigo.css.js';\nimport { styles as material } from './themes/button/light/button.material.css.js';\n\n/**\n * Represents a clickable button, used to submit forms or anywhere in a\n * document for accessible, standard button functionality.\n *\n * @element igc-button\n *\n * @slot - Renders the label of the button.\n * @slot prefix - Renders content before the label of the button.\n * @slot suffix - Renders content after the label of the button.\n *\n * @fires igcFocus - Emitted when the button gains focus.\n * @fires igcBlur - Emitted when the button loses focus.\n *\n * @csspart base - The native button element.\n * @csspart prefix - The prefix container.\n * @csspart suffix - The suffix container.\n */\n@themes({ bootstrap, indigo, fluent, material })\nexport default class IgcButtonComponent extends IgcButtonBaseComponent {\n  public static readonly tagName = 'igc-button';\n\n  protected static styles = styles;\n\n  /**\n   * Sets the variant of the button.\n   * @attr\n   */\n  @property({ reflect: true })\n  public variant: 'flat' | 'contained' | 'outlined' | 'fab' = 'contained';\n\n  constructor() {\n    super();\n    this.size = 'medium';\n  }\n\n  protected override get classes() {\n    const { size, variant } = this;\n\n    return {\n      flat: variant === 'flat',\n      outlined: variant === 'outlined',\n      contained: variant === 'contained',\n      fab: variant === 'fab',\n      small: size === 'small',\n      medium: size === 'medium',\n      large: size === 'large',\n      disabled: this.disabled,\n    };\n  }\n\n  protected renderContent() {\n    return html`\n      <slot name=\"prefix\"></slot>\n      <slot></slot>\n      <slot name=\"suffix\"></slot>\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'igc-button': IgcButtonComponent;\n  }\n}\n"],"mappings":";;;;;;;AAAA,SAASA,IAAI,QAAQ,KAAK;AAC1B,SAASC,QAAQ,QAAQ,mBAAmB;AAC5C,SAASC,MAAM,QAAQ,oCAAoC;AAC3D,SAASC,sBAAsB,QAAQ,kBAAkB;AACzD,SAASC,MAAM,QAAQ,0CAA0C;AACjE,SAASA,MAAM,IAAIC,SAAS,QAAQ,+CAA+C;AACnF,SAASD,MAAM,IAAIE,MAAM,QAAQ,4CAA4C;AAC7E,SAASF,MAAM,IAAIG,MAAM,QAAQ,4CAA4C;AAC7E,SAASH,MAAM,IAAII,QAAQ,QAAQ,8CAA8C;AAoBlE,IAAMC,kBAAkB,GAAxB,MAAMA,kBAAmB,SAAQN,sBAAsB;EAYpEO,YAAA;IACE,KAAK,EAAE;IAHF,KAAAC,OAAO,GAA8C,WAAW;IAIrE,IAAI,CAACC,IAAI,GAAG,QAAQ;EACtB;EAEA,IAAuBC,OAAOA,CAAA;IAC5B,MAAM;MAAED,IAAI;MAAED;IAAO,CAAE,GAAG,IAAI;IAE9B,OAAO;MACLG,IAAI,EAAEH,OAAO,KAAK,MAAM;MACxBI,QAAQ,EAAEJ,OAAO,KAAK,UAAU;MAChCK,SAAS,EAAEL,OAAO,KAAK,WAAW;MAClCM,GAAG,EAAEN,OAAO,KAAK,KAAK;MACtBO,KAAK,EAAEN,IAAI,KAAK,OAAO;MACvBO,MAAM,EAAEP,IAAI,KAAK,QAAQ;MACzBQ,KAAK,EAAER,IAAI,KAAK,OAAO;MACvBS,QAAQ,EAAE,IAAI,CAACA;KAChB;EACH;EAEUC,aAAaA,CAAA;IACrB,OAAOtB,IAAI;;;;KAIV;EACH;;AArCuBS,kBAAA,CAAAc,OAAO,GAAG,YAAY;AAE5Bd,kBAAA,CAAAL,MAAM,GAAGA,MAAM;AAOhCoB,UAAA,EADCvB,QAAQ,CAAC;EAAEwB,OAAO,EAAE;AAAI,CAAE,CAAC,C,kDAC4C;AAVrDhB,kBAAkB,GAAAe,UAAA,EADtCtB,MAAM,CAAC;EAAEG,SAAS;EAAEE,MAAM;EAAED,MAAM;EAAEE;AAAQ,CAAE,CAAC,C,EAC3BC,kBAAkB,CAuCtC;eAvCoBA,kBAAkB"},"metadata":{},"sourceType":"module","externalDependencies":[]}