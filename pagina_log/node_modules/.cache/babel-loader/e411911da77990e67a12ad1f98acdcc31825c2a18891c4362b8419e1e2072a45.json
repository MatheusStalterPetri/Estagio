{"ast":null,"code":"export default {\n  data() {\n    return {\n      rows: []\n    };\n  },\n  mounted() {\n    this.fetchLogData();\n  },\n  methods: {\n    async fetchLogData() {\n      try {\n        const response = await fetch('C:\\Users\\mthss\\Documentos\\Projeto_estagio\\access.log');\n        const data = await response.text();\n        const rows = this.parseLogData(data);\n        this.rows = rows;\n      } catch (error) {\n        console.error(error);\n      }\n    },\n    parseLogData(data) {\n      const rows = data.split('\\n').filter(row => row).map(row => {\n        const [timestamp, level, message] = row.split('|');\n        return {\n          timestamp,\n          level,\n          message\n        };\n      });\n      return rows;\n    }\n  }\n};","map":{"version":3,"names":["data","rows","mounted","fetchLogData","methods","response","fetch","text","parseLogData","error","console","split","filter","row","map","timestamp","level","message"],"sources":["C:\\Users\\mthss\\Documentos\\Projeto_estagio\\pagina_log\\src\\components\\LogTable.vue"],"sourcesContent":["<template>\r\n    <div>\r\n      <h2>Log Table</h2>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>Timestamp</th>\r\n            <th>Level</th>\r\n            <th>Message</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr v-for=\"(row, index) in rows\" :key=\"index\">\r\n            <td>{{ row.timestamp }}</td>\r\n            <td>{{ row.level }}</td>\r\n            <td>{{ row.message }}</td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  export default {\r\n    data() {\r\n      return {\r\n        rows: [],\r\n      };\r\n    },\r\n    mounted() {\r\n      this.fetchLogData();\r\n    },\r\n    methods: {\r\n      async fetchLogData() {\r\n        try {\r\n          const response = await fetch('C:\\Users\\mthss\\Documentos\\Projeto_estagio\\access.log');\r\n          const data = await response.text();\r\n          const rows = this.parseLogData(data);\r\n          this.rows = rows;\r\n        } catch (error) {\r\n          console.error(error);\r\n        }\r\n      },\r\n      parseLogData(data) {\r\n        const rows = data\r\n          .split('\\n')\r\n          .filter((row) => row)\r\n          .map((row) => {\r\n            const [timestamp, level, message] = row.split('|');\r\n            return { timestamp, level, message };\r\n          });\r\n        return rows;\r\n      },\r\n    },\r\n  };\r\n  </script>\r\n  "],"mappings":"AAuBE,eAAe;EACbA,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,IAAI,EAAE;IACR,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,YAAY,EAAE;EACrB,CAAC;EACDC,OAAO,EAAE;IACP,MAAMD,YAAYA,CAAA,EAAG;MACnB,IAAI;QACF,MAAME,QAAO,GAAI,MAAMC,KAAK,CAAC,sDAAsD,CAAC;QACpF,MAAMN,IAAG,GAAI,MAAMK,QAAQ,CAACE,IAAI,EAAE;QAClC,MAAMN,IAAG,GAAI,IAAI,CAACO,YAAY,CAACR,IAAI,CAAC;QACpC,IAAI,CAACC,IAAG,GAAIA,IAAI;MAClB,EAAE,OAAOQ,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;MACtB;IACF,CAAC;IACDD,YAAYA,CAACR,IAAI,EAAE;MACjB,MAAMC,IAAG,GAAID,IAAG,CACbW,KAAK,CAAC,IAAI,EACVC,MAAM,CAAEC,GAAG,IAAKA,GAAG,EACnBC,GAAG,CAAED,GAAG,IAAK;QACZ,MAAM,CAACE,SAAS,EAAEC,KAAK,EAAEC,OAAO,IAAIJ,GAAG,CAACF,KAAK,CAAC,GAAG,CAAC;QAClD,OAAO;UAAEI,SAAS;UAAEC,KAAK;UAAEC;QAAQ,CAAC;MACtC,CAAC,CAAC;MACJ,OAAOhB,IAAI;IACb;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}