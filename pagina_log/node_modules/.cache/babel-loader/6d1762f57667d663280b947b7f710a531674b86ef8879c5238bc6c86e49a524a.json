{"ast":null,"code":"import ApexGridRow from '../components/row.js';\nimport { NAVIGATION_STATE, SENTINEL_NODE } from '../internal/constants.js';\nexport class NavigationController {\n  get virtualizer() {\n    // @ts-expect-error - Protected member access\n    return this.host.scrollContainer;\n  }\n  get nextNode() {\n    const node = this.state.get('current');\n    return node === SENTINEL_NODE ? {\n      column: this.firstColumn,\n      row: 0\n    } : {\n      ...node\n    };\n  }\n  get columns() {\n    return this.host.columns;\n  }\n  get firstColumn() {\n    var _a;\n    return (_a = this.host.getColumn(0).key) !== null && _a !== void 0 ? _a : '';\n  }\n  getPreviousColumn(key) {\n    return this.columns[Math.max(this.columns.indexOf(this.host.getColumn(key)) - 1, 0)].key;\n  }\n  getNextColumn(key) {\n    return this.columns[Math.min(this.columns.indexOf(this.host.getColumn(key)) + 1, this.columns.length - 1)].key;\n  }\n  scrollToCell(node) {\n    var _a;\n    const row = Array.from(this.virtualizer.querySelectorAll(ApexGridRow.is)).find(row => row.index === node.row);\n    if (row) {\n      (_a = row.cells.find(cell => cell.column.key === node.column)) === null || _a === void 0 ? void 0 : _a.scrollIntoView({\n        block: 'nearest'\n      });\n    }\n  }\n  get active() {\n    return this._active;\n  }\n  set active(node) {\n    this._active = node;\n    this.state.set('previous', this._active);\n    this.state.set('current', node);\n    this.host.requestUpdate();\n  }\n  constructor(host) {\n    this.host = host;\n    this.handlers = new Map(Object.entries({\n      ArrowDown: this.arrowDown,\n      ArrowUp: this.arrowUp,\n      ArrowLeft: this.arrowLeft,\n      ArrowRight: this.arrowRight,\n      Home: this.home,\n      End: this.end\n    }));\n    this.state = NAVIGATION_STATE;\n    this._active = SENTINEL_NODE;\n    this.host.addController(this);\n  }\n  home() {\n    var _a;\n    this.active = Object.assign(this.nextNode, {\n      row: 0\n    });\n    (_a = this.virtualizer.element(this.active.row)) === null || _a === void 0 ? void 0 : _a.scrollIntoView({\n      block: 'nearest'\n    });\n  }\n  end() {\n    var _a;\n    this.active = Object.assign(this.nextNode, {\n      row: this.host.totalItems - 1\n    });\n    (_a = this.virtualizer.element(this.active.row)) === null || _a === void 0 ? void 0 : _a.scrollIntoView({\n      block: 'nearest'\n    });\n  }\n  arrowDown() {\n    var _a;\n    const next = this.nextNode;\n    this.active = Object.assign(next, {\n      row: Math.min(next.row + 1, this.host.totalItems - 1)\n    });\n    (_a = this.virtualizer.element(next.row)) === null || _a === void 0 ? void 0 : _a.scrollIntoView({\n      block: 'nearest'\n    });\n  }\n  arrowUp() {\n    var _a;\n    const next = this.nextNode;\n    this.active = Object.assign(next, {\n      row: Math.max(0, next.row - 1)\n    });\n    (_a = this.virtualizer.element(next.row)) === null || _a === void 0 ? void 0 : _a.scrollIntoView({\n      block: 'nearest'\n    });\n  }\n  arrowLeft() {\n    const next = this.nextNode;\n    this.active = Object.assign(next, {\n      column: this.getPreviousColumn(next.column)\n    });\n    this.scrollToCell(this.active);\n  }\n  arrowRight() {\n    const next = this.nextNode;\n    this.active = Object.assign(next, {\n      column: this.getNextColumn(next.column)\n    });\n    this.scrollToCell(this.active);\n  }\n  hostConnected() {}\n  hostDisconnected() {\n    this.active = SENTINEL_NODE;\n    this.state = NAVIGATION_STATE;\n  }\n  navigate(event) {\n    if (this.handlers.has(event.key)) {\n      event.preventDefault();\n      this.handlers.get(event.key).call(this);\n    }\n  }\n}","map":{"version":3,"names":["ApexGridRow","NAVIGATION_STATE","SENTINEL_NODE","NavigationController","virtualizer","host","scrollContainer","nextNode","node","state","get","column","firstColumn","row","columns","_a","getColumn","key","getPreviousColumn","Math","max","indexOf","getNextColumn","min","length","scrollToCell","Array","from","querySelectorAll","is","find","index","cells","cell","scrollIntoView","block","active","_active","set","requestUpdate","constructor","handlers","Map","Object","entries","ArrowDown","arrowDown","ArrowUp","arrowUp","ArrowLeft","arrowLeft","ArrowRight","arrowRight","Home","home","End","end","addController","assign","element","totalItems","next","hostConnected","hostDisconnected","navigate","event","has","preventDefault","call"],"sources":["../../../src/controllers/navigation.ts"],"sourcesContent":["import { ReactiveController } from 'lit';\nimport ApexGridRow from '../components/row.js';\nimport { NAVIGATION_STATE, SENTINEL_NODE } from '../internal/constants.js';\nimport type { ActiveNode, GridHost, Keys } from '../internal/types.js';\n\nexport class NavigationController<T extends object> implements ReactiveController {\n  protected handlers = new Map(\n    Object.entries({\n      ArrowDown: this.arrowDown,\n      ArrowUp: this.arrowUp,\n      ArrowLeft: this.arrowLeft,\n      ArrowRight: this.arrowRight,\n      Home: this.home,\n      End: this.end,\n    }),\n  );\n\n  protected get virtualizer() {\n    // @ts-expect-error - Protected member access\n    return this.host.scrollContainer;\n  }\n\n  protected state = NAVIGATION_STATE;\n  protected _active = SENTINEL_NODE;\n\n  protected get nextNode() {\n    const node = this.state.get('current')!;\n    return node === SENTINEL_NODE\n      ? { column: this.firstColumn, row: 0 }\n      : ({ ...node } as ActiveNode<T>);\n  }\n\n  protected get columns() {\n    return this.host.columns;\n  }\n\n  protected get firstColumn() {\n    return this.host.getColumn(0)!.key ?? '';\n  }\n\n  protected getPreviousColumn(key: Keys<T>) {\n    return this.columns[Math.max(this.columns.indexOf(this.host.getColumn(key)!) - 1, 0)].key;\n  }\n\n  protected getNextColumn(key: Keys<T>) {\n    return this.columns[\n      Math.min(this.columns.indexOf(this.host.getColumn(key)!) + 1, this.columns.length - 1)\n    ].key;\n  }\n\n  protected scrollToCell(node: ActiveNode<T>) {\n    const row = Array.from(this.virtualizer.querySelectorAll(ApexGridRow.is)).find(\n      row => row.index === node.row,\n    ) as unknown as ApexGridRow<T>;\n\n    if (row) {\n      row.cells.find(cell => cell.column.key === node.column)?.scrollIntoView({ block: 'nearest' });\n    }\n  }\n\n  public get active() {\n    return this._active as ActiveNode<T>;\n  }\n\n  public set active(node: ActiveNode<T>) {\n    this._active = node;\n    this.state.set('previous', this._active);\n    this.state.set('current', node);\n    this.host.requestUpdate();\n  }\n\n  constructor(protected host: GridHost<T>) {\n    this.host.addController(this);\n  }\n\n  protected home() {\n    this.active = Object.assign(this.nextNode, { row: 0 });\n    this.virtualizer.element(this.active.row)?.scrollIntoView({ block: 'nearest' });\n  }\n\n  protected end() {\n    this.active = Object.assign(this.nextNode, { row: this.host.totalItems - 1 });\n    this.virtualizer.element(this.active.row)?.scrollIntoView({ block: 'nearest' });\n  }\n\n  protected arrowDown() {\n    const next = this.nextNode;\n\n    this.active = Object.assign(next, {\n      row: Math.min(next.row + 1, this.host.totalItems - 1),\n    });\n    this.virtualizer.element(next.row)?.scrollIntoView({ block: 'nearest' });\n  }\n\n  protected arrowUp() {\n    const next = this.nextNode;\n    this.active = Object.assign(next, { row: Math.max(0, next.row - 1) });\n    this.virtualizer.element(next.row)?.scrollIntoView({ block: 'nearest' });\n  }\n\n  protected arrowLeft() {\n    const next = this.nextNode;\n    this.active = Object.assign(next, { column: this.getPreviousColumn(next.column) });\n    this.scrollToCell(this.active);\n  }\n\n  protected arrowRight() {\n    const next = this.nextNode;\n    this.active = Object.assign(next, { column: this.getNextColumn(next.column) });\n    this.scrollToCell(this.active);\n  }\n\n  public hostConnected() {}\n\n  public hostDisconnected() {\n    this.active = SENTINEL_NODE as ActiveNode<T>;\n    this.state = NAVIGATION_STATE;\n  }\n\n  public navigate(event: KeyboardEvent) {\n    if (this.handlers.has(event.key)) {\n      event.preventDefault();\n      this.handlers.get(event.key)!.call(this);\n    }\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}