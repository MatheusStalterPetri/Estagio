{"ast":null,"code":"import { BooleanOperands } from '../operations/filter/operands/boolean.js';\nimport { NumberOperands } from '../operations/filter/operands/number.js';\nimport { StringOperands } from '../operations/filter/operands/string.js';\n// TODO: Revise if this is needed\nexport function applyColumnWidths(columns) {\n  return {\n    'grid-template-columns': columns.filter(each => !each.hidden).map(({\n      width\n    }) => width !== null && width !== void 0 ? width : 'minmax(136px, 1fr)').join(' ')\n  };\n}\nexport function autoGenerateColumns(grid) {\n  var _a;\n  if (grid.autoGenerate && grid.columns.length < 1) {\n    const record = (_a = grid.data[0]) !== null && _a !== void 0 ? _a : {};\n    grid.columns = Object.entries(record).map(([key, value]) => {\n      const type = typeof value === 'boolean' ? 'boolean' : typeof value === 'number' ? 'number' : 'string';\n      return {\n        key,\n        type\n      };\n    });\n  }\n}\nexport function asArray(value) {\n  return Array.isArray(value) ? value : [value];\n}\nexport function getFilterOperandsFor(column) {\n  // Check for custom class in the filter config\n  switch (column.type) {\n    case 'boolean':\n      return BooleanOperands;\n    case 'number':\n      return NumberOperands;\n    default:\n      return StringOperands;\n  }\n}","map":{"version":3,"names":["BooleanOperands","NumberOperands","StringOperands","applyColumnWidths","columns","filter","each","hidden","map","width","join","autoGenerateColumns","grid","autoGenerate","length","record","_a","data","Object","entries","key","value","type","asArray","Array","isArray","getFilterOperandsFor","column"],"sources":["../../../src/internal/utils.ts"],"sourcesContent":["import { BooleanOperands } from '../operations/filter/operands/boolean.js';\nimport { NumberOperands } from '../operations/filter/operands/number.js';\nimport { StringOperands } from '../operations/filter/operands/string.js';\n\nimport type { StyleInfo } from 'lit/directives/style-map.js';\nimport type { ColumnConfiguration, DataType, GridHost } from './types.js';\n\n// TODO: Revise if this is needed\nexport function applyColumnWidths<T extends object>(\n  columns: Array<ColumnConfiguration<T>>,\n): StyleInfo {\n  return {\n    'grid-template-columns': columns\n      .filter(each => !each.hidden)\n      .map(({ width }) => width ?? 'minmax(136px, 1fr)')\n      .join(' '),\n  };\n}\n\nexport function autoGenerateColumns<T extends object>(grid: GridHost<T>) {\n  if (grid.autoGenerate && grid.columns.length < 1) {\n    const record = grid.data[0] ?? {};\n\n    grid.columns = Object.entries(record).map(([key, value]) => {\n      const type: DataType =\n        typeof value === 'boolean' ? 'boolean' : typeof value === 'number' ? 'number' : 'string';\n      return { key, type } as ColumnConfiguration<T>;\n    });\n  }\n}\n\nexport function asArray<T>(value: T | T[]) {\n  return Array.isArray(value) ? value : [value];\n}\n\nexport function getFilterOperandsFor<T extends object>(column: ColumnConfiguration<T>) {\n  // Check for custom class in the filter config\n  switch (column.type) {\n    case 'boolean':\n      return BooleanOperands;\n    case 'number':\n      return NumberOperands;\n    default:\n      return StringOperands;\n  }\n}\n"],"mappings":"AAAA,SAASA,eAAe,QAAQ,0CAA0C;AAC1E,SAASC,cAAc,QAAQ,yCAAyC;AACxE,SAASC,cAAc,QAAQ,yCAAyC;AAKxE;AACA,OAAM,SAAUC,iBAAiBA,CAC/BC,OAAsC;EAEtC,OAAO;IACL,uBAAuB,EAAEA,OAAO,CAC7BC,MAAM,CAACC,IAAI,IAAI,CAACA,IAAI,CAACC,MAAM,CAAC,CAC5BC,GAAG,CAAC,CAAC;MAAEC;IAAK,CAAE,KAAKA,KAAK,aAALA,KAAK,cAALA,KAAK,GAAI,oBAAoB,CAAC,CACjDC,IAAI,CAAC,GAAG;GACZ;AACH;AAEA,OAAM,SAAUC,mBAAmBA,CAAmBC,IAAiB;;EACrE,IAAIA,IAAI,CAACC,YAAY,IAAID,IAAI,CAACR,OAAO,CAACU,MAAM,GAAG,CAAC,EAAE;IAChD,MAAMC,MAAM,GAAG,CAAAC,EAAA,GAAAJ,IAAI,CAACK,IAAI,CAAC,CAAC,CAAC,cAAAD,EAAA,cAAAA,EAAA,GAAI,EAAE;IAEjCJ,IAAI,CAACR,OAAO,GAAGc,MAAM,CAACC,OAAO,CAACJ,MAAM,CAAC,CAACP,GAAG,CAAC,CAAC,CAACY,GAAG,EAAEC,KAAK,CAAC,KAAI;MACzD,MAAMC,IAAI,GACR,OAAOD,KAAK,KAAK,SAAS,GAAG,SAAS,GAAG,OAAOA,KAAK,KAAK,QAAQ,GAAG,QAAQ,GAAG,QAAQ;MAC1F,OAAO;QAAED,GAAG;QAAEE;MAAI,CAA4B;IAChD,CAAC,CAAC;;AAEN;AAEA,OAAM,SAAUC,OAAOA,CAAIF,KAAc;EACvC,OAAOG,KAAK,CAACC,OAAO,CAACJ,KAAK,CAAC,GAAGA,KAAK,GAAG,CAACA,KAAK,CAAC;AAC/C;AAEA,OAAM,SAAUK,oBAAoBA,CAAmBC,MAA8B;EACnF;EACA,QAAQA,MAAM,CAACL,IAAI;IACjB,KAAK,SAAS;MACZ,OAAOtB,eAAe;IACxB,KAAK,QAAQ;MACX,OAAOC,cAAc;IACvB;MACE,OAAOC,cAAc;EAAC;AAE5B"},"metadata":{},"sourceType":"module","externalDependencies":[]}