{"ast":null,"code":"var __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __classPrivateFieldGet = this && this.__classPrivateFieldGet || function (receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _ApexGridHeaderRow_instances, _ApexGridHeaderRow_activeFilterColumn;\nimport { html, LitElement, nothing } from 'lit';\nimport { consume } from '@lit-labs/context';\nimport { property, queryAll } from 'lit/decorators.js';\nimport { map } from 'lit/directives/map.js';\nimport { gridStateContext } from '../controllers/state.js';\nimport { partNameMap } from '../internal/part-map.js';\nimport { GRID_HEADER_ROW_TAG } from '../internal/tags.js';\nimport { registerComponent } from '../internal/register.js';\nimport ApexGridHeader from './header.js';\nimport { styles } from '../styles/header-row/header-row.base-styles.css.js';\nexport default class ApexGridHeaderRow extends LitElement {\n  static get is() {\n    return GRID_HEADER_ROW_TAG;\n  }\n  static register() {\n    registerComponent(this, [ApexGridHeader]);\n  }\n  get headers() {\n    return Array.from(this._headers);\n  }\n  constructor() {\n    super();\n    _ApexGridHeaderRow_instances.add(this);\n    this.columns = [];\n    this.addEventListener('click', __classPrivateFieldGet(this, _ApexGridHeaderRow_instances, \"m\", _ApexGridHeaderRow_activeFilterColumn));\n  }\n  connectedCallback() {\n    super.connectedCallback();\n    this.setAttribute('tabindex', '0');\n  }\n  shouldUpdate(props) {\n    this.headers.forEach(header => header.requestUpdate());\n    return super.shouldUpdate(props);\n  }\n  render() {\n    const filterRow = this.state.filtering.filterRow;\n    return html`${map(this.columns, column => column.hidden ? nothing : html`<apex-grid-header\n            part=${partNameMap({\n      filtered: column === (filterRow === null || filterRow === void 0 ? void 0 : filterRow.column)\n    })}\n            .column=${column}\n          ></apex-grid-header>`)}`;\n  }\n}\n_ApexGridHeaderRow_instances = new WeakSet(), _ApexGridHeaderRow_activeFilterColumn = function _ApexGridHeaderRow_activeFilterColumn(event) {\n  const header = event.composedPath().filter(target => target instanceof ApexGridHeader).at(0);\n  this.state.filtering.setActiveColumn(header === null || header === void 0 ? void 0 : header.column);\n};\nApexGridHeaderRow.styles = styles;\n__decorate([queryAll(ApexGridHeader.is)], ApexGridHeaderRow.prototype, \"_headers\", void 0);\n__decorate([consume({\n  context: gridStateContext,\n  subscribe: true\n}), property({\n  attribute: false\n})], ApexGridHeaderRow.prototype, \"state\", void 0);\n__decorate([property({\n  attribute: false\n})], ApexGridHeaderRow.prototype, \"columns\", void 0);","map":{"version":3,"names":["html","LitElement","nothing","consume","property","queryAll","map","gridStateContext","partNameMap","GRID_HEADER_ROW_TAG","registerComponent","ApexGridHeader","styles","ApexGridHeaderRow","is","register","headers","Array","from","_headers","constructor","columns","addEventListener","__classPrivateFieldGet","_ApexGridHeaderRow_instances","_ApexGridHeaderRow_activeFilterColumn","connectedCallback","setAttribute","shouldUpdate","props","forEach","header","requestUpdate","render","filterRow","state","filtering","column","hidden","filtered","event","composedPath","filter","target","at","setActiveColumn","__decorate","context","subscribe","attribute"],"sources":["../../../src/components/header-row.ts"],"sourcesContent":["import { html, LitElement, nothing, PropertyValueMap } from 'lit';\nimport { consume } from '@lit-labs/context';\nimport { property, queryAll } from 'lit/decorators.js';\nimport { map } from 'lit/directives/map.js';\nimport { gridStateContext, StateController } from '../controllers/state.js';\nimport { partNameMap } from '../internal/part-map.js';\nimport { GRID_HEADER_ROW_TAG } from '../internal/tags.js';\nimport { registerComponent } from '../internal/register.js';\n\nimport ApexGridHeader from './header.js';\nimport { styles } from '../styles/header-row/header-row.base-styles.css.js';\n\nimport type { ColumnConfiguration } from '../internal/types.js';\n\nexport default class ApexGridHeaderRow<T extends object> extends LitElement {\n  public static get is() {\n    return GRID_HEADER_ROW_TAG;\n  }\n  public static override styles = styles;\n\n  public static register() {\n    registerComponent(this, [ApexGridHeader]);\n  }\n\n  @queryAll(ApexGridHeader.is)\n  protected _headers!: NodeListOf<ApexGridHeader<T>>;\n\n  @consume({ context: gridStateContext, subscribe: true })\n  @property({ attribute: false })\n  public state!: StateController<T>;\n\n  @property({ attribute: false })\n  public columns: Array<ColumnConfiguration<T>> = [];\n\n  public get headers() {\n    return Array.from(this._headers);\n  }\n\n  constructor() {\n    super();\n    this.addEventListener('click', this.#activeFilterColumn);\n  }\n\n  public override connectedCallback() {\n    super.connectedCallback();\n    this.setAttribute('tabindex', '0');\n  }\n\n  #activeFilterColumn(event: MouseEvent) {\n    const header = event\n      .composedPath()\n      .filter(target => target instanceof ApexGridHeader)\n      .at(0) as ApexGridHeader<T>;\n\n    this.state.filtering.setActiveColumn(header?.column);\n  }\n\n  protected override shouldUpdate(props: PropertyValueMap<this> | Map<PropertyKey, this>): boolean {\n    this.headers.forEach(header => header.requestUpdate());\n    return super.shouldUpdate(props);\n  }\n\n  protected override render() {\n    const filterRow = this.state.filtering.filterRow;\n\n    return html`${map(this.columns, column =>\n      column.hidden\n        ? nothing\n        : html`<apex-grid-header\n            part=${partNameMap({\n              filtered: column === filterRow?.column,\n            })}\n            .column=${column}\n          ></apex-grid-header>`,\n    )}`;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    [ApexGridHeaderRow.is]: ApexGridHeaderRow<object>;\n  }\n}\n"],"mappings":";;;;;;;;;;;;;AAAA,SAASA,IAAI,EAAEC,UAAU,EAAEC,OAAO,QAA0B,KAAK;AACjE,SAASC,OAAO,QAAQ,mBAAmB;AAC3C,SAASC,QAAQ,EAAEC,QAAQ,QAAQ,mBAAmB;AACtD,SAASC,GAAG,QAAQ,uBAAuB;AAC3C,SAASC,gBAAgB,QAAyB,yBAAyB;AAC3E,SAASC,WAAW,QAAQ,yBAAyB;AACrD,SAASC,mBAAmB,QAAQ,qBAAqB;AACzD,SAASC,iBAAiB,QAAQ,yBAAyB;AAE3D,OAAOC,cAAc,MAAM,aAAa;AACxC,SAASC,MAAM,QAAQ,oDAAoD;AAI3E,eAAc,MAAOC,iBAAoC,SAAQZ,UAAU;EAClE,WAAWa,EAAEA,CAAA;IAClB,OAAOL,mBAAmB;EAC5B;EAGO,OAAOM,QAAQA,CAAA;IACpBL,iBAAiB,CAAC,IAAI,EAAE,CAACC,cAAc,CAAC,CAAC;EAC3C;EAYA,IAAWK,OAAOA,CAAA;IAChB,OAAOC,KAAK,CAACC,IAAI,CAAC,IAAI,CAACC,QAAQ,CAAC;EAClC;EAEAC,YAAA;IACE,KAAK,EAAE;;IAPF,KAAAC,OAAO,GAAkC,EAAE;IAQhD,IAAI,CAACC,gBAAgB,CAAC,OAAO,EAAEC,sBAAA,KAAI,EAAAC,4BAAA,OAAAC,qCAAA,CAAoB,CAAC;EAC1D;EAEgBC,iBAAiBA,CAAA;IAC/B,KAAK,CAACA,iBAAiB,EAAE;IACzB,IAAI,CAACC,YAAY,CAAC,UAAU,EAAE,GAAG,CAAC;EACpC;EAWmBC,YAAYA,CAACC,KAAsD;IACpF,IAAI,CAACb,OAAO,CAACc,OAAO,CAACC,MAAM,IAAIA,MAAM,CAACC,aAAa,EAAE,CAAC;IACtD,OAAO,KAAK,CAACJ,YAAY,CAACC,KAAK,CAAC;EAClC;EAEmBI,MAAMA,CAAA;IACvB,MAAMC,SAAS,GAAG,IAAI,CAACC,KAAK,CAACC,SAAS,CAACF,SAAS;IAEhD,OAAOlC,IAAI,GAAGM,GAAG,CAAC,IAAI,CAACe,OAAO,EAAEgB,MAAM,IACpCA,MAAM,CAACC,MAAM,GACTpC,OAAO,GACPF,IAAI;mBACKQ,WAAW,CAAC;MACjB+B,QAAQ,EAAEF,MAAM,MAAKH,SAAS,aAATA,SAAS,uBAATA,SAAS,CAAEG,MAAM;KACvC,CAAC;sBACQA,MAAM;+BACG,CAC1B,EAAE;EACL;;qIA3BoBG,KAAiB;EACnC,MAAMT,MAAM,GAAGS,KAAK,CACjBC,YAAY,EAAE,CACdC,MAAM,CAACC,MAAM,IAAIA,MAAM,YAAYhC,cAAc,CAAC,CAClDiC,EAAE,CAAC,CAAC,CAAsB;EAE7B,IAAI,CAACT,KAAK,CAACC,SAAS,CAACS,eAAe,CAACd,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEM,MAAM,CAAC;AACtD,CAAC;AArCsBxB,iBAAA,CAAAD,MAAM,GAAGA,MAAM;AAOtCkC,UAAA,EADCzC,QAAQ,CAACM,cAAc,CAACG,EAAE,CAAC,C,kDACuB;AAInDgC,UAAA,EAFC3C,OAAO,CAAC;EAAE4C,OAAO,EAAExC,gBAAgB;EAAEyC,SAAS,EAAE;AAAI,CAAE,CAAC,EACvD5C,QAAQ,CAAC;EAAE6C,SAAS,EAAE;AAAK,CAAE,CAAC,C,+CACG;AAGlCH,UAAA,EADC1C,QAAQ,CAAC;EAAE6C,SAAS,EAAE;AAAK,CAAE,CAAC,C,iDACoB"},"metadata":{},"sourceType":"module","externalDependencies":[]}