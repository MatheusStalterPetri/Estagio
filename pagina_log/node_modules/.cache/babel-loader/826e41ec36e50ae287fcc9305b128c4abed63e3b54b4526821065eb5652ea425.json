{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref } from 'vue';\nimport '/node_modules/apex-grid/dist/apex-grid.min.css';\nimport ApexGrid from 'apex-grid';\nexport default {\n  name: 'LogView',\n  components: {\n    ApexGrid\n  },\n  setup() {\n    const columns = [{\n      name: 'date',\n      label: 'Date',\n      type: 'date',\n      format: 'dd/MM/yyyy HH:mm:ss'\n    }, {\n      name: 'action',\n      label: 'Action'\n    }, {\n      name: 'url',\n      label: 'URL'\n    }, {\n      name: 'ip',\n      label: 'IP Address'\n    }, {\n      name: 'user',\n      label: 'User'\n    }];\n    const data = ref([]);\n    const handleFileInputChange = event => {\n      const file = event.target.files[0];\n      if (file) {\n        const reader = new FileReader();\n        reader.onload = () => {\n          const lines = reader.result.split('\\n');\n          const logData = [];\n          lines.forEach(line => {\n            const [date, action, url, ip, user] = line.trim().split(' ');\n            logData.push({\n              date: new Date(date + ' UTC'),\n              action,\n              url,\n              ip,\n              user\n            });\n          });\n          data.value = logData;\n        };\n        reader.readAsText(file);\n      }\n    };\n    return {\n      columns,\n      data,\n      handleFileInputChange\n    };\n  }\n};","map":{"version":3,"names":["ref","ApexGrid","name","components","setup","columns","label","type","format","data","handleFileInputChange","event","file","target","files","reader","FileReader","onload","lines","result","split","logData","forEach","line","date","action","url","ip","user","trim","push","Date","value","readAsText"],"sources":["C:\\Users\\mthss\\Documentos\\Projeto_estagio\\pagina_log\\src\\views\\LogView.vue"],"sourcesContent":["<style>\r\n#customers {\r\n  font-family: Arial, Helvetica, sans-serif;\r\n  border-collapse: collapse;\r\n  width: 100%;\r\n}\r\n\r\n#customers td, #customers th {\r\n  border: 1px solid #ddd;\r\n  padding: 8px;\r\n}\r\n\r\n#customers tr:nth-child(even){background-color: #f2f2f2;}\r\n\r\n#customers tr:hover {background-color: #ddd;}\r\n\r\n#customers th {\r\n  padding-top: 12px;\r\n  padding-bottom: 12px;\r\n  text-align: left;\r\n  background-color: #04AA6D;\r\n  color: white;\r\n}\r\n</style>\r\n\r\n<!--\r\n<div style=\"overflow-x:auto;\">\r\n<table id=\"customers\">\r\n-->\r\n\r\n<template>\r\n  <div>\r\n    <h1>Squid Web Cache Log Viewer</h1>\r\n    <input type=\"file\" ref=\"fileInput\" @change=\"handleFileInputChange\" accept=\".log\">\r\n    <apex-grid :columns=\"columns\" :data=\"data\" />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref } from 'vue';\r\nimport '/node_modules/apex-grid/dist/apex-grid.min.css';\r\nimport ApexGrid from 'apex-grid';\r\n\r\nexport default {\r\n  name: 'LogView',\r\n  components: { ApexGrid },\r\n  setup() {\r\n    const columns = [\r\n      { name: 'date', label: 'Date', type: 'date', format: 'dd/MM/yyyy HH:mm:ss' },\r\n      { name: 'action', label: 'Action' },\r\n      { name: 'url', label: 'URL' },\r\n      { name: 'ip', label: 'IP Address' },\r\n      { name: 'user', label: 'User' },\r\n    ];\r\n    const data = ref([]);\r\n\r\n    const handleFileInputChange = (event) => {\r\n      const file = event.target.files[0];\r\n      if (file) {\r\n        const reader = new FileReader();\r\n        reader.onload = () => {\r\n          const lines = reader.result.split('\\n');\r\n          const logData = [];\r\n          lines.forEach((line) => {\r\n            const [date, action, url, ip, user] = line.trim().split(' ');\r\n            logData.push({\r\n              date: new Date(date + ' UTC'),\r\n              action,\r\n              url,\r\n              ip,\r\n              user,\r\n            });\r\n          });\r\n          data.value = logData;\r\n        };\r\n        reader.readAsText(file);\r\n      }\r\n    };\r\n\r\n    return { columns, data, handleFileInputChange };\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\nh1 {\r\n  text-align: center;\r\n}\r\n</style>\r\n"],"mappings":";AAuCA,SAASA,GAAE,QAAS,KAAK;AACzB,OAAO,gDAAgD;AACvD,OAAOC,QAAO,MAAO,WAAW;AAEhC,eAAe;EACbC,IAAI,EAAE,SAAS;EACfC,UAAU,EAAE;IAAEF;EAAS,CAAC;EACxBG,KAAKA,CAAA,EAAG;IACN,MAAMC,OAAM,GAAI,CACd;MAAEH,IAAI,EAAE,MAAM;MAAEI,KAAK,EAAE,MAAM;MAAEC,IAAI,EAAE,MAAM;MAAEC,MAAM,EAAE;IAAsB,CAAC,EAC5E;MAAEN,IAAI,EAAE,QAAQ;MAAEI,KAAK,EAAE;IAAS,CAAC,EACnC;MAAEJ,IAAI,EAAE,KAAK;MAAEI,KAAK,EAAE;IAAM,CAAC,EAC7B;MAAEJ,IAAI,EAAE,IAAI;MAAEI,KAAK,EAAE;IAAa,CAAC,EACnC;MAAEJ,IAAI,EAAE,MAAM;MAAEI,KAAK,EAAE;IAAO,CAAC,CAChC;IACD,MAAMG,IAAG,GAAIT,GAAG,CAAC,EAAE,CAAC;IAEpB,MAAMU,qBAAoB,GAAKC,KAAK,IAAK;MACvC,MAAMC,IAAG,GAAID,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;MAClC,IAAIF,IAAI,EAAE;QACR,MAAMG,MAAK,GAAI,IAAIC,UAAU,EAAE;QAC/BD,MAAM,CAACE,MAAK,GAAI,MAAM;UACpB,MAAMC,KAAI,GAAIH,MAAM,CAACI,MAAM,CAACC,KAAK,CAAC,IAAI,CAAC;UACvC,MAAMC,OAAM,GAAI,EAAE;UAClBH,KAAK,CAACI,OAAO,CAAEC,IAAI,IAAK;YACtB,MAAM,CAACC,IAAI,EAAEC,MAAM,EAAEC,GAAG,EAAEC,EAAE,EAAEC,IAAI,IAAIL,IAAI,CAACM,IAAI,EAAE,CAACT,KAAK,CAAC,GAAG,CAAC;YAC5DC,OAAO,CAACS,IAAI,CAAC;cACXN,IAAI,EAAE,IAAIO,IAAI,CAACP,IAAG,GAAI,MAAM,CAAC;cAC7BC,MAAM;cACNC,GAAG;cACHC,EAAE;cACFC;YACF,CAAC,CAAC;UACJ,CAAC,CAAC;UACFnB,IAAI,CAACuB,KAAI,GAAIX,OAAO;QACtB,CAAC;QACDN,MAAM,CAACkB,UAAU,CAACrB,IAAI,CAAC;MACzB;IACF,CAAC;IAED,OAAO;MAAEP,OAAO;MAAEI,IAAI;MAAEC;IAAsB,CAAC;EACjD;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}