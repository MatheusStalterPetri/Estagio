{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { html, LitElement } from 'lit';\nimport { property, query } from 'lit/decorators.js';\nimport { themes } from '../../../theming/theming-decorator.js';\nimport { blazorIndirectRender } from '../../common/decorators/blazorIndirectRender.js';\nimport { blazorSuppressComponent } from '../../common/decorators/blazorSuppressComponent.js';\nimport { watch } from '../../common/decorators/watch.js';\nimport { EventEmitterMixin } from '../../common/mixins/event-emitter.js';\nimport { partNameMap } from '../../common/util.js';\nimport { YEARS_PER_ROW } from '../common/calendar-base.js';\nimport { calculateYearsRangeStart, setDateSafe } from '../common/utils.js';\nimport { styles as bootstrap } from '../themes/bootstrap/year-month-view.bootstrap.css.js';\nimport { styles as fluent } from '../themes/fluent/year-month-view.fluent.css.js';\nimport { styles } from '../themes/year-month-view.base.css.js';\nlet IgcYearsViewComponent = class IgcYearsViewComponent extends EventEmitterMixin(LitElement) {\n  datesChange() {\n    this.years = this.generateYears();\n  }\n  constructor() {\n    super();\n    this.value = new Date();\n    this.yearsPerPage = 15;\n    this.setAttribute('role', 'grid');\n  }\n  focusActiveDate() {\n    this.activeYear.focus();\n  }\n  formattedYear(value) {\n    return `${value.getFullYear()}`;\n  }\n  generateYears() {\n    const startYear = calculateYearsRangeStart(this.value, this.yearsPerPage);\n    const month = this.value.getMonth();\n    const result = [];\n    const rows = this.yearsPerPage / YEARS_PER_ROW;\n    for (let i = 0; i < rows; i++) {\n      const row = [];\n      for (let j = 0; j < YEARS_PER_ROW; j++) {\n        const year = startYear + i * YEARS_PER_ROW + j;\n        const date = new Date(year, month, 1);\n        date.setFullYear(year);\n        row.push(date);\n      }\n      result.push(row);\n    }\n    return result;\n  }\n  resolveYearPartName(date) {\n    const today = new Date();\n    return {\n      year: true,\n      selected: date.getFullYear() === this.value.getFullYear(),\n      current: date.getFullYear() === today.getFullYear()\n    };\n  }\n  selectYear(year) {\n    const value = new Date(year);\n    setDateSafe(value, this.value.getDate());\n    this.value = value;\n    this.emitEvent('igcChange', {\n      detail: this.value\n    });\n  }\n  yearKeyDown(event, year) {\n    if (event.key === 'Enter' || event.key === ' ') {\n      event.preventDefault();\n      this.selectYear(year);\n    }\n  }\n  render() {\n    return html`${this.years.map(row => {\n      return html`<div part=\"years-row\" role=\"row\">\n        ${row.map(year => {\n        const yearPartName = partNameMap(this.resolveYearPartName(year));\n        const yearInnerPartName = yearPartName.replace('year', 'year-inner');\n        return html`<span part=${yearPartName}>\n            <span\n              part=${yearInnerPartName}\n              role=\"gridcell\"\n              aria-selected=${year.getFullYear() === this.value.getFullYear()}\n              tabindex=\"${year.getFullYear() === this.value.getFullYear() ? 0 : -1}\"\n              @click=${() => this.selectYear(year)}\n              @keydown=${event => this.yearKeyDown(event, year)}\n            >\n              ${this.formattedYear(year)}\n            </span>\n          </span>`;\n      })}\n      </div>`;\n    })}`;\n  }\n};\nIgcYearsViewComponent.tagName = 'igc-years-view';\nIgcYearsViewComponent.styles = styles;\n__decorate([query('[tabindex=\"0\"]')], IgcYearsViewComponent.prototype, \"activeYear\", void 0);\n__decorate([property({\n  attribute: false\n})], IgcYearsViewComponent.prototype, \"value\", void 0);\n__decorate([property({\n  type: Number,\n  attribute: 'years-per-page'\n})], IgcYearsViewComponent.prototype, \"yearsPerPage\", void 0);\n__decorate([watch('value'), watch('yearsPerPage')], IgcYearsViewComponent.prototype, \"datesChange\", null);\nIgcYearsViewComponent = __decorate([blazorIndirectRender, blazorSuppressComponent, themes({\n  bootstrap,\n  fluent\n})], IgcYearsViewComponent);\nexport default IgcYearsViewComponent;","map":{"version":3,"names":["html","LitElement","property","query","themes","blazorIndirectRender","blazorSuppressComponent","watch","EventEmitterMixin","partNameMap","YEARS_PER_ROW","calculateYearsRangeStart","setDateSafe","styles","bootstrap","fluent","IgcYearsViewComponent","datesChange","years","generateYears","constructor","value","Date","yearsPerPage","setAttribute","focusActiveDate","activeYear","focus","formattedYear","getFullYear","startYear","month","getMonth","result","rows","i","row","j","year","date","setFullYear","push","resolveYearPartName","today","selected","current","selectYear","getDate","emitEvent","detail","yearKeyDown","event","key","preventDefault","render","map","yearPartName","yearInnerPartName","replace","tagName","__decorate","attribute","type","Number"],"sources":["../../../../src/components/calendar/years-view/years-view.ts"],"sourcesContent":["import { html, LitElement } from 'lit';\nimport { property, query } from 'lit/decorators.js';\nimport { themes } from '../../../theming/theming-decorator.js';\nimport { blazorIndirectRender } from '../../common/decorators/blazorIndirectRender.js';\nimport { blazorSuppressComponent } from '../../common/decorators/blazorSuppressComponent.js';\nimport { watch } from '../../common/decorators/watch.js';\nimport { Constructor } from '../../common/mixins/constructor.js';\nimport { EventEmitterMixin } from '../../common/mixins/event-emitter.js';\nimport { partNameMap } from '../../common/util.js';\nimport {\n  IgcCalendarBaseEventMap,\n  YEARS_PER_ROW,\n} from '../common/calendar-base.js';\nimport { calculateYearsRangeStart, setDateSafe } from '../common/utils.js';\nimport { styles as bootstrap } from '../themes/bootstrap/year-month-view.bootstrap.css.js';\nimport { styles as fluent } from '../themes/fluent/year-month-view.fluent.css.js';\nimport { styles } from '../themes/year-month-view.base.css.js';\n\n/**\n * Instantiate a years view as a separate component in the calendar.\n *\n * @element igc-years-view\n *\n * @csspart years-row - The years row container.\n * @csspart year - The year container.\n * @csspart year-inner - The inner year container.\n */\n@blazorIndirectRender\n@blazorSuppressComponent\n@themes({\n  bootstrap,\n  fluent,\n})\nexport default class IgcYearsViewComponent extends EventEmitterMixin<\n  IgcCalendarBaseEventMap,\n  Constructor<LitElement>\n>(LitElement) {\n  public static readonly tagName = 'igc-years-view';\n  public static styles = styles;\n\n  private years!: Date[][];\n\n  @query('[tabindex=\"0\"]')\n  private activeYear!: HTMLElement;\n\n  /** Ð¢he current value of the calendar. */\n  @property({ attribute: false })\n  public value = new Date();\n\n  /** Sets how many years are displayed on a single page. */\n  @property({ type: Number, attribute: 'years-per-page' })\n  public yearsPerPage = 15;\n\n  @watch('value')\n  @watch('yearsPerPage')\n  protected datesChange() {\n    this.years = this.generateYears();\n  }\n\n  constructor() {\n    super();\n    this.setAttribute('role', 'grid');\n  }\n\n  /** Focuses the active date. */\n  public focusActiveDate() {\n    this.activeYear.focus();\n  }\n\n  private formattedYear(value: Date) {\n    return `${value.getFullYear()}`;\n  }\n\n  private generateYears() {\n    const startYear = calculateYearsRangeStart(this.value, this.yearsPerPage);\n    const month = this.value.getMonth();\n    const result = [];\n\n    const rows = this.yearsPerPage / YEARS_PER_ROW;\n\n    for (let i = 0; i < rows; i++) {\n      const row: Date[] = [];\n      for (let j = 0; j < YEARS_PER_ROW; j++) {\n        const year = startYear + i * YEARS_PER_ROW + j;\n        const date = new Date(year, month, 1);\n        // fix year since values between 0 and 100 results in 1900s\n        date.setFullYear(year);\n        row.push(date);\n      }\n      result.push(row);\n    }\n\n    return result;\n  }\n\n  private resolveYearPartName(date: Date) {\n    const today = new Date();\n    return {\n      year: true,\n      selected: date.getFullYear() === this.value.getFullYear(),\n      current: date.getFullYear() === today.getFullYear(),\n    };\n  }\n\n  private selectYear(year: Date) {\n    const value = new Date(year);\n    setDateSafe(value, this.value.getDate());\n    this.value = value;\n    this.emitEvent('igcChange', { detail: this.value });\n  }\n\n  private yearKeyDown(event: KeyboardEvent, year: Date) {\n    if (event.key === 'Enter' || event.key === ' ') {\n      event.preventDefault();\n      this.selectYear(year);\n    }\n  }\n\n  protected override render() {\n    return html`${this.years.map((row) => {\n      return html`<div part=\"years-row\" role=\"row\">\n        ${row.map((year) => {\n          const yearPartName = partNameMap(this.resolveYearPartName(year));\n          const yearInnerPartName = yearPartName.replace('year', 'year-inner');\n\n          return html`<span part=${yearPartName}>\n            <span\n              part=${yearInnerPartName}\n              role=\"gridcell\"\n              aria-selected=${year.getFullYear() === this.value.getFullYear()}\n              tabindex=\"${year.getFullYear() === this.value.getFullYear()\n                ? 0\n                : -1}\"\n              @click=${() => this.selectYear(year)}\n              @keydown=${(event: KeyboardEvent) =>\n                this.yearKeyDown(event, year)}\n            >\n              ${this.formattedYear(year)}\n            </span>\n          </span>`;\n        })}\n      </div>`;\n    })}`;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'igc-years-view': IgcYearsViewComponent;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}