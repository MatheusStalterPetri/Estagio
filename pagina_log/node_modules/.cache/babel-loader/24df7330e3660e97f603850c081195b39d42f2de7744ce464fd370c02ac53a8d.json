{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, resolveComponent as _resolveComponent, createVNode as _createVNode } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"Log Viewer\", -1 /* HOISTED */);\nconst _hoisted_2 = {\n  id: \"customers\"\n};\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"thead\", null, [/*#__PURE__*/_createElementVNode(\"tr\", null, [/*#__PURE__*/_createElementVNode(\"th\", null, \"Time Elapsed\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Tempo De Resposta\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Endereco Do Cliente\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Códigos de resultado/status\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Tamanho da transferência\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Método de solicitação\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"URL\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Tipo de conteúdo\")])], -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_apex_chart = _resolveComponent(\"apex-chart\");\n  return _openBlock(), _createElementBlock(\"div\", null, [_hoisted_1, _createElementVNode(\"input\", {\n    type: \"file\",\n    onChange: _cache[0] || (_cache[0] = $event => $options.handleFileSelect($event))\n  }, null, 32 /* HYDRATE_EVENTS */), _createElementVNode(\"table\", _hoisted_2, [_hoisted_3, _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.logs, (log, index) => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: index\n    }, [_createElementVNode(\"td\", null, _toDisplayString(log.timeElapsed), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(log.tempoDeResposta), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(log.enderecoDoCliente), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(log.codeStatus), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(log.bytes), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(log.methodUrl), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(log.uri), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(log.type), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))])]), _createVNode(_component_apex_chart, {\n    type: \"line\",\n    options: $data.chartOptions,\n    series: $data.chartSeries\n  }, null, 8 /* PROPS */, [\"options\", \"series\"])]);\n}","map":{"version":3,"names":["_createElementVNode","id","_createElementBlock","_hoisted_1","type","onChange","_cache","$event","$options","handleFileSelect","_hoisted_2","_hoisted_3","_Fragment","_renderList","$data","logs","log","index","key","_toDisplayString","timeElapsed","tempoDeResposta","enderecoDoCliente","codeStatus","bytes","methodUrl","uri","_createVNode","_component_apex_chart","options","chartOptions","series","chartSeries"],"sources":["C:\\Users\\mthss\\Documentos\\Projeto_estagio\\pagina_log\\src\\views\\LogView.vue"],"sourcesContent":["<style>\r\n#customers {\r\n  font-family: Arial, Helvetica, sans-serif;\r\n  border-collapse: collapse;\r\n  width: 100%;\r\n}\r\n\r\n#customers td,\r\n#customers th {\r\n  border: 1px solid #ddd;\r\n  padding: 8px;\r\n}\r\n\r\n#customers tr:nth-child(even) {\r\n  background-color: #f2f2f2;\r\n}\r\n\r\n#customers tr:hover {\r\n  background-color: #ddd;\r\n}\r\n\r\n#customers th {\r\n  padding-top: 12px;\r\n  padding-bottom: 12px;\r\n  text-align: left;\r\n  background-color: #04AA6D;\r\n  color: white;\r\n}\r\n</style>\r\n\r\n<template>\r\n  <div>\r\n    <h1>Log Viewer</h1>\r\n    <input type=\"file\" @change=\"handleFileSelect($event)\">\r\n    <table id=\"customers\">\r\n      <thead>\r\n        <tr>\r\n          <th>Time Elapsed</th>\r\n          <th>Tempo De Resposta</th>\r\n          <th>Endereco Do Cliente</th>\r\n          <th>Códigos de resultado/status</th>\r\n          <th>Tamanho da transferência</th>\r\n          <th>Método de solicitação</th>\r\n          <th>URL</th>\r\n          <th>Tipo de conteúdo</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr v-for=\"(log, index) in logs\" :key=\"index\">\r\n          <td>{{ log.timeElapsed }}</td>\r\n          <td>{{ log.tempoDeResposta }}</td>\r\n          <td>{{ log.enderecoDoCliente }}</td>\r\n          <td>{{ log.codeStatus }}</td>\r\n          <td>{{ log.bytes }}</td>\r\n          <td>{{ log.methodUrl }}</td>\r\n          <td>{{ log.uri }}</td>\r\n          <td>{{ log.type }}</td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n    <apex-chart type=\"line\" :options=\"chartOptions\" :series=\"chartSeries\"></apex-chart>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { VueApexCharts } from 'vue3-apexcharts';\r\n\r\nexport default {\r\n  components: {\r\n    ApexChart: VueApexCharts,\r\n  },\r\n  data() {\r\n    return {\r\n      logs: [],\r\n      chartOptions: {\r\n        chart: {\r\n          id: 'log-chart',\r\n          height: 300,\r\n          type: 'line',\r\n        },\r\n        xaxis: {\r\n          type: 'datetime',\r\n          categories: [],\r\n        },\r\n        yaxis: {\r\n          title: {\r\n            text: 'Log Entries',\r\n          },\r\n        },\r\n      },\r\n      chartSeries: [{\r\n        name: 'Entries',\r\n        data: [],\r\n      }],\r\n    };\r\n  },\r\n  methods: {\r\n    handleFileSelect(event) {\r\n      const file = event.target.files[0];\r\n      const reader = new FileReader();\r\n\r\n\r\n\r\n      reader.onload = () => {\r\n        const formattedData = data.replace(/^\\d+\\.\\d+/g, function (match) {\r\n          return moment.unix(match).format('YYYY-MM-DD HH:mm:ss');\r\n        });\r\n        const logs = reader.result.split('\\n').map((log) => {\r\n\r\n          const [formattedData, responseTime, enderecoDoCliente, codeStatus, bytes, methodUrl, uri, type] = log.replace(/\\s+/g, ' ').trim().split(' ');\r\n          return { formattedData, responseTime, enderecoDoCliente, codeStatus, bytes, methodUrl, uri, type };\r\n        });\r\n\r\n        this.logs = logs;\r\n\r\n        // Populando o gráfico\r\n        const categories = logs.map((log) => log.time);\r\n        const data = logs.map((log) => log.bytes);\r\n        this.chartOptions.xaxis.categories = categories;\r\n        this.chartSeries[0].data = data;\r\n      };\r\n\r\n      reader.readAsText(file);\r\n    },\r\n  },\r\n};\r\n</script>\r\n"],"mappings":";gCAgCIA,mBAAA,CAAmB,YAAf,YAAU;;EAEPC,EAAE,EAAC;AAAW;gCACnBD,mBAAA,CAWQ,gB,aAVNA,mBAAA,CASK,a,aARHA,mBAAA,CAAqB,YAAjB,cAAY,G,aAChBA,mBAAA,CAA0B,YAAtB,mBAAiB,G,aACrBA,mBAAA,CAA4B,YAAxB,qBAAmB,G,aACvBA,mBAAA,CAAoC,YAAhC,6BAA2B,G,aAC/BA,mBAAA,CAAiC,YAA7B,0BAAwB,G,aAC5BA,mBAAA,CAA8B,YAA1B,uBAAqB,G,aACzBA,mBAAA,CAAY,YAAR,KAAG,G,aACPA,mBAAA,CAAyB,YAArB,kBAAgB,E;;;;uBAb5BE,mBAAA,CA8BM,cA7BJC,UAAmB,EACnBH,mBAAA,CAAsD;IAA/CI,IAAI,EAAC,MAAM;IAAEC,QAAM,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEC,QAAA,CAAAC,gBAAgB,CAACF,MAAM;qCACnDP,mBAAA,CAyBQ,SAzBRU,UAyBQ,GAxBNC,UAWQ,EACRX,mBAAA,CAWQ,iB,kBAVNE,mBAAA,CASKU,SAAA,QAAAC,WAAA,CATsBC,KAAA,CAAAC,IAAI,GAAnBC,GAAG,EAAEC,KAAK;yBAAtBf,mBAAA,CASK;MAT6BgB,GAAG,EAAED;IAAK,IAC1CjB,mBAAA,CAA8B,YAAAmB,gBAAA,CAAvBH,GAAG,CAACI,WAAW,kBACtBpB,mBAAA,CAAkC,YAAAmB,gBAAA,CAA3BH,GAAG,CAACK,eAAe,kBAC1BrB,mBAAA,CAAoC,YAAAmB,gBAAA,CAA7BH,GAAG,CAACM,iBAAiB,kBAC5BtB,mBAAA,CAA6B,YAAAmB,gBAAA,CAAtBH,GAAG,CAACO,UAAU,kBACrBvB,mBAAA,CAAwB,YAAAmB,gBAAA,CAAjBH,GAAG,CAACQ,KAAK,kBAChBxB,mBAAA,CAA4B,YAAAmB,gBAAA,CAArBH,GAAG,CAACS,SAAS,kBACpBzB,mBAAA,CAAsB,YAAAmB,gBAAA,CAAfH,GAAG,CAACU,GAAG,kBACd1B,mBAAA,CAAuB,YAAAmB,gBAAA,CAAhBH,GAAG,CAACZ,IAAI,iB;sCAIrBuB,YAAA,CAAmFC,qBAAA;IAAvExB,IAAI,EAAC,MAAM;IAAEyB,OAAO,EAAEf,KAAA,CAAAgB,YAAY;IAAGC,MAAM,EAAEjB,KAAA,CAAAkB"},"metadata":{},"sourceType":"module","externalDependencies":[]}