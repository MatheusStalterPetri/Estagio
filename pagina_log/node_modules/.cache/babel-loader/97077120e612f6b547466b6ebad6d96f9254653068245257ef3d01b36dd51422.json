{"ast":null,"code":"import { isDefined } from '../../../internal/is-defined.js';\nimport { normalizeCase } from '../../../internal/normalize-case.js';\nexport const StringOperands = Object.freeze({\n  contains: {\n    name: 'contains',\n    label: 'Contains',\n    unary: false,\n    logic: (target, term, caseSensitive) => normalizeCase(target, caseSensitive).includes(normalizeCase(term, caseSensitive))\n  },\n  doesNotContain: {\n    name: 'doesNotContain',\n    label: 'Does not contain',\n    unary: false,\n    logic: (target, term, caseSensitive) => !normalizeCase(target, caseSensitive).includes(normalizeCase(term, caseSensitive))\n  },\n  startsWith: {\n    name: 'startsWith',\n    label: 'Starts with',\n    unary: false,\n    logic: (target, searchTerm, caseSensitive) => normalizeCase(target, caseSensitive).startsWith(normalizeCase(searchTerm, caseSensitive))\n  },\n  endsWith: {\n    name: 'endsWith',\n    label: 'Ends with',\n    unary: false,\n    logic: (target, searchTerm, caseSensitive) => normalizeCase(target, caseSensitive).endsWith(normalizeCase(searchTerm, caseSensitive))\n  },\n  equals: {\n    name: 'equals',\n    label: 'Equals',\n    unary: false,\n    logic: (target, searchTerm, caseSensitive) => normalizeCase(target, caseSensitive) === normalizeCase(searchTerm, caseSensitive)\n  },\n  doesNotEqual: {\n    name: 'doesNotEqual',\n    label: 'Does not equal',\n    unary: false,\n    logic: (target, searchTerm, caseSensitive) => normalizeCase(target, caseSensitive) !== normalizeCase(searchTerm, caseSensitive)\n  },\n  empty: {\n    name: 'empty',\n    label: 'Empty',\n    unary: true,\n    logic: target => !isDefined(target) || target.length < 1\n  },\n  notEmpty: {\n    name: 'notEmpty',\n    label: 'Not empty',\n    unary: true,\n    logic: target => isDefined(target) && target.length > 0\n  }\n});","map":{"version":3,"names":["isDefined","normalizeCase","StringOperands","Object","freeze","contains","name","label","unary","logic","target","term","caseSensitive","includes","doesNotContain","startsWith","searchTerm","endsWith","equals","doesNotEqual","empty","length","notEmpty"],"sources":["../../../../../src/operations/filter/operands/string.ts"],"sourcesContent":["import { isDefined } from '../../../internal/is-defined.js';\nimport { normalizeCase } from '../../../internal/normalize-case.js';\nimport type { FilterOperands } from '../types.js';\n\nexport type StringKeys =\n  | 'contains'\n  | 'doesNotContain'\n  | 'startsWith'\n  | 'endsWith'\n  | 'equals'\n  | 'doesNotEqual'\n  | 'empty'\n  | 'notEmpty';\n\nexport const StringOperands = Object.freeze<FilterOperands<string, StringKeys>>({\n  contains: {\n    name: 'contains',\n    label: 'Contains',\n    unary: false,\n    logic: (target, term, caseSensitive?) =>\n      normalizeCase(target, caseSensitive).includes(normalizeCase(term, caseSensitive)),\n  },\n  doesNotContain: {\n    name: 'doesNotContain',\n    label: 'Does not contain',\n    unary: false,\n    logic: (target, term, caseSensitive?) =>\n      !normalizeCase(target, caseSensitive).includes(normalizeCase(term, caseSensitive)),\n  },\n  startsWith: {\n    name: 'startsWith',\n    label: 'Starts with',\n    unary: false,\n    logic: (target, searchTerm, caseSensitive?) =>\n      normalizeCase(target, caseSensitive).startsWith(normalizeCase(searchTerm, caseSensitive)),\n  },\n  endsWith: {\n    name: 'endsWith',\n    label: 'Ends with',\n    unary: false,\n    logic: (target, searchTerm, caseSensitive?) =>\n      normalizeCase(target, caseSensitive).endsWith(normalizeCase(searchTerm, caseSensitive)),\n  },\n  equals: {\n    name: 'equals',\n    label: 'Equals',\n    unary: false,\n    logic: (target, searchTerm, caseSensitive) =>\n      normalizeCase(target, caseSensitive) === normalizeCase(searchTerm, caseSensitive),\n  },\n\n  doesNotEqual: {\n    name: 'doesNotEqual',\n    label: 'Does not equal',\n    unary: false,\n    logic: (target, searchTerm, caseSensitive) =>\n      normalizeCase(target, caseSensitive) !== normalizeCase(searchTerm, caseSensitive),\n  },\n\n  empty: {\n    name: 'empty',\n    label: 'Empty',\n    unary: true,\n    logic: target => !isDefined(target) || target.length < 1,\n  },\n\n  notEmpty: {\n    name: 'notEmpty',\n    label: 'Not empty',\n    unary: true,\n    logic: target => isDefined(target) && target.length > 0,\n  },\n});\n"],"mappings":"AAAA,SAASA,SAAS,QAAQ,iCAAiC;AAC3D,SAASC,aAAa,QAAQ,qCAAqC;AAanE,OAAO,MAAMC,cAAc,GAAGC,MAAM,CAACC,MAAM,CAAqC;EAC9EC,QAAQ,EAAE;IACRC,IAAI,EAAE,UAAU;IAChBC,KAAK,EAAE,UAAU;IACjBC,KAAK,EAAE,KAAK;IACZC,KAAK,EAAEA,CAACC,MAAM,EAAEC,IAAI,EAAEC,aAAc,KAClCX,aAAa,CAACS,MAAM,EAAEE,aAAa,CAAC,CAACC,QAAQ,CAACZ,aAAa,CAACU,IAAI,EAAEC,aAAa,CAAC;GACnF;EACDE,cAAc,EAAE;IACdR,IAAI,EAAE,gBAAgB;IACtBC,KAAK,EAAE,kBAAkB;IACzBC,KAAK,EAAE,KAAK;IACZC,KAAK,EAAEA,CAACC,MAAM,EAAEC,IAAI,EAAEC,aAAc,KAClC,CAACX,aAAa,CAACS,MAAM,EAAEE,aAAa,CAAC,CAACC,QAAQ,CAACZ,aAAa,CAACU,IAAI,EAAEC,aAAa,CAAC;GACpF;EACDG,UAAU,EAAE;IACVT,IAAI,EAAE,YAAY;IAClBC,KAAK,EAAE,aAAa;IACpBC,KAAK,EAAE,KAAK;IACZC,KAAK,EAAEA,CAACC,MAAM,EAAEM,UAAU,EAAEJ,aAAc,KACxCX,aAAa,CAACS,MAAM,EAAEE,aAAa,CAAC,CAACG,UAAU,CAACd,aAAa,CAACe,UAAU,EAAEJ,aAAa,CAAC;GAC3F;EACDK,QAAQ,EAAE;IACRX,IAAI,EAAE,UAAU;IAChBC,KAAK,EAAE,WAAW;IAClBC,KAAK,EAAE,KAAK;IACZC,KAAK,EAAEA,CAACC,MAAM,EAAEM,UAAU,EAAEJ,aAAc,KACxCX,aAAa,CAACS,MAAM,EAAEE,aAAa,CAAC,CAACK,QAAQ,CAAChB,aAAa,CAACe,UAAU,EAAEJ,aAAa,CAAC;GACzF;EACDM,MAAM,EAAE;IACNZ,IAAI,EAAE,QAAQ;IACdC,KAAK,EAAE,QAAQ;IACfC,KAAK,EAAE,KAAK;IACZC,KAAK,EAAEA,CAACC,MAAM,EAAEM,UAAU,EAAEJ,aAAa,KACvCX,aAAa,CAACS,MAAM,EAAEE,aAAa,CAAC,KAAKX,aAAa,CAACe,UAAU,EAAEJ,aAAa;GACnF;EAEDO,YAAY,EAAE;IACZb,IAAI,EAAE,cAAc;IACpBC,KAAK,EAAE,gBAAgB;IACvBC,KAAK,EAAE,KAAK;IACZC,KAAK,EAAEA,CAACC,MAAM,EAAEM,UAAU,EAAEJ,aAAa,KACvCX,aAAa,CAACS,MAAM,EAAEE,aAAa,CAAC,KAAKX,aAAa,CAACe,UAAU,EAAEJ,aAAa;GACnF;EAEDQ,KAAK,EAAE;IACLd,IAAI,EAAE,OAAO;IACbC,KAAK,EAAE,OAAO;IACdC,KAAK,EAAE,IAAI;IACXC,KAAK,EAAEC,MAAM,IAAI,CAACV,SAAS,CAACU,MAAM,CAAC,IAAIA,MAAM,CAACW,MAAM,GAAG;GACxD;EAEDC,QAAQ,EAAE;IACRhB,IAAI,EAAE,UAAU;IAChBC,KAAK,EAAE,WAAW;IAClBC,KAAK,EAAE,IAAI;IACXC,KAAK,EAAEC,MAAM,IAAIV,SAAS,CAACU,MAAM,CAAC,IAAIA,MAAM,CAACW,MAAM,GAAG;;CAEzD,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}