{"ast":null,"code":"const weekDaysMap = {\n  sunday: 0,\n  monday: 1,\n  tuesday: 2,\n  wednesday: 3,\n  thursday: 4,\n  friday: 5,\n  saturday: 6\n};\nconst DATE_BOUND = 8640000000000000;\nexport const MAX_DATE = new Date(DATE_BOUND);\nexport const MIN_DATE = new Date(-DATE_BOUND);\nexport const isDate = value => value instanceof Date;\nexport const areEqualDates = (date1, date2, datePartOnly = true) => {\n  return datePartOnly ? date1.getFullYear() === date2.getFullYear() && date1.getMonth() === date2.getMonth() && date1.getDate() === date2.getDate() : date1.getTime() === date2.getTime();\n};\nexport const setDateSafe = (date, value) => {\n  date.setDate(value);\n  if (date.getDate() !== value) {\n    date.setDate(0);\n  }\n};\nexport const isEqual = (obj1, obj2) => {\n  if (isDate(obj1) && isDate(obj2)) {\n    return obj1.getTime() === obj2.getTime();\n  }\n  return obj1 === obj2;\n};\nexport const isValidDate = value => {\n  if (isDate(value)) {\n    return !isNaN(value.getTime());\n  }\n  return false;\n};\nexport const validateDate = value => {\n  return isValidDate(value) ? value : new Date();\n};\nexport const getDateOnly = date => {\n  const validDate = validateDate(date);\n  return new Date(validDate.getFullYear(), validDate.getMonth(), validDate.getDate());\n};\nexport const getWeekDayNumber = day => {\n  return weekDaysMap[day];\n};\nexport const calculateYearsRangeStart = (date, rangeCount) => {\n  const year = date.getFullYear();\n  const startYear = Math.floor(year / rangeCount) * rangeCount;\n  return startYear;\n};","map":{"version":3,"names":["weekDaysMap","sunday","monday","tuesday","wednesday","thursday","friday","saturday","DATE_BOUND","MAX_DATE","Date","MIN_DATE","isDate","value","areEqualDates","date1","date2","datePartOnly","getFullYear","getMonth","getDate","getTime","setDateSafe","date","setDate","isEqual","obj1","obj2","isValidDate","isNaN","validateDate","getDateOnly","validDate","getWeekDayNumber","day","calculateYearsRangeStart","rangeCount","year","startYear","Math","floor"],"sources":["../../../../src/components/calendar/common/utils.ts"],"sourcesContent":["import { WeekDays } from './calendar.model.js';\n\nconst weekDaysMap = {\n  sunday: 0,\n  monday: 1,\n  tuesday: 2,\n  wednesday: 3,\n  thursday: 4,\n  friday: 5,\n  saturday: 6,\n};\n\nconst DATE_BOUND = 8640000000000000;\n\nexport const MAX_DATE = new Date(DATE_BOUND);\n\nexport const MIN_DATE = new Date(-DATE_BOUND);\n\nexport const isDate = (value: any): value is Date => value instanceof Date;\n\nexport const areEqualDates = (\n  date1: Date,\n  date2: Date,\n  datePartOnly = true\n) => {\n  return datePartOnly\n    ? date1.getFullYear() === date2.getFullYear() &&\n        date1.getMonth() === date2.getMonth() &&\n        date1.getDate() === date2.getDate()\n    : date1.getTime() === date2.getTime();\n};\n\nexport const setDateSafe = (date: Date, value: number) => {\n  date.setDate(value);\n  if (date.getDate() !== value) {\n    date.setDate(0);\n  }\n};\n\nexport const isEqual = (obj1: any, obj2: any): boolean => {\n  if (isDate(obj1) && isDate(obj2)) {\n    return obj1.getTime() === obj2.getTime();\n  }\n  return obj1 === obj2;\n};\n\nexport const isValidDate = (value: any): value is Date => {\n  if (isDate(value)) {\n    return !isNaN(value.getTime());\n  }\n\n  return false;\n};\n\nexport const validateDate = (value: Date) => {\n  return isValidDate(value) ? value : new Date();\n};\n\nexport const getDateOnly = (date: Date) => {\n  const validDate = validateDate(date);\n  return new Date(\n    validDate.getFullYear(),\n    validDate.getMonth(),\n    validDate.getDate()\n  );\n};\n\nexport const getWeekDayNumber = (day: WeekDays) => {\n  return weekDaysMap[day];\n};\n\nexport const calculateYearsRangeStart = (date: Date, rangeCount: number) => {\n  const year = date.getFullYear();\n  const startYear = Math.floor(year / rangeCount) * rangeCount;\n\n  return startYear;\n};\n"],"mappings":"AAEA,MAAMA,WAAW,GAAG;EAClBC,MAAM,EAAE,CAAC;EACTC,MAAM,EAAE,CAAC;EACTC,OAAO,EAAE,CAAC;EACVC,SAAS,EAAE,CAAC;EACZC,QAAQ,EAAE,CAAC;EACXC,MAAM,EAAE,CAAC;EACTC,QAAQ,EAAE;CACX;AAED,MAAMC,UAAU,GAAG,gBAAgB;AAEnC,OAAO,MAAMC,QAAQ,GAAG,IAAIC,IAAI,CAACF,UAAU,CAAC;AAE5C,OAAO,MAAMG,QAAQ,GAAG,IAAID,IAAI,CAAC,CAACF,UAAU,CAAC;AAE7C,OAAO,MAAMI,MAAM,GAAIC,KAAU,IAAoBA,KAAK,YAAYH,IAAI;AAE1E,OAAO,MAAMI,aAAa,GAAGA,CAC3BC,KAAW,EACXC,KAAW,EACXC,YAAY,GAAG,IAAI,KACjB;EACF,OAAOA,YAAY,GACfF,KAAK,CAACG,WAAW,EAAE,KAAKF,KAAK,CAACE,WAAW,EAAE,IACzCH,KAAK,CAACI,QAAQ,EAAE,KAAKH,KAAK,CAACG,QAAQ,EAAE,IACrCJ,KAAK,CAACK,OAAO,EAAE,KAAKJ,KAAK,CAACI,OAAO,EAAE,GACrCL,KAAK,CAACM,OAAO,EAAE,KAAKL,KAAK,CAACK,OAAO,EAAE;AACzC,CAAC;AAED,OAAO,MAAMC,WAAW,GAAGA,CAACC,IAAU,EAAEV,KAAa,KAAI;EACvDU,IAAI,CAACC,OAAO,CAACX,KAAK,CAAC;EACnB,IAAIU,IAAI,CAACH,OAAO,EAAE,KAAKP,KAAK,EAAE;IAC5BU,IAAI,CAACC,OAAO,CAAC,CAAC,CAAC;;AAEnB,CAAC;AAED,OAAO,MAAMC,OAAO,GAAGA,CAACC,IAAS,EAAEC,IAAS,KAAa;EACvD,IAAIf,MAAM,CAACc,IAAI,CAAC,IAAId,MAAM,CAACe,IAAI,CAAC,EAAE;IAChC,OAAOD,IAAI,CAACL,OAAO,EAAE,KAAKM,IAAI,CAACN,OAAO,EAAE;;EAE1C,OAAOK,IAAI,KAAKC,IAAI;AACtB,CAAC;AAED,OAAO,MAAMC,WAAW,GAAIf,KAAU,IAAmB;EACvD,IAAID,MAAM,CAACC,KAAK,CAAC,EAAE;IACjB,OAAO,CAACgB,KAAK,CAAChB,KAAK,CAACQ,OAAO,EAAE,CAAC;;EAGhC,OAAO,KAAK;AACd,CAAC;AAED,OAAO,MAAMS,YAAY,GAAIjB,KAAW,IAAI;EAC1C,OAAOe,WAAW,CAACf,KAAK,CAAC,GAAGA,KAAK,GAAG,IAAIH,IAAI,EAAE;AAChD,CAAC;AAED,OAAO,MAAMqB,WAAW,GAAIR,IAAU,IAAI;EACxC,MAAMS,SAAS,GAAGF,YAAY,CAACP,IAAI,CAAC;EACpC,OAAO,IAAIb,IAAI,CACbsB,SAAS,CAACd,WAAW,EAAE,EACvBc,SAAS,CAACb,QAAQ,EAAE,EACpBa,SAAS,CAACZ,OAAO,EAAE,CACpB;AACH,CAAC;AAED,OAAO,MAAMa,gBAAgB,GAAIC,GAAa,IAAI;EAChD,OAAOlC,WAAW,CAACkC,GAAG,CAAC;AACzB,CAAC;AAED,OAAO,MAAMC,wBAAwB,GAAGA,CAACZ,IAAU,EAAEa,UAAkB,KAAI;EACzE,MAAMC,IAAI,GAAGd,IAAI,CAACL,WAAW,EAAE;EAC/B,MAAMoB,SAAS,GAAGC,IAAI,CAACC,KAAK,CAACH,IAAI,GAAGD,UAAU,CAAC,GAAGA,UAAU;EAE5D,OAAOE,SAAS;AAClB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}