{"ast":null,"code":"var __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { html, LitElement } from 'lit';\nimport { property } from 'lit/decorators.js';\nimport { watch } from '../common/decorators/watch.js';\nimport { styles } from './themes/light/tree.base.css.js';\nimport { EventEmitterMixin } from '../common/mixins/event-emitter.js';\nimport { SizableMixin } from '../common/mixins/sizable.js';\nimport { IgcTreeNavigationService } from './tree.navigation.js';\nimport { IgcTreeSelectionService } from './tree.selection.js';\nimport { blazorSuppress } from '../common/decorators/blazorSuppress.js';\nimport { blazorAdditionalDependencies } from '../common/decorators/blazorAdditionalDependencies.js';\nimport { defineComponents } from '../common/definitions/defineComponents.js';\nimport IgcTreeItemComponent from './tree-item.js';\ndefineComponents(IgcTreeItemComponent);\nlet IgcTreeComponent = class IgcTreeComponent extends SizableMixin(EventEmitterMixin(LitElement)) {\n  onDirChange() {\n    var _a;\n    (_a = this.items) === null || _a === void 0 ? void 0 : _a.forEach(item => {\n      item.requestUpdate();\n    });\n  }\n  onSizeChange() {\n    var _a, _b, _c;\n    (_a = this.items) === null || _a === void 0 ? void 0 : _a.forEach(item => {\n      item.requestUpdate();\n    });\n    (_c = (_b = this.navService.activeItem) === null || _b === void 0 ? void 0 : _b.wrapper) === null || _c === void 0 ? void 0 : _c.scrollIntoView({\n      behavior: 'smooth',\n      block: 'nearest',\n      inline: 'nearest'\n    });\n  }\n  selectionModeChange() {\n    var _a;\n    this.selectionService.clearItemsSelection();\n    (_a = this.items) === null || _a === void 0 ? void 0 : _a.forEach(item => {\n      item.requestUpdate();\n    });\n  }\n  singleBranchExpandChange() {\n    if (this.singleBranchExpand) {\n      if (this.navService.activeItem) {\n        const path = this.navService.activeItem.path;\n        const remainExpanded = new Set(path.splice(0, path.length - 1));\n        this.items.forEach(item => {\n          if (!remainExpanded.has(item)) {\n            item.collapseWithEvent();\n          }\n        });\n      } else {\n        this.items.forEach(item => item.collapseWithEvent());\n      }\n    }\n  }\n  constructor() {\n    super();\n    this.singleBranchExpand = false;\n    this.selection = 'none';\n    this.dir = 'auto';\n    this.selectionService = new IgcTreeSelectionService(this);\n    this.navService = new IgcTreeNavigationService(this, this.selectionService);\n  }\n  connectedCallback() {\n    super.connectedCallback();\n    this.setAttribute('role', 'tree');\n    this.addEventListener('keydown', this.handleKeydown);\n    this.items.forEach(i => {\n      i.init = true;\n    });\n    const firstNotDisabledItem = this.items.find(i => !i.disabled);\n    if (firstNotDisabledItem) {\n      firstNotDisabledItem.tabIndex = 0;\n      this.navService.focusItem(firstNotDisabledItem);\n    }\n  }\n  get items() {\n    return Array.from(this.querySelectorAll(`igc-tree-item`));\n  }\n  handleKeydown(event) {\n    this.navService.handleKeydown(event);\n  }\n  expandToItem(item) {\n    if (item && item.parent) {\n      item.path.forEach(i => {\n        if (i !== item && !i.expanded) {\n          i.expanded = true;\n        }\n      });\n    }\n  }\n  select(items) {\n    if (!items) {\n      items = this.selection === 'cascade' ? this.items.filter(item => item.level === 0) : this.items;\n    }\n    this.selectionService.selectItemsWithNoEvent(items);\n  }\n  deselect(items) {\n    this.selectionService.deselectItemsWithNoEvent(items);\n  }\n  expand(items) {\n    items = items || this.items;\n    items.forEach(item => item.expanded = true);\n  }\n  collapse(items) {\n    items = items || this.items;\n    items.forEach(item => item.expanded = false);\n  }\n  render() {\n    return html`<slot></slot>`;\n  }\n};\nIgcTreeComponent.tagName = 'igc-tree';\nIgcTreeComponent.styles = styles;\n__decorate([blazorSuppress()], IgcTreeComponent.prototype, \"selectionService\", void 0);\n__decorate([blazorSuppress()], IgcTreeComponent.prototype, \"navService\", void 0);\n__decorate([property({\n  attribute: 'single-branch-expand',\n  reflect: true,\n  type: Boolean\n})], IgcTreeComponent.prototype, \"singleBranchExpand\", void 0);\n__decorate([property({\n  reflect: true\n})], IgcTreeComponent.prototype, \"selection\", void 0);\n__decorate([property({\n  reflect: true\n})], IgcTreeComponent.prototype, \"dir\", void 0);\n__decorate([watch('dir')], IgcTreeComponent.prototype, \"onDirChange\", null);\n__decorate([watch('size', {\n  waitUntilFirstUpdate: true\n})], IgcTreeComponent.prototype, \"onSizeChange\", null);\n__decorate([watch('selection', {\n  waitUntilFirstUpdate: true\n})], IgcTreeComponent.prototype, \"selectionModeChange\", null);\n__decorate([watch('singleBranchExpand')], IgcTreeComponent.prototype, \"singleBranchExpandChange\", null);\n__decorate([blazorSuppress()], IgcTreeComponent.prototype, \"items\", null);\n__decorate([blazorSuppress()], IgcTreeComponent.prototype, \"select\", null);\n__decorate([blazorSuppress()], IgcTreeComponent.prototype, \"deselect\", null);\n__decorate([blazorSuppress()], IgcTreeComponent.prototype, \"expand\", null);\n__decorate([blazorSuppress()], IgcTreeComponent.prototype, \"collapse\", null);\nIgcTreeComponent = __decorate([blazorAdditionalDependencies('IgcTreeItemComponent')], IgcTreeComponent);\nexport default IgcTreeComponent;","map":{"version":3,"names":["html","LitElement","property","watch","styles","EventEmitterMixin","SizableMixin","IgcTreeNavigationService","IgcTreeSelectionService","blazorSuppress","blazorAdditionalDependencies","defineComponents","IgcTreeItemComponent","IgcTreeComponent","onDirChange","_a","items","forEach","item","requestUpdate","onSizeChange","_c","_b","navService","activeItem","wrapper","scrollIntoView","behavior","block","inline","selectionModeChange","selectionService","clearItemsSelection","singleBranchExpandChange","singleBranchExpand","path","remainExpanded","Set","splice","length","has","collapseWithEvent","constructor","selection","dir","connectedCallback","setAttribute","addEventListener","handleKeydown","i","init","firstNotDisabledItem","find","disabled","tabIndex","focusItem","Array","from","querySelectorAll","event","expandToItem","parent","expanded","select","filter","level","selectItemsWithNoEvent","deselect","deselectItemsWithNoEvent","expand","collapse","render","tagName","__decorate","attribute","reflect","type","Boolean","waitUntilFirstUpdate"],"sources":["../../../src/components/tree/tree.ts"],"sourcesContent":["import { html, LitElement } from 'lit';\nimport { property } from 'lit/decorators.js';\nimport { watch } from '../common/decorators/watch.js';\nimport { styles } from './themes/light/tree.base.css.js';\nimport { Constructor } from '../common/mixins/constructor.js';\nimport { EventEmitterMixin } from '../common/mixins/event-emitter.js';\nimport { SizableMixin } from '../common/mixins/sizable.js';\nimport { IgcTreeEventMap } from './tree.common.js';\nimport { IgcTreeNavigationService } from './tree.navigation.js';\nimport { IgcTreeSelectionService } from './tree.selection.js';\nimport { blazorSuppress } from '../common/decorators/blazorSuppress.js';\nimport { blazorAdditionalDependencies } from '../common/decorators/blazorAdditionalDependencies.js';\nimport { Direction } from '../common/types.js';\n\nimport { defineComponents } from '../common/definitions/defineComponents.js';\nimport IgcTreeItemComponent from './tree-item.js';\n\ndefineComponents(IgcTreeItemComponent);\n\n/**\n * The tree allows users to represent hierarchical data in a tree-view structure,\n * maintaining parent-child relationships, as well as to define static tree-view structure without a corresponding data model.\n *\n * @element igc-tree\n *\n * @slot - Renders the tree items inside default slot.\n *\n * @fires igcSelection - Emitted when item selection is changing, before the selection completes.\n * @fires igcItemCollapsed - Emitted when tree item is collapsed.\n * @fires igcItemCollapsing - Emitted when tree item is about to collapse.\n * @fires igcItemExpanded - Emitted when tree item is expanded.\n * @fires igcItemExpanding - Emitted when tree item is about to expand.\n * @fires igcItemActivated - Emitted when the tree's `active` item changes.\n */\n@blazorAdditionalDependencies('IgcTreeItemComponent')\nexport default class IgcTreeComponent extends SizableMixin(\n  EventEmitterMixin<IgcTreeEventMap, Constructor<LitElement>>(LitElement)\n) {\n  /** @private */\n  public static readonly tagName = 'igc-tree';\n  /** @private */\n  public static styles = styles;\n\n  /** @private */\n  @blazorSuppress()\n  public selectionService!: IgcTreeSelectionService;\n  /** @private */\n  @blazorSuppress()\n  public navService!: IgcTreeNavigationService;\n\n  /**\n   * Whether a single or multiple of a parent's child items can be expanded.\n   * @attr single-branch-expand\n   */\n  @property({ attribute: 'single-branch-expand', reflect: true, type: Boolean })\n  public singleBranchExpand = false;\n\n  /**\n   * The selection state of the tree.\n   * @attr\n   */\n  @property({ reflect: true })\n  public selection: 'none' | 'multiple' | 'cascade' = 'none';\n\n  /**\n   * The direction attribute of the control.\n   * @attr\n   */\n  @property({ reflect: true })\n  public override dir: Direction = 'auto';\n\n  @watch('dir')\n  protected onDirChange(): void {\n    this.items?.forEach((item: IgcTreeItemComponent) => {\n      item.requestUpdate();\n    });\n  }\n\n  @watch('size', { waitUntilFirstUpdate: true })\n  protected onSizeChange(): void {\n    this.items?.forEach((item: IgcTreeItemComponent) => {\n      item.requestUpdate();\n    });\n    this.navService.activeItem?.wrapper?.scrollIntoView({\n      behavior: 'smooth',\n      block: 'nearest',\n      inline: 'nearest',\n    });\n  }\n\n  @watch('selection', { waitUntilFirstUpdate: true })\n  protected selectionModeChange(): void {\n    this.selectionService.clearItemsSelection();\n    this.items?.forEach((item: IgcTreeItemComponent) => {\n      item.requestUpdate();\n    });\n  }\n\n  @watch('singleBranchExpand')\n  protected singleBranchExpandChange(): void {\n    if (this.singleBranchExpand) {\n      // if activeItem -> do not collapse its branch\n      if (this.navService.activeItem) {\n        const path = this.navService.activeItem.path;\n        const remainExpanded = new Set(path.splice(0, path.length - 1));\n        this.items.forEach((item) => {\n          if (!remainExpanded.has(item)) {\n            item.collapseWithEvent();\n          }\n        });\n      } else {\n        this.items.forEach((item) => item.collapseWithEvent());\n      }\n    }\n  }\n\n  constructor() {\n    super();\n    this.selectionService = new IgcTreeSelectionService(this);\n    this.navService = new IgcTreeNavigationService(this, this.selectionService);\n  }\n\n  public override connectedCallback(): void {\n    super.connectedCallback();\n    this.setAttribute('role', 'tree');\n    this.addEventListener('keydown', this.handleKeydown);\n    // set init to true for all items which are rendered along with the tree\n    this.items.forEach((i: IgcTreeItemComponent) => {\n      i.init = true;\n    });\n    const firstNotDisabledItem = this.items.find(\n      (i: IgcTreeItemComponent) => !i.disabled\n    );\n    if (firstNotDisabledItem) {\n      firstNotDisabledItem.tabIndex = 0;\n      this.navService.focusItem(firstNotDisabledItem);\n    }\n  }\n\n  /** Returns all of the tree's items. */\n  @blazorSuppress()\n  public get items(): Array<IgcTreeItemComponent> {\n    return Array.from(this.querySelectorAll(`igc-tree-item`));\n  }\n\n  private handleKeydown(event: KeyboardEvent) {\n    this.navService.handleKeydown(event);\n  }\n\n  /** @private */\n  public expandToItem(item: IgcTreeItemComponent): void {\n    if (item && item.parent) {\n      item.path.forEach((i) => {\n        if (i !== item && !i.expanded) {\n          i.expanded = true;\n        }\n      });\n    }\n  }\n\n  /** Select all items if the items collection is empty. Otherwise, select the items in the items collection. */\n  @blazorSuppress()\n  public select(\n    /* alternateType: TreeItemCollection */\n    items?: IgcTreeItemComponent[]\n  ): void {\n    if (!items) {\n      items =\n        this.selection === 'cascade'\n          ? this.items.filter((item: IgcTreeItemComponent) => item.level === 0)\n          : this.items;\n    }\n    this.selectionService.selectItemsWithNoEvent(items);\n  }\n\n  /** Deselect all items if the items collection is empty. Otherwise, deselect the items in the items collection. */\n  @blazorSuppress()\n  public deselect(\n    /* alternateType: TreeItemCollection */\n    items?: IgcTreeItemComponent[]\n  ): void {\n    this.selectionService.deselectItemsWithNoEvent(items);\n  }\n\n  /**\n   * Expands all of the passed items.\n   * If no items are passed, expands ALL items.\n   */\n  @blazorSuppress()\n  public expand(\n    /* alternateType: TreeItemCollection */\n    items?: IgcTreeItemComponent[]\n  ): void {\n    items = items || this.items;\n    items.forEach((item) => (item.expanded = true));\n  }\n\n  /**\n   * Collapses all of the passed items.\n   * If no items are passed, collapses ALL items.\n   */\n  @blazorSuppress()\n  public collapse(\n    /* alternateType: TreeItemCollection */\n    items?: IgcTreeItemComponent[]\n  ): void {\n    items = items || this.items;\n    items.forEach((item) => (item.expanded = false));\n  }\n\n  protected override render() {\n    return html`<slot></slot>`;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'igc-tree': IgcTreeComponent;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}