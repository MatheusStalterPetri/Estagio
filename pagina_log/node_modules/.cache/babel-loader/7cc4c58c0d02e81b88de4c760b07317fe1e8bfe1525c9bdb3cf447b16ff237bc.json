{"ast":null,"code":"var __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { property, query, queryAssignedElements, state } from 'lit/decorators.js';\nimport { html, LitElement } from 'lit';\nimport { partNameMap } from '../common/util.js';\nimport { styles } from './themes/light/tree-item.base.css.js';\nimport { styles as bootstrap } from './themes/light/tree-item.bootstrap.css.js';\nimport { styles as fluent } from './themes/light/tree-item.fluent.css.js';\nimport { styles as indigo } from './themes/light/tree-item.indigo.css.js';\nimport { watch } from '../common/decorators/watch.js';\nimport { themes } from '../../theming/theming-decorator.js';\nimport { blazorSuppress } from '../common/decorators/blazorSuppress.js';\nimport { defineComponents } from '../common/definitions/defineComponents.js';\nimport IgcIconComponent from '../icon/icon.js';\nimport IgcCheckboxComponent from '../checkbox/checkbox.js';\nimport IgcCircularProgressComponent from '../progress/circular-progress.js';\ndefineComponents(IgcIconComponent, IgcCheckboxComponent, IgcCircularProgressComponent);\nconst sizeMultiplier = {\n  small: 1 / 2,\n  medium: 2 / 3,\n  large: 1\n};\nlet IgcTreeItemComponent = class IgcTreeItemComponent extends LitElement {\n  constructor() {\n    super(...arguments);\n    this.focusedProgrammatically = false;\n    this.parent = null;\n    this.init = false;\n    this.isFocused = false;\n    this.hasChildren = false;\n    this.level = 0;\n    this.indeterminate = false;\n    this.label = '';\n    this.expanded = false;\n    this.active = false;\n    this.disabled = false;\n    this.selected = false;\n    this.loading = false;\n    this.value = undefined;\n  }\n  bothChange() {\n    if (this.hasChildren) {\n      this.setAttribute('aria-expanded', this.expanded.toString());\n    } else {\n      this.removeAttribute('aria-expanded');\n    }\n  }\n  expandedChange(oldValue) {\n    var _a;\n    (_a = this.navService) === null || _a === void 0 ? void 0 : _a.update_visible_cache(this, this.expanded);\n    if (!oldValue) {\n      return;\n    }\n    Promise.resolve().then(() => {\n      var _a, _b, _c, _d;\n      if (((_a = this.navService) === null || _a === void 0 ? void 0 : _a.focusedItem) !== this && !this.isFocused) {\n        (_d = (_c = (_b = this.navService) === null || _b === void 0 ? void 0 : _b.focusedItem) === null || _c === void 0 ? void 0 : _c.wrapper) === null || _d === void 0 ? void 0 : _d.scrollIntoView({\n          behavior: 'smooth',\n          block: 'nearest',\n          inline: 'nearest'\n        });\n      }\n    });\n  }\n  activeChange() {\n    var _a, _b;\n    if (this.active && ((_a = this.navService) === null || _a === void 0 ? void 0 : _a.activeItem) === this || !this.active) {\n      return;\n    }\n    if (this.navService) {\n      this.navService.setActiveItem(this, false);\n    }\n    (_b = this.tree) === null || _b === void 0 ? void 0 : _b.expandToItem(this);\n    Promise.resolve().then(() => {\n      var _a;\n      (_a = this.wrapper) === null || _a === void 0 ? void 0 : _a.scrollIntoView({\n        behavior: 'smooth',\n        block: 'nearest',\n        inline: 'nearest'\n      });\n    });\n  }\n  disabledChange() {\n    var _a;\n    (_a = this.navService) === null || _a === void 0 ? void 0 : _a.update_disabled_cache(this);\n  }\n  selectedChange() {\n    var _a, _b, _c, _d;\n    if (this.selected && !((_a = this.selectionService) === null || _a === void 0 ? void 0 : _a.isItemSelected(this))) {\n      (_b = this.selectionService) === null || _b === void 0 ? void 0 : _b.selectItemsWithNoEvent([this]);\n    }\n    if (!this.selected && ((_c = this.selectionService) === null || _c === void 0 ? void 0 : _c.isItemSelected(this))) {\n      (_d = this.selectionService) === null || _d === void 0 ? void 0 : _d.deselectItemsWithNoEvent([this]);\n    }\n  }\n  connectedCallback() {\n    var _a, _b;\n    super.connectedCallback();\n    this.tree = this.closest('igc-tree');\n    this.parent = ((_a = this.parentElement) === null || _a === void 0 ? void 0 : _a.tagName.toLowerCase()) === 'igc-tree-item' ? this.parentElement : null;\n    this.level = this.parent ? this.parent.level + 1 : 0;\n    this.setAttribute('role', 'treeitem');\n    this.addEventListener('blur', this.onBlur);\n    this.addEventListener('focus', this.onFocus);\n    this.addEventListener('pointerdown', this.pointerDown);\n    this.activeChange();\n    if (this.init) {\n      this.selectedChange();\n    } else {\n      (_b = this.selectionService) === null || _b === void 0 ? void 0 : _b.retriggerItemState(this);\n    }\n    this.init = false;\n  }\n  disconnectedCallback() {\n    var _a, _b;\n    super.disconnectedCallback();\n    (_a = this.selectionService) === null || _a === void 0 ? void 0 : _a.ensureStateOnItemDelete(this);\n    (_b = this.navService) === null || _b === void 0 ? void 0 : _b.delete_item(this);\n  }\n  get selectionService() {\n    var _a;\n    return (_a = this.tree) === null || _a === void 0 ? void 0 : _a.selectionService;\n  }\n  get navService() {\n    var _a;\n    return (_a = this.tree) === null || _a === void 0 ? void 0 : _a.navService;\n  }\n  get parts() {\n    return {\n      selected: this.selected,\n      focused: this.isFocused,\n      active: this.active\n    };\n  }\n  get directChildren() {\n    return Array.from(this.children).filter(x => x.tagName.toLowerCase() === 'igc-tree-item');\n  }\n  get allChildren() {\n    return Array.from(this.querySelectorAll(`igc-tree-item`));\n  }\n  get path() {\n    var _a;\n    return ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.path) ? [...this.parent.path, this] : [this];\n  }\n  pointerDown(event) {\n    var _a;\n    event.stopPropagation();\n    if (this.disabled) {\n      return;\n    }\n    this.tabIndex = 0;\n    (_a = this.navService) === null || _a === void 0 ? void 0 : _a.setFocusedAndActiveItem(this, true, false);\n  }\n  expandIndicatorClick() {\n    if (this.disabled) {\n      return;\n    }\n    if (this.expanded) {\n      this.collapseWithEvent();\n    } else {\n      this.expandWithEvent();\n    }\n  }\n  selectorClick(event) {\n    var _a, _b, _c;\n    event.preventDefault();\n    if (event.shiftKey) {\n      (_a = this.selectionService) === null || _a === void 0 ? void 0 : _a.selectMultipleItems(this);\n      return;\n    }\n    if (this.selected) {\n      (_b = this.selectionService) === null || _b === void 0 ? void 0 : _b.deselectItem(this);\n    } else {\n      (_c = this.selectionService) === null || _c === void 0 ? void 0 : _c.selectItem(this);\n    }\n  }\n  onFocus() {\n    var _a, _b, _c;\n    if (this.disabled) {\n      return;\n    }\n    if (((_a = this.navService) === null || _a === void 0 ? void 0 : _a.focusedItem) !== this) {\n      (_b = this.navService) === null || _b === void 0 ? void 0 : _b.focusItem(this, false);\n      (_c = this.wrapper) === null || _c === void 0 ? void 0 : _c.scrollIntoView({\n        behavior: 'smooth',\n        block: 'nearest',\n        inline: 'nearest'\n      });\n    }\n    if (this.tabbableEl && this.tabbableEl.length) {\n      this.tabbableEl.forEach(element => {\n        element.tabIndex = 0;\n      });\n      this.focusedProgrammatically = true;\n      this.tabbableEl[0].focus();\n      return;\n    }\n    this.isFocused = true;\n  }\n  onBlur() {\n    this.isFocused = false;\n  }\n  onFocusIn(ev) {\n    var _a;\n    ev === null || ev === void 0 ? void 0 : ev.stopPropagation();\n    if (!this.disabled) {\n      if (!this.focusedProgrammatically) {\n        (_a = this.tabbableEl) === null || _a === void 0 ? void 0 : _a.forEach(element => {\n          element.tabIndex = 0;\n        });\n      }\n      this.removeAttribute('tabIndex');\n      this.isFocused = true;\n      this.focusedProgrammatically = false;\n    }\n  }\n  onFocusOut(ev) {\n    var _a, _b;\n    ev === null || ev === void 0 ? void 0 : ev.stopPropagation();\n    this.isFocused = false;\n    (_a = this.tabbableEl) === null || _a === void 0 ? void 0 : _a.forEach(element => {\n      element.tabIndex = -1;\n    });\n    if (((_b = this.navService) === null || _b === void 0 ? void 0 : _b.focusedItem) === this) {\n      this.setAttribute('tabindex', '0');\n    }\n  }\n  labelChange() {\n    const firstElement = this.contentList[0];\n    const tabbableSelector = 'a[href], button, input, textarea, select, details, [tabindex]:not([tabindex=\"-1\"])';\n    this.tabbableEl = [...firstElement.querySelectorAll(tabbableSelector)];\n    if (firstElement.matches(tabbableSelector)) {\n      this.tabbableEl.splice(0, 0, firstElement);\n    }\n    if (this.tabbableEl && this.tabbableEl.length) {\n      this.setAttribute('role', 'none');\n      this.tabbableEl[0].setAttribute('role', 'treeitem');\n      this.tabbableEl.forEach(element => {\n        element.tabIndex = -1;\n      });\n    } else {\n      this.setAttribute('role', 'treeitem');\n    }\n  }\n  handleChange() {\n    var _a;\n    this.hasChildren = !!this.directChildren.length;\n    (_a = this.navService) === null || _a === void 0 ? void 0 : _a.update_visible_cache(this, this.expanded, false);\n  }\n  getChildren(options = {\n    flatten: false\n  }) {\n    if (options.flatten) {\n      return this.allChildren;\n    } else {\n      return this.directChildren;\n    }\n  }\n  expandWithEvent() {\n    var _a, _b, _c;\n    if (this.expanded) {\n      return;\n    }\n    const args = {\n      detail: this,\n      cancelable: true\n    };\n    const allowed = (_a = this.tree) === null || _a === void 0 ? void 0 : _a.emitEvent('igcItemExpanding', args);\n    if (!allowed) {\n      return;\n    }\n    if ((_b = this.tree) === null || _b === void 0 ? void 0 : _b.singleBranchExpand) {\n      const pathSet = new Set(this.path.splice(0, this.path.length - 1));\n      this.tree.items.forEach(item => {\n        if (!pathSet.has(item)) {\n          item.collapseWithEvent();\n        }\n      });\n    }\n    this.expanded = true;\n    (_c = this.tree) === null || _c === void 0 ? void 0 : _c.emitEvent('igcItemExpanded', {\n      detail: this\n    });\n  }\n  collapseWithEvent() {\n    var _a, _b;\n    if (!this.expanded) {\n      return;\n    }\n    const args = {\n      detail: this,\n      cancelable: true\n    };\n    const allowed = (_a = this.tree) === null || _a === void 0 ? void 0 : _a.emitEvent('igcItemCollapsing', args);\n    if (!allowed) {\n      return;\n    }\n    this.expanded = false;\n    (_b = this.tree) === null || _b === void 0 ? void 0 : _b.emitEvent('igcItemCollapsed', {\n      detail: this\n    });\n  }\n  toggle() {\n    this.expanded = !this.expanded;\n  }\n  expand() {\n    this.expanded = true;\n  }\n  collapse() {\n    this.expanded = false;\n  }\n  render() {\n    var _a, _b, _c;\n    const size = this.level * (this.tree ? sizeMultiplier[this.tree.size] : 1);\n    return html`\n      <div\n        id=\"wrapper\"\n        part=\"wrapper ${(_a = this.tree) === null || _a === void 0 ? void 0 : _a.size} ${partNameMap(this.parts)}\"\n      >\n        <div\n          style=\"width: calc(${size} * var(--igc-tree-indentation-size))\"\n          part=\"indentation\"\n          aria-hidden=\"true\"\n        >\n          <slot name=\"indentation\"></slot>\n        </div>\n        <div part=\"indicator\" aria-hidden=\"true\">\n          ${this.loading ? html`\n                <slot name=\"loading\">\n                  <igc-circular-progress indeterminate></igc-circular-progress>\n                </slot>\n              ` : html`\n                <slot name=\"indicator\" @click=${this.expandIndicatorClick}>\n                  ${this.hasChildren ? html`\n                        <igc-icon\n                          name=${this.expanded ? 'keyboard_arrow_down' : ((_b = this.tree) === null || _b === void 0 ? void 0 : _b.dir) === 'rtl' ? 'navigate_before' : 'keyboard_arrow_right'}\n                          collection=\"internal\"\n                        >\n                        </igc-icon>\n                      ` : ''}\n                </slot>\n              `}\n        </div>\n        ${((_c = this.tree) === null || _c === void 0 ? void 0 : _c.selection) !== 'none' ? html`\n              <div part=\"select\" aria-hidden=\"true\">\n                <igc-checkbox\n                  @click=${this.selectorClick}\n                  .checked=${this.selected}\n                  .indeterminate=${this.indeterminate}\n                  .disabled=${this.disabled}\n                  tabindex=\"-1\"\n                >\n                </igc-checkbox>\n              </div>\n            ` : ''}\n        <div part=\"label\">\n          <slot\n            name=\"label\"\n            @slotchange=${this.labelChange}\n            @focusin=${this.onFocusIn}\n            @focusout=${this.onFocusOut}\n          >\n            <span part=\"text\">${this.label}</span>\n          </slot>\n        </div>\n      </div>\n      <div role=\"group\">\n        <slot @slotchange=${this.handleChange} ?hidden=${!this.expanded}></slot>\n      </div>\n    `;\n  }\n};\nIgcTreeItemComponent.tagName = 'igc-tree-item';\nIgcTreeItemComponent.styles = styles;\n__decorate([blazorSuppress()], IgcTreeItemComponent.prototype, \"tree\", void 0);\n__decorate([blazorSuppress()], IgcTreeItemComponent.prototype, \"init\", void 0);\n__decorate([queryAssignedElements({\n  slot: 'label',\n  flatten: true\n})], IgcTreeItemComponent.prototype, \"contentList\", void 0);\n__decorate([query('#wrapper'), blazorSuppress()], IgcTreeItemComponent.prototype, \"wrapper\", void 0);\n__decorate([state()], IgcTreeItemComponent.prototype, \"isFocused\", void 0);\n__decorate([state(), blazorSuppress()], IgcTreeItemComponent.prototype, \"hasChildren\", void 0);\n__decorate([state()], IgcTreeItemComponent.prototype, \"level\", void 0);\n__decorate([state(), blazorSuppress()], IgcTreeItemComponent.prototype, \"indeterminate\", void 0);\n__decorate([property()], IgcTreeItemComponent.prototype, \"label\", void 0);\n__decorate([property({\n  reflect: true,\n  type: Boolean\n})], IgcTreeItemComponent.prototype, \"expanded\", void 0);\n__decorate([property({\n  reflect: true,\n  type: Boolean\n})], IgcTreeItemComponent.prototype, \"active\", void 0);\n__decorate([property({\n  reflect: true,\n  type: Boolean\n})], IgcTreeItemComponent.prototype, \"disabled\", void 0);\n__decorate([property({\n  reflect: true,\n  type: Boolean\n})], IgcTreeItemComponent.prototype, \"selected\", void 0);\n__decorate([property({\n  reflect: true,\n  type: Boolean\n})], IgcTreeItemComponent.prototype, \"loading\", void 0);\n__decorate([property({\n  attribute: true\n})], IgcTreeItemComponent.prototype, \"value\", void 0);\n__decorate([watch('expanded', {\n  waitUntilFirstUpdate: true\n}), watch('hasChildren', {\n  waitUntilFirstUpdate: true\n})], IgcTreeItemComponent.prototype, \"bothChange\", null);\n__decorate([watch('expanded')], IgcTreeItemComponent.prototype, \"expandedChange\", null);\n__decorate([watch('active', {\n  waitUntilFirstUpdate: true\n})], IgcTreeItemComponent.prototype, \"activeChange\", null);\n__decorate([watch('disabled')], IgcTreeItemComponent.prototype, \"disabledChange\", null);\n__decorate([watch('selected', {\n  waitUntilFirstUpdate: true\n})], IgcTreeItemComponent.prototype, \"selectedChange\", null);\n__decorate([blazorSuppress()], IgcTreeItemComponent.prototype, \"getChildren\", null);\nIgcTreeItemComponent = __decorate([themes({\n  bootstrap,\n  fluent,\n  indigo\n})], IgcTreeItemComponent);\nexport default IgcTreeItemComponent;","map":{"version":3,"names":["property","query","queryAssignedElements","state","html","LitElement","partNameMap","styles","bootstrap","fluent","indigo","watch","themes","blazorSuppress","defineComponents","IgcIconComponent","IgcCheckboxComponent","IgcCircularProgressComponent","sizeMultiplier","small","medium","large","IgcTreeItemComponent","constructor","focusedProgrammatically","parent","init","isFocused","hasChildren","level","indeterminate","label","expanded","active","disabled","selected","loading","value","undefined","bothChange","setAttribute","toString","removeAttribute","expandedChange","oldValue","_a","navService","update_visible_cache","Promise","resolve","then","focusedItem","_d","_c","_b","wrapper","scrollIntoView","behavior","block","inline","activeChange","activeItem","setActiveItem","tree","expandToItem","disabledChange","update_disabled_cache","selectedChange","selectionService","isItemSelected","selectItemsWithNoEvent","deselectItemsWithNoEvent","connectedCallback","closest","parentElement","tagName","toLowerCase","addEventListener","onBlur","onFocus","pointerDown","retriggerItemState","disconnectedCallback","ensureStateOnItemDelete","delete_item","parts","focused","directChildren","Array","from","children","filter","x","allChildren","querySelectorAll","path","event","stopPropagation","tabIndex","setFocusedAndActiveItem","expandIndicatorClick","collapseWithEvent","expandWithEvent","selectorClick","preventDefault","shiftKey","selectMultipleItems","deselectItem","selectItem","focusItem","tabbableEl","length","forEach","element","focus","onFocusIn","ev","onFocusOut","labelChange","firstElement","contentList","tabbableSelector","matches","splice","handleChange","getChildren","options","flatten","args","detail","cancelable","allowed","emitEvent","singleBranchExpand","pathSet","Set","items","item","has","toggle","expand","collapse","render","size","dir","selection","__decorate","slot","reflect","type","Boolean","attribute","waitUntilFirstUpdate"],"sources":["../../../src/components/tree/tree-item.ts"],"sourcesContent":["import {\n  property,\n  query,\n  queryAssignedElements,\n  state,\n} from 'lit/decorators.js';\nimport { html, LitElement } from 'lit';\nimport { partNameMap } from '../common/util.js';\nimport { styles } from './themes/light/tree-item.base.css.js';\nimport { styles as bootstrap } from './themes/light/tree-item.bootstrap.css.js';\nimport { styles as fluent } from './themes/light/tree-item.fluent.css.js';\nimport { styles as indigo } from './themes/light/tree-item.indigo.css.js';\nimport type IgcTreeComponent from './tree.js';\nimport { watch } from '../common/decorators/watch.js';\nimport { IgcTreeSelectionService } from './tree.selection.js';\nimport { IgcTreeNavigationService } from './tree.navigation.js';\nimport { themes } from '../../theming/theming-decorator.js';\nimport { blazorSuppress } from '../common/decorators/blazorSuppress.js';\n\nimport { defineComponents } from '../common/definitions/defineComponents.js';\nimport IgcIconComponent from '../icon/icon.js';\nimport IgcCheckboxComponent from '../checkbox/checkbox.js';\nimport IgcCircularProgressComponent from '../progress/circular-progress.js';\n\ndefineComponents(\n  IgcIconComponent,\n  IgcCheckboxComponent,\n  IgcCircularProgressComponent\n);\n\nconst sizeMultiplier: Record<'small' | 'medium' | 'large', number> = {\n  small: 1 / 2,\n  medium: 2 / 3,\n  large: 1,\n};\n\n/**\n * The tree-item component represents a child item of the tree component or another tree item.\n *\n * @element igc-tree-item\n *\n * @slot - Renders nested tree-item component.\n * @slot label - Renders the tree item container.\n * @slot indicator - Renders the expand indicator container.\n * @slot loading - Renders the tree item loading indicator container.\n * @slot indentation - Renders the container (by default the space) before the tree item.\n *\n * @csspart wrapper - The wrapper for the tree item.\n * @csspart selected - Indicates selected state. Applies to `wrapper`.\n * @csspart focused - Indicates focused state. Applies to `wrapper`.\n * @csspart active - Indicates an active state. Applies to `wrapper`.\n * @csspart indicator - The expand indicator of the tree item.\n * @csspart label - The tree item content.\n * @csspart text - The tree item displayed text.\n * @csspart select - The checkbox of the tree item when selection is enabled.\n */\n@themes({ bootstrap, fluent, indigo })\nexport default class IgcTreeItemComponent extends LitElement {\n  /** @private */\n  public static readonly tagName = 'igc-tree-item';\n  /** @private */\n  public static override styles = styles;\n\n  private tabbableEl?: HTMLElement[];\n  private focusedProgrammatically = false;\n\n  /** A reference to the tree the item is a part of. */\n  @blazorSuppress()\n  public tree?: IgcTreeComponent;\n  /** The parent item of the current tree item (if any) */\n  public parent: IgcTreeItemComponent | null = null;\n\n  /** @private */\n  @blazorSuppress()\n  public init = false;\n\n  @queryAssignedElements({ slot: 'label', flatten: true })\n  private contentList!: Array<HTMLElement>;\n\n  /** @private */\n  @query('#wrapper')\n  @blazorSuppress()\n  public wrapper!: HTMLElement;\n\n  @state()\n  private isFocused = false;\n\n  /** @private */\n  @state()\n  @blazorSuppress()\n  public hasChildren = false;\n\n  /** The depth of the item, relative to the root. */\n  @state()\n  public level = 0;\n\n  /** @private */\n  @state()\n  @blazorSuppress()\n  public indeterminate = false;\n\n  /**\n   * The tree item label.\n   * @attr\n   */\n  @property()\n  public label = '';\n\n  /**\n   * The tree item expansion state.\n   * @attr\n   */\n  @property({ reflect: true, type: Boolean })\n  public expanded = false;\n\n  /**\n   * Marks the item as the tree's active item.\n   * @attr\n   */\n  @property({ reflect: true, type: Boolean })\n  public active = false;\n\n  /**\n   * Get/Set whether the tree item is disabled. Disabled items are ignored for user interactions.\n   * @attr\n   */\n  @property({ reflect: true, type: Boolean })\n  public disabled = false;\n\n  /**\n   * The tree item selection state.\n   * @attr\n   */\n  @property({ reflect: true, type: Boolean })\n  public selected = false;\n\n  /**\n   * To be used for load-on-demand scenarios in order to specify whether the item is loading data.\n   * @attr\n   */\n  @property({ reflect: true, type: Boolean })\n  public loading = false;\n\n  /**\n   * The value entry that the tree item is visualizing. Required for searching through items.\n   * @type any\n   * @attr\n   */\n  @property({ attribute: true })\n  public value: any = undefined;\n\n  @watch('expanded', { waitUntilFirstUpdate: true })\n  @watch('hasChildren', { waitUntilFirstUpdate: true })\n  protected bothChange(): void {\n    if (this.hasChildren) {\n      this.setAttribute('aria-expanded', this.expanded.toString());\n    } else {\n      this.removeAttribute('aria-expanded');\n    }\n  }\n\n  @watch('expanded')\n  protected expandedChange(oldValue: boolean): void {\n    // always update the visible cache\n    this.navService?.update_visible_cache(this, this.expanded);\n    if (!oldValue) {\n      return;\n    }\n    // await for load on demand children\n    Promise.resolve().then(() => {\n      if (this.navService?.focusedItem !== this && !this.isFocused) {\n        this.navService?.focusedItem?.wrapper?.scrollIntoView({\n          behavior: 'smooth',\n          block: 'nearest',\n          inline: 'nearest',\n        });\n      }\n    });\n  }\n\n  @watch('active', { waitUntilFirstUpdate: true })\n  protected activeChange(): void {\n    if ((this.active && this.navService?.activeItem === this) || !this.active) {\n      return;\n    }\n    if (this.navService) {\n      this.navService.setActiveItem(this, false);\n    }\n    // Expand and scroll to the newly active item\n    this.tree?.expandToItem(this);\n    // Await for expanding\n    Promise.resolve().then(() => {\n      this.wrapper?.scrollIntoView({\n        behavior: 'smooth',\n        block: 'nearest',\n        inline: 'nearest',\n      });\n    });\n  }\n\n  @watch('disabled')\n  protected disabledChange(): void {\n    this.navService?.update_disabled_cache(this);\n  }\n\n  @watch('selected', { waitUntilFirstUpdate: true })\n  protected selectedChange(): void {\n    if (this.selected && !this.selectionService?.isItemSelected(this)) {\n      this.selectionService?.selectItemsWithNoEvent([this]);\n    }\n    if (!this.selected && this.selectionService?.isItemSelected(this)) {\n      this.selectionService?.deselectItemsWithNoEvent([this]);\n    }\n  }\n\n  public override connectedCallback(): void {\n    super.connectedCallback();\n    this.tree = this.closest('igc-tree') as IgcTreeComponent;\n    this.parent =\n      this.parentElement?.tagName.toLowerCase() === 'igc-tree-item'\n        ? (this.parentElement as IgcTreeItemComponent)\n        : null;\n    this.level = this.parent ? this.parent.level + 1 : 0;\n    this.setAttribute('role', 'treeitem');\n    this.addEventListener('blur', this.onBlur);\n    this.addEventListener('focus', this.onFocus);\n    this.addEventListener('pointerdown', this.pointerDown);\n    this.activeChange();\n    // if the item is not added/moved runtime\n    if (this.init) {\n      this.selectedChange();\n    } else {\n      // retriger the item selection state in order to update the collections within the selectionService\n      // and to handle correctly the itemParents recursively to the top-most ancestor\n      this.selectionService?.retriggerItemState(this);\n    }\n    this.init = false;\n  }\n\n  public override disconnectedCallback(): void {\n    super.disconnectedCallback();\n    this.selectionService?.ensureStateOnItemDelete(this);\n    this.navService?.delete_item(this);\n  }\n\n  private get selectionService(): IgcTreeSelectionService | undefined {\n    return this.tree?.selectionService;\n  }\n\n  private get navService(): IgcTreeNavigationService | undefined {\n    return this.tree?.navService;\n  }\n\n  private get parts() {\n    return {\n      selected: this.selected,\n      focused: this.isFocused,\n      active: this.active,\n    };\n  }\n\n  private get directChildren(): Array<IgcTreeItemComponent> {\n    return Array.from(this.children).filter(\n      (x) => x.tagName.toLowerCase() === 'igc-tree-item'\n    ) as IgcTreeItemComponent[];\n  }\n\n  private get allChildren(): Array<IgcTreeItemComponent> {\n    return Array.from(this.querySelectorAll(`igc-tree-item`));\n  }\n\n  /** The full path to the tree item, starting from the top-most ancestor. */\n  public get path(): IgcTreeItemComponent[] {\n    return this.parent?.path ? [...this.parent.path, this] : [this];\n  }\n\n  private pointerDown(event: MouseEvent): void {\n    event.stopPropagation();\n    if (this.disabled) {\n      return;\n    }\n    this.tabIndex = 0;\n    this.navService?.setFocusedAndActiveItem(this, true, false);\n  }\n\n  private expandIndicatorClick(): void {\n    if (this.disabled) {\n      return;\n    }\n    if (this.expanded) {\n      this.collapseWithEvent();\n    } else {\n      this.expandWithEvent();\n    }\n  }\n\n  private selectorClick(event: MouseEvent): void {\n    event.preventDefault();\n    if (event.shiftKey) {\n      this.selectionService?.selectMultipleItems(this);\n      return;\n    }\n    if (this.selected) {\n      this.selectionService?.deselectItem(this);\n    } else {\n      this.selectionService?.selectItem(this);\n    }\n  }\n\n  private onFocus(): void {\n    if (this.disabled) {\n      return;\n    }\n    if (this.navService?.focusedItem !== this) {\n      this.navService?.focusItem(this, false);\n      this.wrapper?.scrollIntoView({\n        behavior: 'smooth',\n        block: 'nearest',\n        inline: 'nearest',\n      });\n    }\n    if (this.tabbableEl && this.tabbableEl.length) {\n      // set tabIndex = 0 to all tabbable elements\n      // focus the first one\n      this.tabbableEl.forEach((element: HTMLElement) => {\n        element.tabIndex = 0;\n      });\n      this.focusedProgrammatically = true;\n      this.tabbableEl[0].focus();\n      return;\n    }\n    this.isFocused = true;\n  }\n\n  private onBlur(): void {\n    this.isFocused = false;\n  }\n\n  private onFocusIn(ev: Event): void {\n    ev?.stopPropagation();\n    if (!this.disabled) {\n      // clicking directly over tabbable element when the item is not focused\n      if (!this.focusedProgrammatically) {\n        this.tabbableEl?.forEach((element: HTMLElement) => {\n          element.tabIndex = 0;\n        });\n      }\n      this.removeAttribute('tabIndex');\n      this.isFocused = true;\n      this.focusedProgrammatically = false;\n    }\n  }\n\n  private onFocusOut(ev: Event): void {\n    ev?.stopPropagation();\n    this.isFocused = false;\n    this.tabbableEl?.forEach((element: HTMLElement) => {\n      element.tabIndex = -1;\n    });\n\n    if (this.navService?.focusedItem === this) {\n      // called twice when clicking on already focused item with link (pointerDown handler)\n      this.setAttribute('tabindex', '0');\n    }\n  }\n\n  private labelChange(): void {\n    const firstElement = this.contentList[0];\n    const tabbableSelector =\n      'a[href], button, input, textarea, select, details, [tabindex]:not([tabindex=\"-1\"])';\n\n    this.tabbableEl = [\n      ...firstElement.querySelectorAll<HTMLElement>(tabbableSelector),\n    ];\n    if (firstElement.matches(tabbableSelector)) {\n      this.tabbableEl.splice(0, 0, firstElement);\n    }\n\n    if (this.tabbableEl && this.tabbableEl.length) {\n      this.setAttribute('role', 'none');\n      this.tabbableEl[0].setAttribute('role', 'treeitem');\n\n      this.tabbableEl.forEach((element: HTMLElement) => {\n        element.tabIndex = -1;\n      });\n    } else {\n      this.setAttribute('role', 'treeitem');\n    }\n  }\n\n  private handleChange(): void {\n    this.hasChildren = !!this.directChildren.length;\n    // there is no need to update nested children beacuse they're state is already up to date\n    this.navService?.update_visible_cache(this, this.expanded, false);\n  }\n\n  /**\n   * Returns a collection of child items.\n   * If the parameter value is true returns all tree item's direct children,\n   * otherwise - only the direct children.\n   */\n  @blazorSuppress()\n  public getChildren(\n    options: { flatten: boolean } = { flatten: false }\n  ): IgcTreeItemComponent[] {\n    if (options.flatten) {\n      return this.allChildren;\n    } else {\n      return this.directChildren;\n    }\n  }\n\n  /**\n   * @private\n   * Expands the tree item.\n   */\n  public expandWithEvent(): void {\n    if (this.expanded) {\n      return;\n    }\n    const args = {\n      detail: this,\n      cancelable: true,\n    };\n\n    const allowed = this.tree?.emitEvent('igcItemExpanding', args);\n\n    if (!allowed) {\n      return;\n    }\n\n    if (this.tree?.singleBranchExpand) {\n      const pathSet = new Set(this.path.splice(0, this.path.length - 1));\n      this.tree.items.forEach((item: IgcTreeItemComponent) => {\n        if (!pathSet.has(item)) {\n          item.collapseWithEvent();\n        }\n      });\n    }\n\n    this.expanded = true;\n    this.tree?.emitEvent('igcItemExpanded', { detail: this });\n  }\n\n  /**\n   * @private\n   * Collapses the tree item.\n   */\n  public collapseWithEvent(): void {\n    if (!this.expanded) {\n      return;\n    }\n    const args = {\n      detail: this,\n      cancelable: true,\n    };\n\n    const allowed = this.tree?.emitEvent('igcItemCollapsing', args);\n\n    if (!allowed) {\n      return;\n    }\n    this.expanded = false;\n    this.tree?.emitEvent('igcItemCollapsed', { detail: this });\n  }\n\n  /** Toggles tree item expansion state. */\n  public toggle(): void {\n    this.expanded = !this.expanded;\n  }\n\n  /** Expands the tree item. */\n  public expand(): void {\n    this.expanded = true;\n  }\n\n  /** Collapses the tree item. */\n  public collapse(): void {\n    this.expanded = false;\n  }\n\n  protected override render() {\n    const size = this.level * (this.tree ? sizeMultiplier[this.tree!.size] : 1);\n\n    return html`\n      <div\n        id=\"wrapper\"\n        part=\"wrapper ${this.tree?.size} ${partNameMap(this.parts)}\"\n      >\n        <div\n          style=\"width: calc(${size} * var(--igc-tree-indentation-size))\"\n          part=\"indentation\"\n          aria-hidden=\"true\"\n        >\n          <slot name=\"indentation\"></slot>\n        </div>\n        <div part=\"indicator\" aria-hidden=\"true\">\n          ${this.loading\n            ? html`\n                <slot name=\"loading\">\n                  <igc-circular-progress indeterminate></igc-circular-progress>\n                </slot>\n              `\n            : html`\n                <slot name=\"indicator\" @click=${this.expandIndicatorClick}>\n                  ${this.hasChildren\n                    ? html`\n                        <igc-icon\n                          name=${this.expanded\n                            ? 'keyboard_arrow_down'\n                            : this.tree?.dir === 'rtl'\n                            ? 'navigate_before'\n                            : 'keyboard_arrow_right'}\n                          collection=\"internal\"\n                        >\n                        </igc-icon>\n                      `\n                    : ''}\n                </slot>\n              `}\n        </div>\n        ${this.tree?.selection !== 'none'\n          ? html`\n              <div part=\"select\" aria-hidden=\"true\">\n                <igc-checkbox\n                  @click=${this.selectorClick}\n                  .checked=${this.selected}\n                  .indeterminate=${this.indeterminate}\n                  .disabled=${this.disabled}\n                  tabindex=\"-1\"\n                >\n                </igc-checkbox>\n              </div>\n            `\n          : ''}\n        <div part=\"label\">\n          <slot\n            name=\"label\"\n            @slotchange=${this.labelChange}\n            @focusin=${this.onFocusIn}\n            @focusout=${this.onFocusOut}\n          >\n            <span part=\"text\">${this.label}</span>\n          </slot>\n        </div>\n      </div>\n      <div role=\"group\">\n        <slot @slotchange=${this.handleChange} ?hidden=${!this.expanded}></slot>\n      </div>\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'igc-tree-item': IgcTreeItemComponent;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}