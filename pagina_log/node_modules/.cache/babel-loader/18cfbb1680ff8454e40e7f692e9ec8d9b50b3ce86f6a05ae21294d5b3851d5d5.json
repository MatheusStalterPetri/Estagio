{"ast":null,"code":"export const NAVIGATION_KEYS = new Set(['down', 'up', 'left', 'right', 'arrowdown', 'arrowup', 'arrowleft', 'arrowright', 'home', 'end', 'space', 'spacebar', ' ']);\nexport class IgcTreeNavigationService {\n  constructor(tree, selectionService) {\n    this._focusedItem = null;\n    this._lastFocusedItem = null;\n    this._activeItem = null;\n    this._visibleChildren = [];\n    this._invisibleChildren = new Set();\n    this._disabledChildren = new Set();\n    this.tree = tree;\n    this.selectionService = selectionService;\n  }\n  updateVisChild() {\n    var _a;\n    this._visibleChildren = ((_a = this.tree) === null || _a === void 0 ? void 0 : _a.items) ? this.tree.items.filter(i => !(this._invisibleChildren.has(i) || this._disabledChildren.has(i))) : [];\n  }\n  get focusedItem() {\n    return this._focusedItem;\n  }\n  focusItem(value, shouldFocus = true) {\n    var _a;\n    if (this._focusedItem === value) {\n      return;\n    }\n    this._lastFocusedItem = this._focusedItem;\n    if (this._lastFocusedItem) {\n      this._lastFocusedItem.removeAttribute('tabindex');\n    }\n    this._focusedItem = value;\n    if (this._focusedItem !== null && shouldFocus) {\n      this._focusedItem.tabIndex = 0;\n      this._focusedItem.focus({\n        preventScroll: true\n      });\n      (_a = this._focusedItem.wrapper) === null || _a === void 0 ? void 0 : _a.scrollIntoView({\n        behavior: 'smooth',\n        block: 'nearest',\n        inline: 'nearest'\n      });\n    }\n  }\n  get activeItem() {\n    return this._activeItem;\n  }\n  setActiveItem(value, shouldEmit = true) {\n    if (this._activeItem === value) {\n      return;\n    }\n    if (this._activeItem && value) {\n      this._activeItem.active = false;\n    }\n    this._activeItem = value;\n    if (this._activeItem) {\n      this._activeItem.active = true;\n    }\n    if (shouldEmit && this._activeItem) {\n      this.tree.emitEvent('igcActiveItem', {\n        detail: this._activeItem\n      });\n    }\n  }\n  get visibleChildren() {\n    return this._visibleChildren;\n  }\n  update_disabled_cache(item) {\n    if (item.disabled) {\n      this._disabledChildren.add(item);\n    } else {\n      this._disabledChildren.delete(item);\n    }\n    this.updateVisChild();\n  }\n  delete_item(item) {\n    if (this.activeItem === item) {\n      this.setActiveItem(null);\n    }\n    if (this.focusedItem === item) {\n      this.focusItem(null, false);\n      const firstNotDisableItem = this.tree.items.find(i => !i.disabled);\n      if (firstNotDisableItem) {\n        firstNotDisableItem.tabIndex = 0;\n        this.focusItem(firstNotDisableItem, false);\n      }\n    }\n  }\n  update_visible_cache(item, expanded, shouldUpdateNestedChildren = true, shouldUpdate = true) {\n    var _a, _b;\n    if (expanded && !this._invisibleChildren.has(item)) {\n      (_a = item.getChildren()) === null || _a === void 0 ? void 0 : _a.forEach(child => {\n        this._invisibleChildren.delete(child);\n        if (shouldUpdateNestedChildren) {\n          this.update_visible_cache(child, child.expanded, true, false);\n        }\n      });\n    } else {\n      (_b = item.getChildren({\n        flatten: true\n      })) === null || _b === void 0 ? void 0 : _b.forEach(c => this._invisibleChildren.add(c));\n    }\n    if (shouldUpdate) {\n      this.updateVisChild();\n    }\n  }\n  setFocusedAndActiveItem(item, isActive = true, shouldFocus = true) {\n    if (isActive) {\n      this.setActiveItem(item);\n    }\n    this.focusItem(item, shouldFocus);\n  }\n  handleKeydown(event) {\n    const key = event.key.toLowerCase();\n    if (!this.focusedItem) {\n      return;\n    }\n    if (!(NAVIGATION_KEYS.has(key) || key === '*')) {\n      if (key === 'enter') {\n        this.setActiveItem(this.focusedItem);\n      }\n      return;\n    }\n    event.preventDefault();\n    this.handleNavigation(event);\n  }\n  handleNavigation(event) {\n    switch (event.key.toLowerCase()) {\n      case 'home':\n        this.setFocusedAndActiveItem(this.visibleChildren[0]);\n        break;\n      case 'end':\n        this.setFocusedAndActiveItem(this.visibleChildren[this.visibleChildren.length - 1]);\n        break;\n      case 'arrowleft':\n      case 'left':\n        if (this.tree.dir === 'rtl') {\n          this.handleArrowRight();\n        } else {\n          this.handleArrowLeft();\n        }\n        break;\n      case 'arrowright':\n      case 'right':\n        if (this.tree.dir === 'rtl') {\n          this.handleArrowLeft();\n        } else {\n          this.handleArrowRight();\n        }\n        break;\n      case 'arrowup':\n      case 'up':\n        this.handleUpDownArrow(true, event);\n        break;\n      case 'arrowdown':\n      case 'down':\n        this.handleUpDownArrow(false, event);\n        break;\n      case '*':\n        this.handleAsterisk();\n        break;\n      case ' ':\n      case 'spacebar':\n      case 'space':\n        this.handleSpace(event.shiftKey);\n        break;\n      default:\n        return;\n    }\n  }\n  handleArrowLeft() {\n    var _a, _b, _c;\n    if (((_a = this.focusedItem) === null || _a === void 0 ? void 0 : _a.expanded) && ((_b = this.focusedItem.getChildren()) === null || _b === void 0 ? void 0 : _b.length)) {\n      this.setActiveItem(this.focusedItem);\n      this.focusedItem.collapseWithEvent();\n    } else {\n      const parentItem = (_c = this.focusedItem) === null || _c === void 0 ? void 0 : _c.parent;\n      if (parentItem && !parentItem.disabled) {\n        this.setFocusedAndActiveItem(parentItem);\n      }\n    }\n  }\n  handleArrowRight() {\n    var _a, _b;\n    if (((_a = this.focusedItem.getChildren()) === null || _a === void 0 ? void 0 : _a.length) > 0) {\n      if (!((_b = this.focusedItem) === null || _b === void 0 ? void 0 : _b.expanded)) {\n        this.setActiveItem(this.focusedItem);\n        this.focusedItem.expandWithEvent();\n      } else {\n        const firstChild = this.focusedItem.getChildren().find(item => !item.disabled);\n        if (firstChild) {\n          this.setFocusedAndActiveItem(firstChild);\n        }\n      }\n    }\n  }\n  handleUpDownArrow(isUp, event) {\n    const next = this.getVisibleItem(this.focusedItem, isUp ? -1 : 1);\n    if (next === this.focusedItem) {\n      return;\n    }\n    if (event.ctrlKey) {\n      this.setFocusedAndActiveItem(next, false);\n    } else {\n      this.setFocusedAndActiveItem(next);\n    }\n  }\n  handleAsterisk() {\n    var _a, _b, _c;\n    const items = ((_a = this.focusedItem) === null || _a === void 0 ? void 0 : _a.parent) ? (_b = this.focusedItem.parent) === null || _b === void 0 ? void 0 : _b.getChildren() : (_c = this.tree.items) === null || _c === void 0 ? void 0 : _c.filter(item => item.level === 0);\n    items === null || items === void 0 ? void 0 : items.forEach(item => {\n      if (!item.disabled && !item.expanded && item.hasChildren) {\n        item.expandWithEvent();\n      }\n    });\n  }\n  handleSpace(shiftKey = false) {\n    if (this.tree.selection === 'none') {\n      this.setActiveItem(this.focusedItem);\n      return;\n    }\n    this.setActiveItem(this.focusedItem);\n    if (shiftKey) {\n      this.selectionService.selectMultipleItems(this.focusedItem);\n      return;\n    }\n    if (this.focusedItem.selected) {\n      this.selectionService.deselectItem(this.focusedItem);\n    } else {\n      this.selectionService.selectItem(this.focusedItem);\n    }\n  }\n  getVisibleItem(item, dir = 1) {\n    const itemIndex = this.visibleChildren.indexOf(item);\n    return this.visibleChildren[itemIndex + dir] || item;\n  }\n}","map":{"version":3,"names":["NAVIGATION_KEYS","Set","IgcTreeNavigationService","constructor","tree","selectionService","_focusedItem","_lastFocusedItem","_activeItem","_visibleChildren","_invisibleChildren","_disabledChildren","updateVisChild","_a","items","filter","i","has","focusedItem","focusItem","value","shouldFocus","removeAttribute","tabIndex","focus","preventScroll","wrapper","scrollIntoView","behavior","block","inline","activeItem","setActiveItem","shouldEmit","active","emitEvent","detail","visibleChildren","update_disabled_cache","item","disabled","add","delete","delete_item","firstNotDisableItem","find","update_visible_cache","expanded","shouldUpdateNestedChildren","shouldUpdate","getChildren","forEach","child","_b","flatten","c","setFocusedAndActiveItem","isActive","handleKeydown","event","key","toLowerCase","preventDefault","handleNavigation","length","dir","handleArrowRight","handleArrowLeft","handleUpDownArrow","handleAsterisk","handleSpace","shiftKey","collapseWithEvent","parentItem","_c","parent","expandWithEvent","firstChild","isUp","next","getVisibleItem","ctrlKey","level","hasChildren","selection","selectMultipleItems","selected","deselectItem","selectItem","itemIndex","indexOf"],"sources":["../../../src/components/tree/tree.navigation.ts"],"sourcesContent":["import IgcTreeComponent from './tree.js';\nimport IgcTreeItemComponent from './tree-item.js';\nimport { IgcTreeSelectionService } from './tree.selection.js';\n\nexport const NAVIGATION_KEYS = new Set([\n  'down',\n  'up',\n  'left',\n  'right',\n  'arrowdown',\n  'arrowup',\n  'arrowleft',\n  'arrowright',\n  'home',\n  'end',\n  'space',\n  'spacebar',\n  ' ',\n]);\n\nexport class IgcTreeNavigationService {\n  private tree!: IgcTreeComponent;\n  private selectionService!: IgcTreeSelectionService;\n\n  private _focusedItem: IgcTreeItemComponent | null = null;\n\n  private _lastFocusedItem: IgcTreeItemComponent | null = null;\n  private _activeItem: IgcTreeItemComponent | null = null;\n\n  private _visibleChildren: IgcTreeItemComponent[] = [];\n  private _invisibleChildren: Set<IgcTreeItemComponent> = new Set();\n  private _disabledChildren: Set<IgcTreeItemComponent> = new Set();\n\n  constructor(\n    tree: IgcTreeComponent,\n    selectionService: IgcTreeSelectionService\n  ) {\n    this.tree = tree;\n    this.selectionService = selectionService;\n  }\n\n  public updateVisChild(): void {\n    this._visibleChildren = this.tree?.items\n      ? this.tree.items.filter(\n          (i: IgcTreeItemComponent) =>\n            !(this._invisibleChildren.has(i) || this._disabledChildren.has(i))\n        )\n      : [];\n  }\n\n  public get focusedItem(): IgcTreeItemComponent | null {\n    return this._focusedItem;\n  }\n\n  public focusItem(value: IgcTreeItemComponent | null, shouldFocus = true) {\n    if (this._focusedItem === value) {\n      return;\n    }\n    this._lastFocusedItem = this._focusedItem;\n    if (this._lastFocusedItem) {\n      this._lastFocusedItem.removeAttribute('tabindex');\n    }\n    this._focusedItem = value;\n    if (this._focusedItem !== null && shouldFocus) {\n      this._focusedItem.tabIndex = 0;\n      this._focusedItem.focus({\n        preventScroll: true,\n      });\n      this._focusedItem.wrapper?.scrollIntoView({\n        behavior: 'smooth',\n        block: 'nearest',\n        inline: 'nearest',\n      });\n    }\n  }\n\n  public get activeItem(): IgcTreeItemComponent | null {\n    return this._activeItem;\n  }\n\n  public setActiveItem(value: IgcTreeItemComponent | null, shouldEmit = true) {\n    if (this._activeItem === value) {\n      return;\n    }\n    if (this._activeItem && value) {\n      this._activeItem.active = false;\n    }\n    this._activeItem = value;\n    if (this._activeItem) {\n      this._activeItem.active = true;\n    }\n    if (shouldEmit && this._activeItem) {\n      this.tree.emitEvent('igcActiveItem', { detail: this._activeItem });\n    }\n  }\n\n  public get visibleChildren(): IgcTreeItemComponent[] {\n    return this._visibleChildren;\n  }\n\n  public update_disabled_cache(item: IgcTreeItemComponent): void {\n    if (item.disabled) {\n      this._disabledChildren.add(item);\n    } else {\n      this._disabledChildren.delete(item);\n    }\n    this.updateVisChild();\n  }\n\n  public delete_item(item: IgcTreeItemComponent) {\n    if (this.activeItem === item) {\n      this.setActiveItem(null);\n    }\n    if (this.focusedItem === item) {\n      this.focusItem(null, false);\n      const firstNotDisableItem = this.tree.items.find(\n        (i: IgcTreeItemComponent) => !i.disabled\n      );\n      if (firstNotDisableItem) {\n        firstNotDisableItem.tabIndex = 0;\n        this.focusItem(firstNotDisableItem, false);\n      }\n    }\n  }\n\n  public update_visible_cache(\n    item: IgcTreeItemComponent,\n    expanded: boolean,\n    shouldUpdateNestedChildren = true,\n    shouldUpdate = true\n  ): void {\n    if (expanded && !this._invisibleChildren.has(item)) {\n      item.getChildren()?.forEach((child: IgcTreeItemComponent) => {\n        this._invisibleChildren.delete(child);\n        if (shouldUpdateNestedChildren) {\n          this.update_visible_cache(child, child.expanded, true, false);\n        }\n      });\n    } else {\n      item\n        .getChildren({ flatten: true })\n        ?.forEach((c: IgcTreeItemComponent) => this._invisibleChildren.add(c));\n    }\n\n    if (shouldUpdate) {\n      this.updateVisChild();\n    }\n  }\n\n  /**\n   * Sets the item as focused (and active)\n   *\n   * @param item target item\n   * @param isActive if true, sets the item as active\n   */\n  public setFocusedAndActiveItem(\n    item: IgcTreeItemComponent,\n    isActive = true,\n    shouldFocus = true\n  ): void {\n    if (isActive) {\n      this.setActiveItem(item);\n    }\n    this.focusItem(item, shouldFocus);\n  }\n\n  /** Handler for keydown events. Used in tree.component.ts */\n  public handleKeydown(event: KeyboardEvent) {\n    const key = event.key.toLowerCase();\n    if (!this.focusedItem) {\n      return;\n    }\n    if (!(NAVIGATION_KEYS.has(key) || key === '*')) {\n      if (key === 'enter') {\n        this.setActiveItem(this.focusedItem);\n      }\n      return;\n    }\n    event.preventDefault();\n    this.handleNavigation(event);\n  }\n\n  private handleNavigation(event: KeyboardEvent) {\n    switch (event.key.toLowerCase()) {\n      case 'home':\n        this.setFocusedAndActiveItem(this.visibleChildren[0]);\n        break;\n      case 'end':\n        this.setFocusedAndActiveItem(\n          this.visibleChildren[this.visibleChildren.length - 1]\n        );\n        break;\n      case 'arrowleft':\n      case 'left':\n        if (this.tree.dir === 'rtl') {\n          this.handleArrowRight();\n        } else {\n          this.handleArrowLeft();\n        }\n        break;\n      case 'arrowright':\n      case 'right':\n        if (this.tree.dir === 'rtl') {\n          this.handleArrowLeft();\n        } else {\n          this.handleArrowRight();\n        }\n        break;\n      case 'arrowup':\n      case 'up':\n        this.handleUpDownArrow(true, event);\n        break;\n      case 'arrowdown':\n      case 'down':\n        this.handleUpDownArrow(false, event);\n        break;\n      case '*':\n        this.handleAsterisk();\n        break;\n      case ' ':\n      case 'spacebar':\n      case 'space':\n        this.handleSpace(event.shiftKey);\n        break;\n      default:\n        return;\n    }\n  }\n\n  private handleArrowLeft(): void {\n    if (this.focusedItem?.expanded && this.focusedItem.getChildren()?.length) {\n      this.setActiveItem(this.focusedItem);\n      this.focusedItem.collapseWithEvent();\n    } else {\n      const parentItem = this.focusedItem?.parent;\n      if (parentItem && !parentItem.disabled) {\n        this.setFocusedAndActiveItem(parentItem);\n      }\n    }\n  }\n\n  private handleArrowRight(): void {\n    if (this.focusedItem!.getChildren()?.length > 0) {\n      if (!this.focusedItem?.expanded) {\n        this.setActiveItem(this.focusedItem);\n        this.focusedItem!.expandWithEvent();\n      } else {\n        const firstChild = this.focusedItem\n          .getChildren()\n          .find((item: IgcTreeItemComponent) => !item.disabled);\n        if (firstChild) {\n          this.setFocusedAndActiveItem(firstChild);\n        }\n      }\n    }\n  }\n\n  private handleUpDownArrow(isUp: boolean, event: KeyboardEvent): void {\n    const next = this.getVisibleItem(this.focusedItem!, isUp ? -1 : 1);\n    if (next === this.focusedItem) {\n      return;\n    }\n\n    if (event.ctrlKey) {\n      this.setFocusedAndActiveItem(next, false);\n    } else {\n      this.setFocusedAndActiveItem(next);\n    }\n  }\n\n  private handleAsterisk(): void {\n    const items = this.focusedItem?.parent\n      ? this.focusedItem!.parent?.getChildren()\n      : this.tree.items?.filter(\n          (item: IgcTreeItemComponent) => item.level === 0\n        );\n    items?.forEach((item: IgcTreeItemComponent) => {\n      if (!item.disabled && !item.expanded && item.hasChildren) {\n        item.expandWithEvent();\n      }\n    });\n  }\n\n  private handleSpace(shiftKey = false): void {\n    if (this.tree.selection === 'none') {\n      this.setActiveItem(this.focusedItem);\n      return;\n    }\n\n    this.setActiveItem(this.focusedItem);\n    if (shiftKey) {\n      this.selectionService.selectMultipleItems(this.focusedItem!);\n      return;\n    }\n\n    if (this.focusedItem!.selected) {\n      this.selectionService.deselectItem(this.focusedItem!);\n    } else {\n      this.selectionService.selectItem(this.focusedItem!);\n    }\n  }\n\n  /** Gets the next visible item in the given direction - 1 -> next, -1 -> previous */\n  private getVisibleItem(\n    item: IgcTreeItemComponent,\n    dir: 1 | -1 = 1\n  ): IgcTreeItemComponent {\n    const itemIndex = this.visibleChildren.indexOf(item);\n    return this.visibleChildren[itemIndex + dir] || item;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}