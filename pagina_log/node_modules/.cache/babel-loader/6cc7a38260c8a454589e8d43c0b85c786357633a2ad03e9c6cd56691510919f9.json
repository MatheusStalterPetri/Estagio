{"ast":null,"code":"var __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { html, LitElement } from 'lit';\nimport { property, query, queryAssignedElements, state } from 'lit/decorators.js';\nimport { styleMap } from 'lit/directives/style-map.js';\nimport { themes } from '../../theming/theming-decorator.js';\nimport { blazorAdditionalDependencies } from '../common/decorators/blazorAdditionalDependencies.js';\nimport { blazorSuppress } from '../common/decorators/blazorSuppress.js';\nimport { watch } from '../common/decorators/watch.js';\nimport { EventEmitterMixin } from '../common/mixins/event-emitter.js';\nimport { SizableMixin } from '../common/mixins/sizable.js';\nimport { IgcToggleController } from '../toggle/toggle.controller.js';\nimport { styles } from './themes/light/dropdown.base.css.js';\nimport { styles as bootstrap } from './themes/light/dropdown.bootstrap.css.js';\nimport { styles as fluent } from './themes/light/dropdown.fluent.css.js';\nimport { styles as indigo } from './themes/light/dropdown.indigo.css.js';\nimport { defineComponents } from '../common/definitions/defineComponents.js';\nimport IgcDropdownGroupComponent from './dropdown-group.js';\nimport IgcDropdownHeaderComponent from './dropdown-header.js';\nimport IgcDropdownItemComponent from './dropdown-item.js';\ndefineComponents(IgcDropdownGroupComponent, IgcDropdownHeaderComponent, IgcDropdownItemComponent);\nlet IgcDropdownComponent = class IgcDropdownComponent extends SizableMixin(EventEmitterMixin(LitElement)) {\n  get allItems() {\n    return [...this.items, ...this.groups.flatMap(group => group.items)];\n  }\n  toggleDirectiveChange() {\n    var _a;\n    if (!this.target) return;\n    this.toggleController.target = this.target;\n    if (this.open) {\n      document.addEventListener('keydown', this.handleKeyDown);\n      this.target.addEventListener('focusout', this.handleFocusout);\n      this.selectedItem = (_a = this.allItems.find(i => i.selected)) !== null && _a !== void 0 ? _a : null;\n    } else {\n      document.removeEventListener('keydown', this.handleKeyDown);\n      this.target.removeEventListener('focusout', this.handleFocusout);\n    }\n    this.target.setAttribute('aria-expanded', this.open ? 'true' : 'false');\n  }\n  updateOptions() {\n    if (!this.toggleController) return;\n    this.toggleController.update();\n  }\n  sizeChange() {\n    this.groups.forEach(g => g.requestUpdate());\n  }\n  constructor() {\n    super();\n    this.keyDownHandlers = new Map(Object.entries({\n      Escape: this.onEscapeKey,\n      Enter: this.onEnterKey,\n      ArrowUp: this.onArrowUpKeyDown,\n      ArrowDown: this.onArrowDownKeyDown,\n      ArrowLeft: this.onArrowUpKeyDown,\n      ArrowRight: this.onArrowDownKeyDown,\n      Home: this.onHomeKey,\n      End: this.onEndKey\n    }));\n    this.keepOpenOnSelect = false;\n    this.open = false;\n    this.placement = 'bottom-start';\n    this.positionStrategy = 'absolute';\n    this.scrollStrategy = 'scroll';\n    this.flip = false;\n    this.distance = 0;\n    this.keepOpenOnOutsideClick = false;\n    this.sameWidth = false;\n    this.handleKeyDown = event => {\n      var _a;\n      const path = event.composedPath();\n      if (!(path.includes(this.target) || path.includes(this.content))) return;\n      if (this.keyDownHandlers.has(event.key)) {\n        event.preventDefault();\n        event.stopPropagation();\n        (_a = this.keyDownHandlers.get(event.key)) === null || _a === void 0 ? void 0 : _a.call(this);\n      }\n    };\n    this.handleTargetClick = async () => {\n      if (!this.open) {\n        if (!this.handleOpening()) return;\n        this.show();\n        await this.updateComplete;\n        this.emitEvent('igcOpened');\n      } else {\n        this._hide();\n      }\n    };\n    this.toggleController = new IgcToggleController(this, {\n      target: this.target,\n      closeCallback: () => this._hide()\n    });\n  }\n  async firstUpdated() {\n    if (this.targetNodes.length) {\n      this.target = this.targetNodes[0];\n      this.target.setAttribute('aria-haspopup', 'listbox');\n    }\n    await this.updateComplete;\n    this.setInitialSelection();\n  }\n  async getUpdateComplete() {\n    const result = await super.getUpdateComplete();\n    await this.toggleController.rendered;\n    return result;\n  }\n  setInitialSelection() {\n    const item = this.allItems.filter(item => item.selected).at(-1);\n    this.allItems.forEach(item => item.selected = false);\n    if (item) {\n      this.selectItem(item, false);\n    }\n  }\n  onHomeKey() {\n    this.navigateTo(this.allItems.filter(item => !item.disabled).at(0).value);\n  }\n  onEndKey() {\n    this.navigateTo(this.allItems.filter(item => !item.disabled).at(-1).value);\n  }\n  onEscapeKey() {\n    this._hide();\n  }\n  onEnterKey() {\n    this.selectItem(this.activeItem);\n  }\n  handleClick(event) {\n    const item = event.composedPath().find(e => e instanceof IgcDropdownItemComponent);\n    if (!item || item.disabled) return;\n    this.selectItem(item);\n  }\n  handleOpening() {\n    const args = {\n      cancelable: true\n    };\n    return this.emitEvent('igcOpening', args);\n  }\n  handleClosing() {\n    const args = {\n      cancelable: true\n    };\n    return this.emitEvent('igcClosing', args);\n  }\n  handleChange(item) {\n    const args = {\n      detail: item\n    };\n    this.emitEvent('igcChange', args);\n  }\n  handleSlotChange() {\n    if (!this.target) return;\n    this.target.setAttribute('aria-expanded', this.open ? 'true' : 'false');\n  }\n  handleFocusout(event) {\n    event.preventDefault();\n    event.target.focus();\n  }\n  getItem(value) {\n    let itemIndex = -1;\n    let item;\n    this.allItems.find((i, index) => {\n      if (i.value === value) {\n        item = i;\n        itemIndex = index;\n      }\n    });\n    return {\n      item: item,\n      index: itemIndex\n    };\n  }\n  activateItem(value) {\n    if (!value) return;\n    if (this.activeItem) {\n      this.activeItem.active = false;\n    }\n    this.activeItem = value;\n    this.activeItem.active = true;\n  }\n  selectItem(item, emit = true) {\n    if (!item) return null;\n    if (this.selectedItem) {\n      this.selectedItem.selected = false;\n    }\n    this.activateItem(item);\n    this.selectedItem = item;\n    this.selectedItem.selected = true;\n    if (emit) this.handleChange(this.selectedItem);\n    if (emit && !this.keepOpenOnSelect) this._hide();\n    return this.selectedItem;\n  }\n  navigate(direction, currentIndex) {\n    var _a;\n    let index = -1;\n    if (this.activeItem) {\n      index = currentIndex ? currentIndex : (_a = [...this.allItems].indexOf(this.activeItem)) !== null && _a !== void 0 ? _a : index;\n    }\n    const newIndex = this.getNearestSiblingFocusableItemIndex(index, direction);\n    this.navigateItem(newIndex);\n  }\n  navigateItem(newIndex) {\n    if (!this.allItems) {\n      return null;\n    }\n    if (newIndex < 0 || newIndex >= this.allItems.length) {\n      return null;\n    }\n    const newItem = this.allItems[newIndex];\n    this.activateItem(newItem);\n    this.scrollToHiddenItem(newItem);\n    return newItem;\n  }\n  scrollToHiddenItem(newItem) {\n    const elementRect = newItem.getBoundingClientRect();\n    const parentRect = this.content.getBoundingClientRect();\n    if (parentRect.top > elementRect.top) {\n      this.content.scrollTop -= parentRect.top - elementRect.top;\n    }\n    if (parentRect.bottom < elementRect.bottom) {\n      this.content.scrollTop += elementRect.bottom - parentRect.bottom;\n    }\n  }\n  getNearestSiblingFocusableItemIndex(startIndex, direction) {\n    let index = startIndex;\n    const items = this.allItems;\n    if (!items) {\n      return -1;\n    }\n    while (items[index + direction] && items[index + direction].disabled) {\n      index += direction;\n    }\n    index += direction;\n    return index > -1 && index < items.length ? index : -1;\n  }\n  navigateNext() {\n    this.navigate(1);\n  }\n  navigatePrev() {\n    this.navigate(-1);\n  }\n  onArrowDownKeyDown() {\n    this.navigateNext();\n  }\n  onArrowUpKeyDown() {\n    this.navigatePrev();\n  }\n  async _hide(emit = true) {\n    if (!this.open) return;\n    if (emit && !this.handleClosing()) return;\n    this.open = false;\n    if (emit) {\n      await this.updateComplete;\n      this.emitEvent('igcClosed');\n    }\n  }\n  show(target) {\n    if (this.open && !target) return;\n    if (target) this.target = target;\n    this.open = true;\n  }\n  hide() {\n    this._hide(false);\n  }\n  toggle(target) {\n    this.open ? this.hide() : this.show(target);\n  }\n  navigateTo(value) {\n    const index = typeof value === 'string' ? this.getItem(value).index : value;\n    return this.navigateItem(index);\n  }\n  select(value) {\n    const item = typeof value === 'string' ? this.getItem(value).item : this.allItems[value];\n    return this.selectItem(item, false);\n  }\n  clearSelection() {\n    if (this.selectedItem) {\n      this.selectedItem.selected = false;\n    }\n    this.selectedItem = null;\n  }\n  render() {\n    return html`\n      <slot\n        id=\"igcDDLTarget\"\n        name=\"target\"\n        @click=${this.handleTargetClick}\n        @slotchange=${this.handleSlotChange}\n      >\n      </slot>\n      <div\n        part=\"base\"\n        style=${styleMap({\n      position: this.positionStrategy\n    })}\n        @click=${this.handleClick}\n        ${this.toggleController.toggleDirective}\n      >\n        <div role=\"listbox\" part=\"list\" aria-labelledby=\"igcDDLTarget\">\n          <slot></slot>\n        </div>\n      </div>\n    `;\n  }\n};\nIgcDropdownComponent.tagName = 'igc-dropdown';\nIgcDropdownComponent.styles = styles;\n__decorate([state()], IgcDropdownComponent.prototype, \"activeItem\", void 0);\n__decorate([queryAssignedElements({\n  slot: 'target'\n})], IgcDropdownComponent.prototype, \"targetNodes\", void 0);\n__decorate([query('[part=\"base\"]')], IgcDropdownComponent.prototype, \"content\", void 0);\n__decorate([query('[part=\"list\"]')], IgcDropdownComponent.prototype, \"scrollContainer\", void 0);\n__decorate([queryAssignedElements({\n  flatten: true,\n  selector: 'igc-dropdown-item'\n})], IgcDropdownComponent.prototype, \"items\", void 0);\n__decorate([queryAssignedElements({\n  flatten: true,\n  selector: 'igc-dropdown-group'\n})], IgcDropdownComponent.prototype, \"groups\", void 0);\n__decorate([property({\n  type: Boolean,\n  attribute: 'keep-open-on-select'\n})], IgcDropdownComponent.prototype, \"keepOpenOnSelect\", void 0);\n__decorate([property({\n  type: Boolean\n})], IgcDropdownComponent.prototype, \"open\", void 0);\n__decorate([property()], IgcDropdownComponent.prototype, \"placement\", void 0);\n__decorate([property({\n  attribute: 'position-strategy'\n})], IgcDropdownComponent.prototype, \"positionStrategy\", void 0);\n__decorate([property({\n  attribute: 'scroll-strategy'\n})], IgcDropdownComponent.prototype, \"scrollStrategy\", void 0);\n__decorate([property({\n  type: Boolean\n})], IgcDropdownComponent.prototype, \"flip\", void 0);\n__decorate([property({\n  type: Number\n})], IgcDropdownComponent.prototype, \"distance\", void 0);\n__decorate([property({\n  type: Boolean,\n  attribute: 'keep-open-on-outside-click'\n})], IgcDropdownComponent.prototype, \"keepOpenOnOutsideClick\", void 0);\n__decorate([property({\n  type: Boolean,\n  attribute: 'same-width'\n})], IgcDropdownComponent.prototype, \"sameWidth\", void 0);\n__decorate([watch('open')], IgcDropdownComponent.prototype, \"toggleDirectiveChange\", null);\n__decorate([watch('placement'), watch('flip'), watch('positionStrategy'), watch('closeOnOutsideClick'), watch('distance'), watch('sameWidth')], IgcDropdownComponent.prototype, \"updateOptions\", null);\n__decorate([watch('size')], IgcDropdownComponent.prototype, \"sizeChange\", null);\n__decorate([blazorSuppress()], IgcDropdownComponent.prototype, \"show\", null);\n__decorate([blazorSuppress()], IgcDropdownComponent.prototype, \"toggle\", null);\n__decorate([blazorSuppress()], IgcDropdownComponent.prototype, \"navigateTo\", null);\n__decorate([blazorSuppress()], IgcDropdownComponent.prototype, \"select\", null);\nIgcDropdownComponent = __decorate([themes({\n  bootstrap,\n  fluent,\n  indigo\n}), blazorAdditionalDependencies('IgcDropdownItemComponent, IgcDropdownHeaderComponent, IgcDropdownGroupComponent')], IgcDropdownComponent);\nexport default IgcDropdownComponent;","map":{"version":3,"names":["html","LitElement","property","query","queryAssignedElements","state","styleMap","themes","blazorAdditionalDependencies","blazorSuppress","watch","EventEmitterMixin","SizableMixin","IgcToggleController","styles","bootstrap","fluent","indigo","defineComponents","IgcDropdownGroupComponent","IgcDropdownHeaderComponent","IgcDropdownItemComponent","IgcDropdownComponent","allItems","items","groups","flatMap","group","toggleDirectiveChange","target","toggleController","open","document","addEventListener","handleKeyDown","handleFocusout","selectedItem","_a","find","i","selected","removeEventListener","setAttribute","updateOptions","update","sizeChange","forEach","g","requestUpdate","constructor","keyDownHandlers","Map","Object","entries","Escape","onEscapeKey","Enter","onEnterKey","ArrowUp","onArrowUpKeyDown","ArrowDown","onArrowDownKeyDown","ArrowLeft","ArrowRight","Home","onHomeKey","End","onEndKey","keepOpenOnSelect","placement","positionStrategy","scrollStrategy","flip","distance","keepOpenOnOutsideClick","sameWidth","event","path","composedPath","includes","content","has","key","preventDefault","stopPropagation","get","call","handleTargetClick","handleOpening","show","updateComplete","emitEvent","_hide","closeCallback","firstUpdated","targetNodes","length","setInitialSelection","getUpdateComplete","result","rendered","item","filter","at","selectItem","navigateTo","disabled","value","activeItem","handleClick","e","args","cancelable","handleClosing","handleChange","detail","handleSlotChange","focus","getItem","itemIndex","index","activateItem","active","emit","navigate","direction","currentIndex","indexOf","newIndex","getNearestSiblingFocusableItemIndex","navigateItem","newItem","scrollToHiddenItem","elementRect","getBoundingClientRect","parentRect","top","scrollTop","bottom","startIndex","navigateNext","navigatePrev","hide","toggle","select","clearSelection","render","position","toggleDirective","tagName","__decorate","slot","flatten","selector","type","Boolean","attribute","Number"],"sources":["../../../src/components/dropdown/dropdown.ts"],"sourcesContent":["import { html, LitElement } from 'lit';\nimport {\n  property,\n  query,\n  queryAssignedElements,\n  state,\n} from 'lit/decorators.js';\nimport { styleMap } from 'lit/directives/style-map.js';\nimport { themes } from '../../theming/theming-decorator.js';\nimport { blazorAdditionalDependencies } from '../common/decorators/blazorAdditionalDependencies.js';\nimport { blazorSuppress } from '../common/decorators/blazorSuppress.js';\nimport { watch } from '../common/decorators/watch.js';\nimport { Constructor } from '../common/mixins/constructor.js';\nimport { EventEmitterMixin } from '../common/mixins/event-emitter.js';\nimport { SizableMixin } from '../common/mixins/sizable.js';\nimport { IgcToggleController } from '../toggle/toggle.controller.js';\nimport type {\n  IgcPlacement,\n  IgcToggleComponent,\n  IgcToggleEventMap,\n} from '../toggle/types';\nimport { styles } from './themes/light/dropdown.base.css.js';\nimport { styles as bootstrap } from './themes/light/dropdown.bootstrap.css.js';\nimport { styles as fluent } from './themes/light/dropdown.fluent.css.js';\nimport { styles as indigo } from './themes/light/dropdown.indigo.css.js';\n\nimport { defineComponents } from '../common/definitions/defineComponents.js';\nimport IgcDropdownGroupComponent from './dropdown-group.js';\nimport IgcDropdownHeaderComponent from './dropdown-header.js';\nimport IgcDropdownItemComponent from './dropdown-item.js';\n\ndefineComponents(\n  IgcDropdownGroupComponent,\n  IgcDropdownHeaderComponent,\n  IgcDropdownItemComponent\n);\n\nexport interface IgcDropdownEventMap extends IgcToggleEventMap {\n  igcChange: CustomEvent<IgcDropdownItemComponent>;\n}\n\n/**\n * Represents a DropDown component.\n *\n * @element igc-dropdown\n *\n * @fires igcChange - Emitted when the selected item changes.\n * @fires igcOpening - Emitted just before the dropdown is open.\n * @fires igcOpened - Emitted after the dropdown is open.\n * @fires igcClosing - Emitter just before the dropdown is closed.\n * @fires igcClosed - Emitted after closing the dropdown.\n *\n * @slot target - Renders the dropdown's target element.\n * @slot - Renders the dropdown list items.\n *\n * @csspart base - The dropdown list wrapper.\n * @csspart list - The dropdown list.\n */\n@themes({ bootstrap, fluent, indigo })\n@blazorAdditionalDependencies(\n  'IgcDropdownItemComponent, IgcDropdownHeaderComponent, IgcDropdownGroupComponent'\n)\nexport default class IgcDropdownComponent\n  extends SizableMixin(\n    EventEmitterMixin<IgcDropdownEventMap, Constructor<LitElement>>(LitElement)\n  )\n  implements IgcToggleComponent\n{\n  /** @private */\n  public static readonly tagName: string = 'igc-dropdown';\n\n  public static styles = styles;\n\n  protected toggleController!: IgcToggleController;\n  protected selectedItem!: IgcDropdownItemComponent | null;\n\n  @state()\n  protected activeItem!: IgcDropdownItemComponent;\n\n  protected target!: HTMLElement;\n\n  private readonly keyDownHandlers: Map<string, Function> = new Map(\n    Object.entries({\n      Escape: this.onEscapeKey,\n      Enter: this.onEnterKey,\n      ArrowUp: this.onArrowUpKeyDown,\n      ArrowDown: this.onArrowDownKeyDown,\n      ArrowLeft: this.onArrowUpKeyDown,\n      ArrowRight: this.onArrowDownKeyDown,\n      Home: this.onHomeKey,\n      End: this.onEndKey,\n    })\n  );\n\n  protected get allItems() {\n    return [...this.items, ...this.groups.flatMap((group) => group.items)];\n  }\n\n  @queryAssignedElements({ slot: 'target' })\n  private targetNodes!: Array<HTMLElement>;\n\n  @query('[part=\"base\"]')\n  protected content!: HTMLElement;\n\n  @query('[part=\"list\"]')\n  protected scrollContainer!: HTMLElement;\n\n  @queryAssignedElements({ flatten: true, selector: 'igc-dropdown-item' })\n  protected items!: Array<IgcDropdownItemComponent>;\n\n  @queryAssignedElements({ flatten: true, selector: 'igc-dropdown-group' })\n  protected groups!: Array<IgcDropdownGroupComponent>;\n\n  /**\n   * Whether the dropdown should be kept open on selection.\n   * @attr keep-open-on-select\n   */\n  @property({ type: Boolean, attribute: 'keep-open-on-select' })\n  public keepOpenOnSelect = false;\n\n  /**\n   * Sets the open state of the component.\n   * @attr\n   */\n  @property({ type: Boolean })\n  public open = false;\n\n  /** The preferred placement of the component around the target element.\n   * @type {\"top\" | \"top-start\" | \"top-end\" | \"bottom\" | \"bottom-start\" | \"bottom-end\" | \"right\" | \"right-start\" | \"right-end\" | \"left\" | \"left-start\" | \"left-end\"}\n   * @attr\n   */\n  @property()\n  public placement: IgcPlacement = 'bottom-start';\n\n  /**\n   * Sets the component's positioning strategy.\n   * @attr position-strategy\n   */\n  @property({ attribute: 'position-strategy' })\n  public positionStrategy: 'absolute' | 'fixed' = 'absolute';\n\n  /**\n   * Determines the behavior of the component during scrolling the container.\n   * @attr scroll-strategy\n   */\n  @property({ attribute: 'scroll-strategy' })\n  public scrollStrategy: 'scroll' | 'block' | 'close' = 'scroll';\n\n  /**\n   * Whether the component should be flipped to the opposite side of the target once it's about to overflow the visible area.\n   * When true, once enough space is detected on its preferred side, it will flip back.\n   * @attr\n   */\n  @property({ type: Boolean })\n  public flip = false;\n\n  /**\n   * The distance from the target element.\n   * @attr\n   */\n  @property({ type: Number })\n  public distance = 0;\n\n  /**\n   * Whether the component should be kept open on clicking outside of it.\n   * @attr keep-open-on-outside-click\n   */\n  @property({ type: Boolean, attribute: 'keep-open-on-outside-click' })\n  public keepOpenOnOutsideClick = false;\n\n  /**\n   * Whether the dropdown's width should be the same as the target's one.\n   * @attr same-width\n   */\n  @property({ type: Boolean, attribute: 'same-width' })\n  public sameWidth = false;\n\n  @watch('open')\n  protected toggleDirectiveChange() {\n    if (!this.target) return;\n    this.toggleController.target = this.target;\n\n    if (this.open) {\n      document.addEventListener('keydown', this.handleKeyDown);\n      this.target.addEventListener('focusout', this.handleFocusout);\n      this.selectedItem = this.allItems.find((i) => i.selected) ?? null;\n    } else {\n      document.removeEventListener('keydown', this.handleKeyDown);\n      this.target.removeEventListener('focusout', this.handleFocusout);\n    }\n\n    this.target.setAttribute('aria-expanded', this.open ? 'true' : 'false');\n  }\n\n  @watch('placement')\n  @watch('flip')\n  @watch('positionStrategy')\n  @watch('closeOnOutsideClick')\n  @watch('distance')\n  @watch('sameWidth')\n  protected updateOptions() {\n    if (!this.toggleController) return;\n\n    this.toggleController.update();\n  }\n\n  @watch('size')\n  protected sizeChange() {\n    this.groups.forEach((g) => g.requestUpdate());\n  }\n\n  constructor() {\n    super();\n    this.toggleController = new IgcToggleController(this, {\n      target: this.target,\n      closeCallback: () => this._hide(),\n    });\n  }\n\n  public override async firstUpdated() {\n    if (this.targetNodes.length) {\n      this.target = this.targetNodes[0];\n      this.target.setAttribute('aria-haspopup', 'listbox');\n    }\n\n    await this.updateComplete;\n    this.setInitialSelection();\n  }\n\n  protected override async getUpdateComplete() {\n    const result = await super.getUpdateComplete();\n    await this.toggleController.rendered;\n    return result;\n  }\n\n  protected setInitialSelection() {\n    const item = this.allItems.filter((item) => item.selected).at(-1);\n    this.allItems.forEach((item) => (item.selected = false));\n    if (item) {\n      this.selectItem(item, false);\n    }\n  }\n\n  protected handleKeyDown = (event: KeyboardEvent) => {\n    const path = event.composedPath();\n    if (!(path.includes(this.target) || path.includes(this.content))) return;\n\n    if (this.keyDownHandlers.has(event.key)) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.keyDownHandlers.get(event.key)?.call(this);\n    }\n  };\n\n  protected onHomeKey() {\n    this.navigateTo(\n      this.allItems.filter((item) => !item.disabled).at(0)!.value\n    );\n  }\n\n  protected onEndKey() {\n    this.navigateTo(\n      this.allItems.filter((item) => !item.disabled).at(-1)!.value\n    );\n  }\n\n  protected onEscapeKey() {\n    this._hide();\n  }\n\n  protected onEnterKey() {\n    this.selectItem(this.activeItem);\n  }\n\n  protected handleClick(event: MouseEvent) {\n    const item = event\n      .composedPath()\n      .find(\n        (e) => e instanceof IgcDropdownItemComponent\n      ) as IgcDropdownItemComponent;\n\n    if (!item || item.disabled) return;\n\n    this.selectItem(item);\n  }\n\n  protected handleTargetClick = async () => {\n    if (!this.open) {\n      if (!this.handleOpening()) return;\n      this.show();\n      await this.updateComplete;\n      this.emitEvent('igcOpened');\n    } else {\n      this._hide();\n    }\n  };\n\n  protected handleOpening() {\n    const args = { cancelable: true };\n    return this.emitEvent('igcOpening', args);\n  }\n\n  protected handleClosing(): boolean {\n    const args = { cancelable: true };\n    return this.emitEvent('igcClosing', args);\n  }\n\n  protected handleChange(item: IgcDropdownItemComponent) {\n    const args = { detail: item };\n    this.emitEvent('igcChange', args);\n  }\n\n  protected handleSlotChange() {\n    if (!this.target) return;\n    this.target.setAttribute('aria-expanded', this.open ? 'true' : 'false');\n  }\n\n  protected handleFocusout(event: Event) {\n    event.preventDefault();\n    (event.target as HTMLElement).focus();\n  }\n\n  protected getItem(value: string) {\n    let itemIndex = -1;\n    let item!: IgcDropdownItemComponent;\n    this.allItems.find((i, index) => {\n      if (i.value === value) {\n        item = i;\n        itemIndex = index;\n      }\n    });\n    return { item: item, index: itemIndex };\n  }\n\n  protected activateItem(value: IgcDropdownItemComponent) {\n    if (!value) return;\n\n    if (this.activeItem) {\n      this.activeItem.active = false;\n    }\n\n    this.activeItem = value;\n    this.activeItem.active = true;\n  }\n\n  protected selectItem(\n    item: IgcDropdownItemComponent,\n    emit = true\n  ): IgcDropdownItemComponent | null {\n    if (!item) return null;\n\n    if (this.selectedItem) {\n      this.selectedItem.selected = false;\n    }\n\n    this.activateItem(item);\n    this.selectedItem = item;\n    this.selectedItem.selected = true;\n    if (emit) this.handleChange(this.selectedItem);\n    if (emit && !this.keepOpenOnSelect) this._hide();\n\n    return this.selectedItem;\n  }\n\n  protected navigate(direction: -1 | 1, currentIndex?: number) {\n    let index = -1;\n    if (this.activeItem) {\n      index = currentIndex\n        ? currentIndex\n        : [...this.allItems].indexOf(this.activeItem) ?? index;\n    }\n\n    const newIndex = this.getNearestSiblingFocusableItemIndex(index, direction);\n    this.navigateItem(newIndex);\n  }\n\n  private navigateItem(newIndex: number): IgcDropdownItemComponent | null {\n    if (!this.allItems) {\n      return null;\n    }\n\n    if (newIndex < 0 || newIndex >= this.allItems.length) {\n      return null;\n    }\n\n    const newItem = this.allItems[newIndex];\n\n    this.activateItem(newItem);\n    this.scrollToHiddenItem(newItem);\n\n    return newItem;\n  }\n\n  private scrollToHiddenItem(newItem: IgcDropdownItemComponent) {\n    const elementRect = newItem.getBoundingClientRect();\n    const parentRect = this.content.getBoundingClientRect();\n    if (parentRect.top > elementRect.top) {\n      this.content.scrollTop -= parentRect.top - elementRect.top;\n    }\n\n    if (parentRect.bottom < elementRect.bottom) {\n      this.content.scrollTop += elementRect.bottom - parentRect.bottom;\n    }\n  }\n\n  protected getNearestSiblingFocusableItemIndex(\n    startIndex: number,\n    direction: -1 | 1\n  ): number {\n    let index = startIndex;\n    const items = this.allItems;\n    if (!items) {\n      return -1;\n    }\n\n    while (items[index + direction] && items[index + direction].disabled) {\n      index += direction;\n    }\n\n    index += direction;\n\n    return index > -1 && index < items.length ? index : -1;\n  }\n\n  private navigateNext() {\n    this.navigate(1);\n  }\n\n  private navigatePrev() {\n    this.navigate(-1);\n  }\n\n  protected onArrowDownKeyDown() {\n    this.navigateNext();\n  }\n\n  protected onArrowUpKeyDown() {\n    this.navigatePrev();\n  }\n\n  private async _hide(emit = true) {\n    if (!this.open) return;\n    if (emit && !this.handleClosing()) return;\n\n    this.open = false;\n\n    if (emit) {\n      await this.updateComplete;\n      this.emitEvent('igcClosed');\n    }\n  }\n\n  /** Shows the dropdown. */\n  @blazorSuppress()\n  public show(target?: HTMLElement) {\n    if (this.open && !target) return;\n\n    if (target) this.target = target;\n\n    this.open = true;\n  }\n\n  /** Hides the dropdown. */\n  public hide(): void {\n    this._hide(false);\n  }\n\n  /** Toggles the open state of the dropdown. */\n  @blazorSuppress()\n  public toggle(target?: HTMLElement): void {\n    this.open ? this.hide() : this.show(target);\n  }\n\n  /** Navigates to the item with the specified value. If it exists, returns the found item, otherwise - null. */\n  public navigateTo(value: string): IgcDropdownItemComponent | null;\n  /** Navigates to the item at the specified index. If it exists, returns the found item, otherwise - null. */\n  public navigateTo(index: number): IgcDropdownItemComponent | null;\n  /** Navigates to the specified item. If it exists, returns the found item, otherwise - null. */\n  @blazorSuppress()\n  public navigateTo(value: string | number): IgcDropdownItemComponent | null {\n    const index =\n      typeof value === 'string' ? this.getItem(value).index : (value as number);\n\n    return this.navigateItem(index);\n  }\n\n  /** Selects the item with the specified value. If it exists, returns the found item, otherwise - null. */\n  public select(value: string): IgcDropdownItemComponent | null;\n  /** Selects the item at the specified index. If it exists, returns the found item, otherwise - null. */\n  public select(index: number): IgcDropdownItemComponent | null;\n  /** Selects the specified item. If it exists, returns the found item, otherwise - null. */\n  @blazorSuppress()\n  public select(value: string | number): IgcDropdownItemComponent | null {\n    const item =\n      typeof value === 'string'\n        ? this.getItem(value).item\n        : this.allItems[value as number];\n\n    return this.selectItem(item, false);\n  }\n\n  /**  Clears the current selection of the dropdown. */\n  public clearSelection() {\n    if (this.selectedItem) {\n      this.selectedItem.selected = false;\n    }\n    this.selectedItem = null;\n  }\n\n  protected override render() {\n    return html`\n      <slot\n        id=\"igcDDLTarget\"\n        name=\"target\"\n        @click=${this.handleTargetClick}\n        @slotchange=${this.handleSlotChange}\n      >\n      </slot>\n      <div\n        part=\"base\"\n        style=${styleMap({ position: this.positionStrategy })}\n        @click=${this.handleClick}\n        ${this.toggleController.toggleDirective}\n      >\n        <div role=\"listbox\" part=\"list\" aria-labelledby=\"igcDDLTarget\">\n          <slot></slot>\n        </div>\n      </div>\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'igc-dropdown': IgcDropdownComponent;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}