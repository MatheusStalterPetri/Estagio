{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { html, LitElement } from 'lit';\nimport { property, query, queryAssignedElements, state } from 'lit/decorators.js';\nimport { ifDefined } from 'lit/directives/if-defined.js';\nimport { styleMap } from 'lit/directives/style-map.js';\nimport { themes } from '../../theming/theming-decorator.js';\nimport { blazorTypeOverride } from '../common/decorators/blazorTypeOverride.js';\nimport { watch } from '../common/decorators/watch.js';\nimport { styles } from './themes/light/slider.base.css.js';\nimport { styles as bootstrap } from './themes/light/slider.bootstrap.css.js';\nimport { styles as fluent } from './themes/light/slider.fluent.css.js';\nimport { styles as indigo } from './themes/light/slider.indigo.css.js';\nimport { styles as material } from './themes/light/slider.material.css.js';\nimport { defineComponents } from '../common/definitions/defineComponents.js';\nimport IgcSliderLabelComponent from './slider-label.js';\nimport { blazorDeepImport } from '../common/decorators/blazorDeepImport.js';\nimport { isLTR } from '../common/util.js';\ndefineComponents(IgcSliderLabelComponent);\nlet IgcSliderBaseComponent = class IgcSliderBaseComponent extends LitElement {\n  set min(value) {\n    if (value < this.max) {\n      const oldVal = this._min;\n      this._min = this.labels ? 0 : value;\n      this.requestUpdate('min', oldVal);\n      if (typeof this.lowerBound === 'number' && this.lowerBound < value) {\n        this.lowerBound = value;\n      }\n    }\n  }\n  get min() {\n    return this._min;\n  }\n  set max(value) {\n    if (value > this.min) {\n      const oldVal = this._max;\n      this._max = this.labels ? this.labels.length - 1 : value;\n      this.requestUpdate('max', oldVal);\n      if (typeof this.upperBound === 'number' && this.upperBound > value) {\n        this.upperBound = value;\n      }\n    }\n  }\n  get max() {\n    return this._max;\n  }\n  set lowerBound(value) {\n    const oldVal = this._lowerBound;\n    if (typeof value === 'number') {\n      this._lowerBound = this.valueInRange(value, this.min, this.actualMax);\n    } else {\n      this._lowerBound = value;\n    }\n    this.requestUpdate('lowerBound', oldVal);\n  }\n  get lowerBound() {\n    return this._lowerBound;\n  }\n  set upperBound(value) {\n    const oldVal = this._upperBound;\n    if (typeof value === 'number') {\n      this._upperBound = this.valueInRange(value, this.actualMin, this.max);\n    } else {\n      this._upperBound = value;\n    }\n    this.requestUpdate('upperBound', oldVal);\n  }\n  get upperBound() {\n    return this._upperBound;\n  }\n  set step(value) {\n    const oldVal = this._step;\n    this._step = this.labels ? 1 : value;\n    this.requestUpdate('step', oldVal);\n  }\n  get step() {\n    return this._step;\n  }\n  constraintsChange() {\n    this.normalizeValue();\n  }\n  labelsChange() {\n    if (this.labels) {\n      this.min = 0;\n      this.max = this.labels.length - 1;\n      this.step = 1;\n    }\n  }\n  constructor() {\n    super();\n    this._min = 0;\n    this._max = 100;\n    this._step = 1;\n    this.pointerCaptured = false;\n    this.thumbLabelsVisible = false;\n    this.disabled = false;\n    this.discreteTrack = false;\n    this.hideTooltip = false;\n    this.primaryTicks = 0;\n    this.secondaryTicks = 0;\n    this.tickOrientation = 'end';\n    this.hidePrimaryLabels = false;\n    this.hideSecondaryLabels = false;\n    this.locale = 'en';\n    this.tickLabelRotation = 0;\n    this.pointerDown = event => {\n      var _a;\n      const thumb = this.closestHandle(event);\n      thumb.focus();\n      this.startValue = this.activeValue;\n      this.updateSlider(event.clientX);\n      this.setPointerCapture(event.pointerId);\n      this.pointerCaptured = true;\n      this.showThumbLabels();\n      event.preventDefault();\n      (_a = this.activeThumb) === null || _a === void 0 ? void 0 : _a.part.remove('focused');\n    };\n    this.pointerMove = event => {\n      if (this.pointerCaptured) {\n        this.updateSlider(event.clientX);\n      }\n    };\n    this.lostPointerCapture = () => {\n      this.pointerCaptured = false;\n      this.hideThumbLabels();\n      if (this.startValue !== this.activeValue) {\n        this.emitChangeEvent();\n      }\n      this.startValue = undefined;\n    };\n    this.handleKeydown = event => {\n      if (this.disabled) {\n        return;\n      }\n      const {\n        key\n      } = event;\n      let increment = 0;\n      const value = this.activeValue;\n      const step = this.step ? this.step : 1;\n      const ltr = isLTR(this);\n      switch (key) {\n        case 'ArrowLeft':\n          increment += ltr ? -step : step;\n          break;\n        case 'ArrowRight':\n          increment += ltr ? step : -step;\n          break;\n        case 'ArrowUp':\n          increment = step;\n          break;\n        case 'ArrowDown':\n          increment = -step;\n          break;\n        case 'Home':\n          increment = this.actualMin - value;\n          break;\n        case 'End':\n          increment = this.actualMax - value;\n          break;\n        case 'PageUp':\n          increment = Math.max((this.actualMax - this.actualMin) / 10, step);\n          break;\n        case 'PageDown':\n          increment = -Math.max((this.actualMax - this.actualMin) / 10, step);\n          break;\n        default:\n          return;\n      }\n      if (increment) {\n        const updated = this.updateValue(increment);\n        this.showThumbLabels();\n        this.hideThumbLabels();\n        if (updated) {\n          this.emitChangeEvent();\n        }\n      }\n    };\n    this.handleThumbPointerEnter = () => {\n      this.showThumbLabels();\n    };\n    this.handleThumbPointerLeave = () => {\n      this.hideThumbLabels();\n    };\n    this.addEventListener('pointerdown', this.pointerDown);\n    this.addEventListener('pointermove', this.pointerMove);\n    this.addEventListener('lostpointercapture', this.lostPointerCapture);\n    this.addEventListener('keydown', this.handleKeydown);\n  }\n  connectedCallback() {\n    super.connectedCallback();\n    this.normalizeValue();\n    this.addEventListener('keyup', this.handleKeyUp);\n  }\n  disconnectedCallback() {\n    this.removeEventListener('keyup', this.handleKeyUp);\n    super.disconnectedCallback();\n  }\n  handleKeyUp() {\n    var _a;\n    (_a = this.activeThumb) === null || _a === void 0 ? void 0 : _a.part.add('focused');\n  }\n  handleSlotChange() {\n    this.labels = this.labelElements && this.labelElements.length ? this.labelElements.map(e => e.textContent) : undefined;\n  }\n  get activeValue() {\n    return 0;\n  }\n  normalizeValue() {}\n  getTrackStyle() {\n    return {};\n  }\n  updateValue(_increment) {\n    return false;\n  }\n  renderThumbs() {\n    return html``;\n  }\n  emitInputEvent() {}\n  emitChangeEvent() {}\n  get actualMin() {\n    return typeof this.lowerBound === 'number' ? this.lowerBound : this.min;\n  }\n  get actualMax() {\n    return typeof this.upperBound === 'number' ? this.upperBound : this.max;\n  }\n  validateValue(value) {\n    value = this.valueInRange(value, this.actualMin, this.actualMax);\n    value = this.normalizeByStep(value);\n    return value;\n  }\n  formatValue(value) {\n    return this.valueFormat ? this.valueFormat.replace('{0}', value.toLocaleString(this.locale, this.valueFormatOptions)) : value.toLocaleString(this.locale, this.valueFormatOptions);\n  }\n  normalizeByStep(value) {\n    return this.step ? value - (value - this.actualMin) % this.step : value;\n  }\n  closestHandle(_event) {\n    return this.thumb;\n  }\n  totalTickCount() {\n    const primaryTicks = this.labels ? this.primaryTicks > 0 ? this.labels.length : 0 : this.primaryTicks === 1 ? 2 : this.primaryTicks;\n    return primaryTicks > 0 ? (primaryTicks - 1) * this.secondaryTicks + primaryTicks : this.secondaryTicks > 0 ? this.secondaryTicks : 0;\n  }\n  tickValue(idx) {\n    const tickCount = this.totalTickCount();\n    const labelStep = tickCount > 1 ? (this.max - this.min) / (tickCount - 1) : this.max - this.min;\n    const labelVal = labelStep * idx;\n    return this.min + labelVal;\n  }\n  isPrimary(idx) {\n    return this.primaryTicks <= 0 ? false : idx % (this.secondaryTicks + 1) === 0;\n  }\n  showThumbLabels() {\n    if (this.disabled || this.hideTooltip) {\n      return;\n    }\n    if (this.thumbHoverTimer) {\n      clearTimeout(this.thumbHoverTimer);\n      this.thumbHoverTimer = null;\n    }\n    this.thumbLabelsVisible = true;\n  }\n  hideThumbLabels() {\n    if (this.pointerCaptured || !this.thumbLabelsVisible) {\n      return;\n    }\n    this.thumbHoverTimer = setTimeout(() => {\n      this.thumbLabelsVisible = false;\n    }, 750);\n  }\n  valueInRange(value, min = 0, max = 100) {\n    return Math.max(Math.min(value, max), min);\n  }\n  valueToFraction(value) {\n    return (value - this.min) / (this.max - this.min);\n  }\n  calculateTrackUpdate(mouseX) {\n    if (!this.activeThumb) {\n      return 0;\n    }\n    const thumbBoundaries = this.activeThumb.getBoundingClientRect();\n    const thumbCenter = (thumbBoundaries.right - thumbBoundaries.left) / 2;\n    const thumbPositionX = thumbBoundaries.left + thumbCenter;\n    const scale = this.getBoundingClientRect().width / (this.max - this.min);\n    const change = isLTR(this) ? mouseX - thumbPositionX : thumbPositionX - mouseX;\n    if (this.step) {\n      const stepDistance = scale * this.step;\n      const stepDistanceCenter = stepDistance / 2;\n      const scaleXPositive = Math.abs(change);\n      if (scaleXPositive < stepDistanceCenter) {\n        return 0;\n      }\n      return Math.round(change / stepDistance) * this.step;\n    } else {\n      return change / scale;\n    }\n  }\n  updateSlider(mouseX) {\n    if (this.disabled) {\n      return;\n    }\n    const increment = this.calculateTrackUpdate(mouseX);\n    if (this.activeThumb && increment !== 0) {\n      this.updateValue(increment);\n    }\n  }\n  renderTicks() {\n    const groups = [];\n    for (let i = 0, totalCount = this.totalTickCount(); i < totalCount; i++) {\n      const isPrimary = this.isPrimary(i);\n      groups.push(html`\n        <div part=\"tick-group\">\n          <div part=\"tick\" data-primary=${isPrimary}>\n            ${(isPrimary ? this.hidePrimaryLabels : this.hideSecondaryLabels) ? html`` : html`\n                  <div part=\"tick-label\">\n                    <span part=\"tick-label-inner\">\n                      ${this.labels ? isPrimary ? this.labels[Math.round(i / (this.secondaryTicks + 1))] : '' : this.formatValue(this.tickValue(i))}\n                    </span>\n                  </div>\n                `}\n          </div>\n        </div>\n      `);\n    }\n    return groups;\n  }\n  renderThumb(value, ariaLabel, thumbId) {\n    const percent = `${this.valueToFraction(value) * 100}%`;\n    return html`\n      <div\n        part=\"thumb\"\n        id=${ifDefined(thumbId)}\n        tabindex=${this.disabled ? -1 : 0}\n        style=${styleMap({\n      insetInlineStart: percent\n    })}\n        role=\"slider\"\n        aria-valuemin=${this.actualMin}\n        aria-valuemax=${this.actualMax}\n        aria-valuenow=${value}\n        aria-valuetext=${ifDefined(this.labels ? this.labels[value] : this.valueFormat || this.valueFormatOptions ? this.formatValue(value) : undefined)}\n        aria-label=${ifDefined(ariaLabel)}\n        aria-disabled=${this.disabled ? 'true' : 'false'}\n        @pointerenter=${this.handleThumbPointerEnter}\n        @pointerleave=${this.handleThumbPointerLeave}\n        @focus=${ev => this.activeThumb = ev.target}\n        @blur=${() => {\n      var _a;\n      return (_a = this.activeThumb) === null || _a === void 0 ? void 0 : _a.part.remove('focused'), this.activeThumb = undefined;\n    }}\n      ></div>\n      ${this.hideTooltip ? html`` : html`\n            <div\n              part=\"thumb-label\"\n              style=${styleMap({\n      opacity: this.thumbLabelsVisible ? '1' : '0',\n      insetInlineStart: percent\n    })}\n            >\n              <div part=\"thumb-label-inner\">\n                ${this.labels ? this.labels[value] : this.formatValue(value)}\n              </div>\n            </div>\n          `}\n    `;\n  }\n  renderSteps() {\n    if (!this.discreteTrack || !this.step) {\n      return html``;\n    }\n    const trackRange = this.max - this.min;\n    const interval = 100 / (trackRange / this.step) * 10 / 10;\n    return html`\n      <div part=\"steps\">\n        <svg width=\"100%\" height=\"100%\" style=\"display: flex\">\n          <line\n            x1=\"0\"\n            y1=\"1\"\n            x2=\"100%\"\n            y2=\"1\"\n            stroke=\"currentColor\"\n            stroke-dasharray=\"0, calc(${interval * Math.sqrt(2)}%)\"\n            stroke-linecap=\"round\"\n            stroke-width=\"2px\"\n          ></line>\n        </svg>\n      </div>\n    `;\n  }\n  render() {\n    return html`\n      <div part=\"base\">\n        ${this.tickOrientation === 'mirror' || this.tickOrientation === 'start' ? html`<div part=\"ticks\">${this.renderTicks()}</div>` : html``}\n        <div part=\"track\">\n          <div part=\"inactive\"></div>\n          <div part=\"fill\" style=${styleMap(this.getTrackStyle())}></div>\n          ${this.renderSteps()}\n        </div>\n        ${this.tickOrientation !== 'start' ? html`<div part=\"ticks\">${this.renderTicks()}</div>` : html``}\n        <div part=\"thumbs\">${this.renderThumbs()}</div>\n        <slot @slotchange=${this.handleSlotChange}></slot>\n      </div>\n    `;\n  }\n};\nIgcSliderBaseComponent.styles = styles;\n__decorate([query(`[part~='thumb']`)], IgcSliderBaseComponent.prototype, \"thumb\", void 0);\n__decorate([queryAssignedElements({\n  selector: 'igc-slider-label'\n})], IgcSliderBaseComponent.prototype, \"labelElements\", void 0);\n__decorate([state()], IgcSliderBaseComponent.prototype, \"thumbLabelsVisible\", void 0);\n__decorate([state()], IgcSliderBaseComponent.prototype, \"labels\", void 0);\n__decorate([property({\n  type: Number\n})], IgcSliderBaseComponent.prototype, \"min\", null);\n__decorate([property({\n  type: Number\n})], IgcSliderBaseComponent.prototype, \"max\", null);\n__decorate([property({\n  type: Number,\n  attribute: 'lower-bound'\n})], IgcSliderBaseComponent.prototype, \"lowerBound\", null);\n__decorate([property({\n  type: Number,\n  attribute: 'upper-bound'\n})], IgcSliderBaseComponent.prototype, \"upperBound\", null);\n__decorate([property({\n  type: Boolean,\n  reflect: true\n})], IgcSliderBaseComponent.prototype, \"disabled\", void 0);\n__decorate([property({\n  type: Boolean,\n  attribute: 'discrete-track'\n})], IgcSliderBaseComponent.prototype, \"discreteTrack\", void 0);\n__decorate([property({\n  type: Boolean,\n  attribute: 'hide-tooltip'\n})], IgcSliderBaseComponent.prototype, \"hideTooltip\", void 0);\n__decorate([property({\n  type: Number\n})], IgcSliderBaseComponent.prototype, \"step\", null);\n__decorate([property({\n  type: Number,\n  attribute: 'primary-ticks'\n})], IgcSliderBaseComponent.prototype, \"primaryTicks\", void 0);\n__decorate([property({\n  type: Number,\n  attribute: 'secondary-ticks'\n})], IgcSliderBaseComponent.prototype, \"secondaryTicks\", void 0);\n__decorate([property({\n  attribute: 'tick-orientation'\n})], IgcSliderBaseComponent.prototype, \"tickOrientation\", void 0);\n__decorate([property({\n  type: Boolean,\n  attribute: 'hide-primary-labels'\n})], IgcSliderBaseComponent.prototype, \"hidePrimaryLabels\", void 0);\n__decorate([property({\n  type: Boolean,\n  attribute: 'hide-secondary-labels'\n})], IgcSliderBaseComponent.prototype, \"hideSecondaryLabels\", void 0);\n__decorate([property()], IgcSliderBaseComponent.prototype, \"locale\", void 0);\n__decorate([property({\n  attribute: 'value-format'\n})], IgcSliderBaseComponent.prototype, \"valueFormat\", void 0);\n__decorate([property({\n  attribute: false\n})], IgcSliderBaseComponent.prototype, \"valueFormatOptions\", void 0);\n__decorate([property({\n  type: Number,\n  reflect: true,\n  attribute: 'tick-label-rotation'\n}), blazorTypeOverride('TickLabelRotation', true)], IgcSliderBaseComponent.prototype, \"tickLabelRotation\", void 0);\n__decorate([watch('min', {\n  waitUntilFirstUpdate: true\n}), watch('max', {\n  waitUntilFirstUpdate: true\n}), watch('lowerBound', {\n  waitUntilFirstUpdate: true\n}), watch('upperBound', {\n  waitUntilFirstUpdate: true\n}), watch('step', {\n  waitUntilFirstUpdate: true\n})], IgcSliderBaseComponent.prototype, \"constraintsChange\", null);\n__decorate([watch('labels')], IgcSliderBaseComponent.prototype, \"labelsChange\", null);\nIgcSliderBaseComponent = __decorate([themes({\n  material,\n  bootstrap,\n  fluent,\n  indigo\n}), blazorDeepImport], IgcSliderBaseComponent);\nexport { IgcSliderBaseComponent };","map":{"version":3,"names":["html","LitElement","property","query","queryAssignedElements","state","ifDefined","styleMap","themes","blazorTypeOverride","watch","styles","bootstrap","fluent","indigo","material","defineComponents","IgcSliderLabelComponent","blazorDeepImport","isLTR","IgcSliderBaseComponent","min","value","max","oldVal","_min","labels","requestUpdate","lowerBound","_max","length","upperBound","_lowerBound","valueInRange","actualMax","_upperBound","actualMin","step","_step","constraintsChange","normalizeValue","labelsChange","constructor","pointerCaptured","thumbLabelsVisible","disabled","discreteTrack","hideTooltip","primaryTicks","secondaryTicks","tickOrientation","hidePrimaryLabels","hideSecondaryLabels","locale","tickLabelRotation","pointerDown","event","thumb","closestHandle","focus","startValue","activeValue","updateSlider","clientX","setPointerCapture","pointerId","showThumbLabels","preventDefault","_a","activeThumb","part","remove","pointerMove","lostPointerCapture","hideThumbLabels","emitChangeEvent","undefined","handleKeydown","key","increment","ltr","Math","updated","updateValue","handleThumbPointerEnter","handleThumbPointerLeave","addEventListener","connectedCallback","handleKeyUp","disconnectedCallback","removeEventListener","add","handleSlotChange","labelElements","map","e","textContent","getTrackStyle","_increment","renderThumbs","emitInputEvent","validateValue","normalizeByStep","formatValue","valueFormat","replace","toLocaleString","valueFormatOptions","_event","totalTickCount","tickValue","idx","tickCount","labelStep","labelVal","isPrimary","thumbHoverTimer","clearTimeout","setTimeout","valueToFraction","calculateTrackUpdate","mouseX","thumbBoundaries","getBoundingClientRect","thumbCenter","right","left","thumbPositionX","scale","width","change","stepDistance","stepDistanceCenter","scaleXPositive","abs","round","renderTicks","groups","i","totalCount","push","renderThumb","ariaLabel","thumbId","percent","insetInlineStart","ev","target","opacity","renderSteps","trackRange","interval","sqrt","render","__decorate","selector","type","Number","attribute","Boolean","reflect","waitUntilFirstUpdate"],"sources":["../../../src/components/slider/slider-base.ts"],"sourcesContent":["import { html, LitElement, TemplateResult } from 'lit';\nimport {\n  property,\n  query,\n  queryAssignedElements,\n  state,\n} from 'lit/decorators.js';\nimport { ifDefined } from 'lit/directives/if-defined.js';\nimport { StyleInfo, styleMap } from 'lit/directives/style-map.js';\nimport { themes } from '../../theming/theming-decorator.js';\nimport { blazorTypeOverride } from '../common/decorators/blazorTypeOverride.js';\nimport { watch } from '../common/decorators/watch.js';\nimport { styles } from './themes/light/slider.base.css.js';\nimport { styles as bootstrap } from './themes/light/slider.bootstrap.css.js';\nimport { styles as fluent } from './themes/light/slider.fluent.css.js';\nimport { styles as indigo } from './themes/light/slider.indigo.css.js';\nimport { styles as material } from './themes/light/slider.material.css.js';\n\nimport { defineComponents } from '../common/definitions/defineComponents.js';\nimport IgcSliderLabelComponent from './slider-label.js';\nimport { blazorDeepImport } from '../common/decorators/blazorDeepImport.js';\nimport { isLTR } from '../common/util.js';\n\ndefineComponents(IgcSliderLabelComponent);\n\n@themes({ material, bootstrap, fluent, indigo })\n@blazorDeepImport\nexport class IgcSliderBaseComponent extends LitElement {\n  public static override styles = styles;\n\n  @query(`[part~='thumb']`)\n  protected thumb!: HTMLElement;\n\n  @queryAssignedElements({ selector: 'igc-slider-label' })\n  private labelElements!: HTMLElement[];\n\n  private _lowerBound?: number;\n  private _upperBound?: number;\n  private _min = 0;\n  private _max = 100;\n  private _step = 1;\n  private startValue?: number;\n  private pointerCaptured = false;\n  private thumbHoverTimer: any;\n  protected activeThumb?: HTMLElement;\n\n  @state()\n  protected thumbLabelsVisible = false;\n\n  @state()\n  protected labels?: string[];\n\n  public set min(value: number) {\n    if (value < this.max) {\n      const oldVal = this._min;\n      this._min = this.labels ? 0 : value;\n      this.requestUpdate('min', oldVal);\n\n      if (typeof this.lowerBound === 'number' && this.lowerBound < value) {\n        this.lowerBound = value;\n      }\n    }\n  }\n\n  /**\n   * The minimum value of the slider scale. Defaults to 0.\n   * @attr\n   */\n  @property({ type: Number })\n  public get min() {\n    return this._min;\n  }\n\n  public set max(value: number) {\n    if (value > this.min) {\n      const oldVal = this._max;\n      this._max = this.labels ? this.labels.length - 1 : value;\n      this.requestUpdate('max', oldVal);\n\n      if (typeof this.upperBound === 'number' && this.upperBound > value) {\n        this.upperBound = value;\n      }\n    }\n  }\n\n  /**\n   * The maximum value of the slider scale. Defaults to 100.\n   * @attr\n   */\n  @property({ type: Number })\n  public get max() {\n    return this._max;\n  }\n\n  public set lowerBound(value: number | undefined) {\n    const oldVal = this._lowerBound;\n\n    if (typeof value === 'number') {\n      this._lowerBound = this.valueInRange(value, this.min, this.actualMax);\n    } else {\n      this._lowerBound = value;\n    }\n    this.requestUpdate('lowerBound', oldVal);\n  }\n\n  /**\n   * The lower bound of the slider value. If not set, the `min` value is applied.\n   * @attr lower-bound\n   */\n  @property({ type: Number, attribute: 'lower-bound' })\n  public get lowerBound(): number | undefined {\n    return this._lowerBound;\n  }\n\n  public set upperBound(value: number | undefined) {\n    const oldVal = this._upperBound;\n\n    if (typeof value === 'number') {\n      this._upperBound = this.valueInRange(value, this.actualMin, this.max);\n    } else {\n      this._upperBound = value;\n    }\n    this.requestUpdate('upperBound', oldVal);\n  }\n\n  /**\n   * The upper bound of the slider value. If not set, the `max` value is applied.\n   * @attr upper-bound\n   */\n  @property({ type: Number, attribute: 'upper-bound' })\n  public get upperBound(): number | undefined {\n    return this._upperBound;\n  }\n\n  /**\n   * Disables the UI interactions of the slider.\n   * @attr\n   */\n  @property({ type: Boolean, reflect: true })\n  public disabled = false;\n\n  /**\n   * Marks the slider track as discrete so it displays the steps.\n   * If the `step` is 0, the slider will remain continuos even if `discreteTrack` is `true`.\n   * @attr discrete-track\n   */\n  @property({ type: Boolean, attribute: 'discrete-track' })\n  public discreteTrack = false;\n\n  /**\n   * Hides the thumb tooltip.\n   * @attr hide-tooltip\n   */\n  @property({ type: Boolean, attribute: 'hide-tooltip' })\n  public hideTooltip = false;\n\n  public set step(value: number) {\n    const oldVal = this._step;\n    this._step = this.labels ? 1 : value;\n    this.requestUpdate('step', oldVal);\n  }\n\n  /**\n   * Specifies the granularity that the value must adhere to.\n   * If set to 0 no stepping is implied and any value in the range is allowed.\n   * @attr\n   */\n  @property({ type: Number })\n  public get step() {\n    return this._step;\n  }\n\n  /**\n   * The number of primary ticks. It defaults to 0 which means no primary ticks are displayed.\n   * @attr primary-ticks\n   */\n  @property({ type: Number, attribute: 'primary-ticks' })\n  public primaryTicks = 0;\n\n  /**\n   * The number of secondary ticks. It defaults to 0 which means no secondary ticks are displayed.\n   * @attr secondary-ticks\n   */\n  @property({ type: Number, attribute: 'secondary-ticks' })\n  public secondaryTicks = 0;\n\n  /**\n   * Changes the orientation of the ticks.\n   * @attr tick-orientation\n   */\n  @property({ attribute: 'tick-orientation' })\n  public tickOrientation: 'mirror' | 'start' | 'end' = 'end';\n\n  /**\n   * Hides the primary tick labels.\n   * @attr hide-primary-labels\n   */\n  @property({ type: Boolean, attribute: 'hide-primary-labels' })\n  public hidePrimaryLabels = false;\n\n  /**\n   * Hides the secondary tick labels.\n   * @attr hide-secondary-labels\n   */\n  @property({ type: Boolean, attribute: 'hide-secondary-labels' })\n  public hideSecondaryLabels = false;\n\n  /**\n   * The locale used to format the thumb and tick label values in the slider.\n   * @attr\n   */\n  @property()\n  public locale = 'en';\n\n  /**\n   * String format used for the thumb and tick label values in the slider.\n   * @attr value-format\n   */\n  @property({ attribute: 'value-format' })\n  public valueFormat?: string;\n\n  /**\n   * Number format options used for the thumb and tick label values in the slider.\n   */\n  /* blazorSuppress */\n  @property({ attribute: false })\n  public valueFormatOptions?: Intl.NumberFormatOptions;\n\n  /**\n   * The degrees for the rotation of the tick labels. Defaults to 0.\n   * @attr tick-label-rotation\n   */\n  @property({ type: Number, reflect: true, attribute: 'tick-label-rotation' })\n  @blazorTypeOverride('TickLabelRotation', true)\n  public tickLabelRotation: 0 | 90 | -90 = 0;\n\n  @watch('min', { waitUntilFirstUpdate: true })\n  @watch('max', { waitUntilFirstUpdate: true })\n  @watch('lowerBound', { waitUntilFirstUpdate: true })\n  @watch('upperBound', { waitUntilFirstUpdate: true })\n  @watch('step', { waitUntilFirstUpdate: true })\n  protected constraintsChange() {\n    this.normalizeValue();\n  }\n\n  @watch('labels')\n  protected labelsChange() {\n    if (this.labels) {\n      this.min = 0;\n      this.max = this.labels.length - 1;\n      this.step = 1;\n    }\n  }\n\n  constructor() {\n    super();\n    this.addEventListener('pointerdown', this.pointerDown);\n    this.addEventListener('pointermove', this.pointerMove);\n    this.addEventListener('lostpointercapture', this.lostPointerCapture);\n    this.addEventListener('keydown', this.handleKeydown);\n  }\n\n  public override connectedCallback() {\n    super.connectedCallback();\n    this.normalizeValue();\n    this.addEventListener('keyup', this.handleKeyUp);\n  }\n\n  public override disconnectedCallback() {\n    this.removeEventListener('keyup', this.handleKeyUp);\n    super.disconnectedCallback();\n  }\n\n  protected handleKeyUp() {\n    this.activeThumb?.part.add('focused');\n  }\n\n  protected handleSlotChange() {\n    this.labels =\n      this.labelElements && this.labelElements.length\n        ? this.labelElements.map((e) => e.textContent as string)\n        : undefined;\n  }\n\n  /* c8 ignore next 3 */\n  protected get activeValue() {\n    return 0;\n  }\n\n  /* c8 ignore next */\n  protected normalizeValue(): void {}\n\n  /* c8 ignore next 3 */\n  protected getTrackStyle(): StyleInfo {\n    return {};\n  }\n\n  /* c8 ignore next 3 */\n  protected updateValue(_increment: number): boolean {\n    return false;\n  }\n\n  /* c8 ignore next 3 */\n  protected renderThumbs(): TemplateResult<1> {\n    return html``;\n  }\n\n  /* c8 ignore next */\n  protected emitInputEvent() {}\n\n  /* c8 ignore next */\n  protected emitChangeEvent() {}\n\n  protected get actualMin(): number {\n    return typeof this.lowerBound === 'number'\n      ? (this.lowerBound as number)\n      : this.min;\n  }\n\n  protected get actualMax(): number {\n    return typeof this.upperBound === 'number'\n      ? (this.upperBound as number)\n      : this.max;\n  }\n\n  protected validateValue(value: number) {\n    value = this.valueInRange(value, this.actualMin, this.actualMax);\n    value = this.normalizeByStep(value);\n\n    return value;\n  }\n\n  protected formatValue(value: number) {\n    return this.valueFormat\n      ? this.valueFormat.replace(\n          '{0}',\n          value.toLocaleString(this.locale, this.valueFormatOptions)\n        )\n      : value.toLocaleString(this.locale, this.valueFormatOptions);\n  }\n\n  private normalizeByStep(value: number) {\n    return this.step ? value - ((value - this.actualMin) % this.step) : value;\n  }\n\n  protected closestHandle(_event: PointerEvent): HTMLElement {\n    return this.thumb;\n  }\n\n  private totalTickCount() {\n    const primaryTicks = this.labels\n      ? this.primaryTicks > 0\n        ? this.labels.length\n        : 0\n      : this.primaryTicks === 1\n      ? 2\n      : this.primaryTicks;\n\n    return primaryTicks > 0\n      ? (primaryTicks - 1) * this.secondaryTicks + primaryTicks\n      : this.secondaryTicks > 0\n      ? this.secondaryTicks\n      : 0;\n  }\n\n  private tickValue(idx: number) {\n    const tickCount = this.totalTickCount();\n    const labelStep =\n      tickCount > 1\n        ? (this.max - this.min) / (tickCount - 1)\n        : this.max - this.min;\n    const labelVal = labelStep * idx;\n\n    return this.min + labelVal;\n  }\n\n  private isPrimary(idx: number) {\n    return this.primaryTicks <= 0\n      ? false\n      : idx % (this.secondaryTicks + 1) === 0;\n  }\n\n  private showThumbLabels() {\n    if (this.disabled || this.hideTooltip) {\n      return;\n    }\n\n    if (this.thumbHoverTimer) {\n      clearTimeout(this.thumbHoverTimer);\n      this.thumbHoverTimer = null;\n    }\n\n    this.thumbLabelsVisible = true;\n  }\n\n  private hideThumbLabels() {\n    if (this.pointerCaptured || !this.thumbLabelsVisible) {\n      return;\n    }\n\n    this.thumbHoverTimer = setTimeout(() => {\n      this.thumbLabelsVisible = false;\n    }, 750);\n  }\n\n  private valueInRange(value: number, min = 0, max = 100) {\n    return Math.max(Math.min(value, max), min);\n  }\n\n  protected valueToFraction(value: number) {\n    return (value - this.min) / (this.max - this.min);\n  }\n\n  private calculateTrackUpdate(mouseX: number): number {\n    if (!this.activeThumb) {\n      return 0;\n    }\n\n    const thumbBoundaries = this.activeThumb.getBoundingClientRect();\n    const thumbCenter = (thumbBoundaries.right - thumbBoundaries.left) / 2;\n    const thumbPositionX = thumbBoundaries.left + thumbCenter;\n\n    const scale = this.getBoundingClientRect().width / (this.max - this.min);\n    const change = isLTR(this)\n      ? mouseX - thumbPositionX\n      : thumbPositionX - mouseX;\n\n    if (this.step) {\n      const stepDistance = scale * this.step;\n      const stepDistanceCenter = stepDistance / 2;\n\n      // If the thumb scale range (slider update) is less than a half step,\n      // the position stays the same.\n      const scaleXPositive = Math.abs(change);\n      if (scaleXPositive < stepDistanceCenter) {\n        return 0;\n      }\n\n      return Math.round(change / stepDistance) * this.step;\n    } else {\n      return change / scale;\n    }\n  }\n\n  private updateSlider(mouseX: number) {\n    if (this.disabled) {\n      return;\n    }\n\n    const increment = this.calculateTrackUpdate(mouseX);\n    if (this.activeThumb && increment !== 0) {\n      this.updateValue(increment);\n    }\n  }\n\n  private pointerDown = (event: PointerEvent) => {\n    const thumb = this.closestHandle(event);\n    thumb.focus();\n\n    this.startValue = this.activeValue;\n    this.updateSlider(event.clientX);\n\n    this.setPointerCapture(event.pointerId);\n    this.pointerCaptured = true;\n    this.showThumbLabels();\n    event.preventDefault();\n    this.activeThumb?.part.remove('focused');\n  };\n\n  private pointerMove = (event: PointerEvent) => {\n    if (this.pointerCaptured) {\n      this.updateSlider(event.clientX);\n    }\n  };\n\n  private lostPointerCapture = () => {\n    this.pointerCaptured = false;\n    this.hideThumbLabels();\n\n    if (this.startValue! !== this.activeValue) {\n      this.emitChangeEvent();\n    }\n    this.startValue = undefined;\n  };\n\n  private handleKeydown = (event: KeyboardEvent) => {\n    if (this.disabled) {\n      return;\n    }\n\n    const { key } = event;\n\n    let increment = 0;\n    const value = this.activeValue;\n    const step = this.step ? this.step : 1;\n    const ltr = isLTR(this);\n\n    switch (key) {\n      case 'ArrowLeft':\n        increment += ltr ? -step : step;\n        break;\n      case 'ArrowRight':\n        increment += ltr ? step : -step;\n        break;\n      case 'ArrowUp':\n        increment = step;\n        break;\n      case 'ArrowDown':\n        increment = -step;\n        break;\n      case 'Home':\n        increment = this.actualMin - value;\n        break;\n      case 'End':\n        increment = this.actualMax - value;\n        break;\n      case 'PageUp':\n        increment = Math.max((this.actualMax - this.actualMin) / 10, step);\n        break;\n      case 'PageDown':\n        increment = -Math.max((this.actualMax - this.actualMin) / 10, step);\n        break;\n      default:\n        return;\n    }\n\n    if (increment) {\n      const updated = this.updateValue(increment);\n      this.showThumbLabels();\n      this.hideThumbLabels();\n\n      if (updated) {\n        this.emitChangeEvent();\n      }\n    }\n  };\n\n  protected handleThumbPointerEnter = () => {\n    this.showThumbLabels();\n  };\n\n  protected handleThumbPointerLeave = () => {\n    this.hideThumbLabels();\n  };\n\n  protected renderTicks() {\n    const groups = [];\n    for (let i = 0, totalCount = this.totalTickCount(); i < totalCount; i++) {\n      const isPrimary = this.isPrimary(i);\n      groups.push(html`\n        <div part=\"tick-group\">\n          <div part=\"tick\" data-primary=${isPrimary}>\n            ${(isPrimary ? this.hidePrimaryLabels : this.hideSecondaryLabels)\n              ? html``\n              : html`\n                  <div part=\"tick-label\">\n                    <span part=\"tick-label-inner\">\n                      ${this.labels\n                        ? isPrimary\n                          ? this.labels[\n                              Math.round(i / (this.secondaryTicks + 1))\n                            ]\n                          : ''\n                        : this.formatValue(this.tickValue(i))}\n                    </span>\n                  </div>\n                `}\n          </div>\n        </div>\n      `);\n    }\n    return groups;\n  }\n\n  protected renderThumb(value: number, ariaLabel?: string, thumbId?: string) {\n    const percent = `${this.valueToFraction(value) * 100}%`;\n\n    return html`\n      <div\n        part=\"thumb\"\n        id=${ifDefined(thumbId)}\n        tabindex=${this.disabled ? -1 : 0}\n        style=${styleMap({ insetInlineStart: percent })}\n        role=\"slider\"\n        aria-valuemin=${this.actualMin}\n        aria-valuemax=${this.actualMax}\n        aria-valuenow=${value}\n        aria-valuetext=${ifDefined(\n          this.labels\n            ? this.labels[value]\n            : this.valueFormat || this.valueFormatOptions\n            ? this.formatValue(value)\n            : undefined\n        )}\n        aria-label=${ifDefined(ariaLabel)}\n        aria-disabled=${this.disabled ? 'true' : 'false'}\n        @pointerenter=${this.handleThumbPointerEnter}\n        @pointerleave=${this.handleThumbPointerLeave}\n        @focus=${(ev: Event) => (this.activeThumb = ev.target as HTMLElement)}\n        @blur=${() => (\n          this.activeThumb?.part.remove('focused'),\n          (this.activeThumb = undefined)\n        )}\n      ></div>\n      ${this.hideTooltip\n        ? html``\n        : html`\n            <div\n              part=\"thumb-label\"\n              style=${styleMap({\n                opacity: this.thumbLabelsVisible ? '1' : '0',\n                insetInlineStart: percent,\n              })}\n            >\n              <div part=\"thumb-label-inner\">\n                ${this.labels ? this.labels[value] : this.formatValue(value)}\n              </div>\n            </div>\n          `}\n    `;\n  }\n\n  private renderSteps() {\n    if (!this.discreteTrack || !this.step) {\n      return html``;\n    }\n\n    const trackRange = this.max - this.min;\n    const interval = ((100 / (trackRange / this.step)) * 10) / 10;\n\n    return html`\n      <div part=\"steps\">\n        <svg width=\"100%\" height=\"100%\" style=\"display: flex\">\n          <line\n            x1=\"0\"\n            y1=\"1\"\n            x2=\"100%\"\n            y2=\"1\"\n            stroke=\"currentColor\"\n            stroke-dasharray=\"0, calc(${interval * Math.sqrt(2)}%)\"\n            stroke-linecap=\"round\"\n            stroke-width=\"2px\"\n          ></line>\n        </svg>\n      </div>\n    `;\n  }\n\n  protected override render() {\n    return html`\n      <div part=\"base\">\n        ${this.tickOrientation === 'mirror' || this.tickOrientation === 'start'\n          ? html`<div part=\"ticks\">${this.renderTicks()}</div>`\n          : html``}\n        <div part=\"track\">\n          <div part=\"inactive\"></div>\n          <div part=\"fill\" style=${styleMap(this.getTrackStyle())}></div>\n          ${this.renderSteps()}\n        </div>\n        ${this.tickOrientation !== 'start'\n          ? html`<div part=\"ticks\">${this.renderTicks()}</div>`\n          : html``}\n        <div part=\"thumbs\">${this.renderThumbs()}</div>\n        <slot @slotchange=${this.handleSlotChange}></slot>\n      </div>\n    `;\n  }\n}\n"],"mappings":";;;;;;;;AAAA,SAASA,IAAI,EAAEC,UAAU,QAAwB,KAAK;AACtD,SACEC,QAAQ,EACRC,KAAK,EACLC,qBAAqB,EACrBC,KAAK,QACA,mBAAmB;AAC1B,SAASC,SAAS,QAAQ,8BAA8B;AACxD,SAAoBC,QAAQ,QAAQ,6BAA6B;AACjE,SAASC,MAAM,QAAQ,oCAAoC;AAC3D,SAASC,kBAAkB,QAAQ,4CAA4C;AAC/E,SAASC,KAAK,QAAQ,+BAA+B;AACrD,SAASC,MAAM,QAAQ,mCAAmC;AAC1D,SAASA,MAAM,IAAIC,SAAS,QAAQ,wCAAwC;AAC5E,SAASD,MAAM,IAAIE,MAAM,QAAQ,qCAAqC;AACtE,SAASF,MAAM,IAAIG,MAAM,QAAQ,qCAAqC;AACtE,SAASH,MAAM,IAAII,QAAQ,QAAQ,uCAAuC;AAE1E,SAASC,gBAAgB,QAAQ,2CAA2C;AAC5E,OAAOC,uBAAuB,MAAM,mBAAmB;AACvD,SAASC,gBAAgB,QAAQ,0CAA0C;AAC3E,SAASC,KAAK,QAAQ,mBAAmB;AAEzCH,gBAAgB,CAACC,uBAAuB,CAAC;AAIlC,IAAMG,sBAAsB,GAA5B,MAAMA,sBAAuB,SAAQnB,UAAU;EAyBpD,IAAWoB,GAAGA,CAACC,KAAa;IAC1B,IAAIA,KAAK,GAAG,IAAI,CAACC,GAAG,EAAE;MACpB,MAAMC,MAAM,GAAG,IAAI,CAACC,IAAI;MACxB,IAAI,CAACA,IAAI,GAAG,IAAI,CAACC,MAAM,GAAG,CAAC,GAAGJ,KAAK;MACnC,IAAI,CAACK,aAAa,CAAC,KAAK,EAAEH,MAAM,CAAC;MAEjC,IAAI,OAAO,IAAI,CAACI,UAAU,KAAK,QAAQ,IAAI,IAAI,CAACA,UAAU,GAAGN,KAAK,EAAE;QAClE,IAAI,CAACM,UAAU,GAAGN,KAAK;;;EAG7B;EAOA,IAAWD,GAAGA,CAAA;IACZ,OAAO,IAAI,CAACI,IAAI;EAClB;EAEA,IAAWF,GAAGA,CAACD,KAAa;IAC1B,IAAIA,KAAK,GAAG,IAAI,CAACD,GAAG,EAAE;MACpB,MAAMG,MAAM,GAAG,IAAI,CAACK,IAAI;MACxB,IAAI,CAACA,IAAI,GAAG,IAAI,CAACH,MAAM,GAAG,IAAI,CAACA,MAAM,CAACI,MAAM,GAAG,CAAC,GAAGR,KAAK;MACxD,IAAI,CAACK,aAAa,CAAC,KAAK,EAAEH,MAAM,CAAC;MAEjC,IAAI,OAAO,IAAI,CAACO,UAAU,KAAK,QAAQ,IAAI,IAAI,CAACA,UAAU,GAAGT,KAAK,EAAE;QAClE,IAAI,CAACS,UAAU,GAAGT,KAAK;;;EAG7B;EAOA,IAAWC,GAAGA,CAAA;IACZ,OAAO,IAAI,CAACM,IAAI;EAClB;EAEA,IAAWD,UAAUA,CAACN,KAAyB;IAC7C,MAAME,MAAM,GAAG,IAAI,CAACQ,WAAW;IAE/B,IAAI,OAAOV,KAAK,KAAK,QAAQ,EAAE;MAC7B,IAAI,CAACU,WAAW,GAAG,IAAI,CAACC,YAAY,CAACX,KAAK,EAAE,IAAI,CAACD,GAAG,EAAE,IAAI,CAACa,SAAS,CAAC;KACtE,MAAM;MACL,IAAI,CAACF,WAAW,GAAGV,KAAK;;IAE1B,IAAI,CAACK,aAAa,CAAC,YAAY,EAAEH,MAAM,CAAC;EAC1C;EAOA,IAAWI,UAAUA,CAAA;IACnB,OAAO,IAAI,CAACI,WAAW;EACzB;EAEA,IAAWD,UAAUA,CAACT,KAAyB;IAC7C,MAAME,MAAM,GAAG,IAAI,CAACW,WAAW;IAE/B,IAAI,OAAOb,KAAK,KAAK,QAAQ,EAAE;MAC7B,IAAI,CAACa,WAAW,GAAG,IAAI,CAACF,YAAY,CAACX,KAAK,EAAE,IAAI,CAACc,SAAS,EAAE,IAAI,CAACb,GAAG,CAAC;KACtE,MAAM;MACL,IAAI,CAACY,WAAW,GAAGb,KAAK;;IAE1B,IAAI,CAACK,aAAa,CAAC,YAAY,EAAEH,MAAM,CAAC;EAC1C;EAOA,IAAWO,UAAUA,CAAA;IACnB,OAAO,IAAI,CAACI,WAAW;EACzB;EAwBA,IAAWE,IAAIA,CAACf,KAAa;IAC3B,MAAME,MAAM,GAAG,IAAI,CAACc,KAAK;IACzB,IAAI,CAACA,KAAK,GAAG,IAAI,CAACZ,MAAM,GAAG,CAAC,GAAGJ,KAAK;IACpC,IAAI,CAACK,aAAa,CAAC,MAAM,EAAEH,MAAM,CAAC;EACpC;EAQA,IAAWa,IAAIA,CAAA;IACb,OAAO,IAAI,CAACC,KAAK;EACnB;EAuEUC,iBAAiBA,CAAA;IACzB,IAAI,CAACC,cAAc,EAAE;EACvB;EAGUC,YAAYA,CAAA;IACpB,IAAI,IAAI,CAACf,MAAM,EAAE;MACf,IAAI,CAACL,GAAG,GAAG,CAAC;MACZ,IAAI,CAACE,GAAG,GAAG,IAAI,CAACG,MAAM,CAACI,MAAM,GAAG,CAAC;MACjC,IAAI,CAACO,IAAI,GAAG,CAAC;;EAEjB;EAEAK,YAAA;IACE,KAAK,EAAE;IAzND,KAAAjB,IAAI,GAAG,CAAC;IACR,KAAAI,IAAI,GAAG,GAAG;IACV,KAAAS,KAAK,GAAG,CAAC;IAET,KAAAK,eAAe,GAAG,KAAK;IAKrB,KAAAC,kBAAkB,GAAG,KAAK;IA4F7B,KAAAC,QAAQ,GAAG,KAAK;IAQhB,KAAAC,aAAa,GAAG,KAAK;IAOrB,KAAAC,WAAW,GAAG,KAAK;IAuBnB,KAAAC,YAAY,GAAG,CAAC;IAOhB,KAAAC,cAAc,GAAG,CAAC;IAOlB,KAAAC,eAAe,GAA+B,KAAK;IAOnD,KAAAC,iBAAiB,GAAG,KAAK;IAOzB,KAAAC,mBAAmB,GAAG,KAAK;IAO3B,KAAAC,MAAM,GAAG,IAAI;IAsBb,KAAAC,iBAAiB,GAAiB,CAAC;IA6NlC,KAAAC,WAAW,GAAIC,KAAmB,IAAI;;MAC5C,MAAMC,KAAK,GAAG,IAAI,CAACC,aAAa,CAACF,KAAK,CAAC;MACvCC,KAAK,CAACE,KAAK,EAAE;MAEb,IAAI,CAACC,UAAU,GAAG,IAAI,CAACC,WAAW;MAClC,IAAI,CAACC,YAAY,CAACN,KAAK,CAACO,OAAO,CAAC;MAEhC,IAAI,CAACC,iBAAiB,CAACR,KAAK,CAACS,SAAS,CAAC;MACvC,IAAI,CAACtB,eAAe,GAAG,IAAI;MAC3B,IAAI,CAACuB,eAAe,EAAE;MACtBV,KAAK,CAACW,cAAc,EAAE;MACtB,CAAAC,EAAA,OAAI,CAACC,WAAW,cAAAD,EAAA,uBAAAA,EAAA,CAAEE,IAAI,CAACC,MAAM,CAAC,SAAS,CAAC;IAC1C,CAAC;IAEO,KAAAC,WAAW,GAAIhB,KAAmB,IAAI;MAC5C,IAAI,IAAI,CAACb,eAAe,EAAE;QACxB,IAAI,CAACmB,YAAY,CAACN,KAAK,CAACO,OAAO,CAAC;;IAEpC,CAAC;IAEO,KAAAU,kBAAkB,GAAG,MAAK;MAChC,IAAI,CAAC9B,eAAe,GAAG,KAAK;MAC5B,IAAI,CAAC+B,eAAe,EAAE;MAEtB,IAAI,IAAI,CAACd,UAAW,KAAK,IAAI,CAACC,WAAW,EAAE;QACzC,IAAI,CAACc,eAAe,EAAE;;MAExB,IAAI,CAACf,UAAU,GAAGgB,SAAS;IAC7B,CAAC;IAEO,KAAAC,aAAa,GAAIrB,KAAoB,IAAI;MAC/C,IAAI,IAAI,CAACX,QAAQ,EAAE;QACjB;;MAGF,MAAM;QAAEiC;MAAG,CAAE,GAAGtB,KAAK;MAErB,IAAIuB,SAAS,GAAG,CAAC;MACjB,MAAMzD,KAAK,GAAG,IAAI,CAACuC,WAAW;MAC9B,MAAMxB,IAAI,GAAG,IAAI,CAACA,IAAI,GAAG,IAAI,CAACA,IAAI,GAAG,CAAC;MACtC,MAAM2C,GAAG,GAAG7D,KAAK,CAAC,IAAI,CAAC;MAEvB,QAAQ2D,GAAG;QACT,KAAK,WAAW;UACdC,SAAS,IAAIC,GAAG,GAAG,CAAC3C,IAAI,GAAGA,IAAI;UAC/B;QACF,KAAK,YAAY;UACf0C,SAAS,IAAIC,GAAG,GAAG3C,IAAI,GAAG,CAACA,IAAI;UAC/B;QACF,KAAK,SAAS;UACZ0C,SAAS,GAAG1C,IAAI;UAChB;QACF,KAAK,WAAW;UACd0C,SAAS,GAAG,CAAC1C,IAAI;UACjB;QACF,KAAK,MAAM;UACT0C,SAAS,GAAG,IAAI,CAAC3C,SAAS,GAAGd,KAAK;UAClC;QACF,KAAK,KAAK;UACRyD,SAAS,GAAG,IAAI,CAAC7C,SAAS,GAAGZ,KAAK;UAClC;QACF,KAAK,QAAQ;UACXyD,SAAS,GAAGE,IAAI,CAAC1D,GAAG,CAAC,CAAC,IAAI,CAACW,SAAS,GAAG,IAAI,CAACE,SAAS,IAAI,EAAE,EAAEC,IAAI,CAAC;UAClE;QACF,KAAK,UAAU;UACb0C,SAAS,GAAG,CAACE,IAAI,CAAC1D,GAAG,CAAC,CAAC,IAAI,CAACW,SAAS,GAAG,IAAI,CAACE,SAAS,IAAI,EAAE,EAAEC,IAAI,CAAC;UACnE;QACF;UACE;MAAO;MAGX,IAAI0C,SAAS,EAAE;QACb,MAAMG,OAAO,GAAG,IAAI,CAACC,WAAW,CAACJ,SAAS,CAAC;QAC3C,IAAI,CAACb,eAAe,EAAE;QACtB,IAAI,CAACQ,eAAe,EAAE;QAEtB,IAAIQ,OAAO,EAAE;UACX,IAAI,CAACP,eAAe,EAAE;;;IAG5B,CAAC;IAES,KAAAS,uBAAuB,GAAG,MAAK;MACvC,IAAI,CAAClB,eAAe,EAAE;IACxB,CAAC;IAES,KAAAmB,uBAAuB,GAAG,MAAK;MACvC,IAAI,CAACX,eAAe,EAAE;IACxB,CAAC;IA/RC,IAAI,CAACY,gBAAgB,CAAC,aAAa,EAAE,IAAI,CAAC/B,WAAW,CAAC;IACtD,IAAI,CAAC+B,gBAAgB,CAAC,aAAa,EAAE,IAAI,CAACd,WAAW,CAAC;IACtD,IAAI,CAACc,gBAAgB,CAAC,oBAAoB,EAAE,IAAI,CAACb,kBAAkB,CAAC;IACpE,IAAI,CAACa,gBAAgB,CAAC,SAAS,EAAE,IAAI,CAACT,aAAa,CAAC;EACtD;EAEgBU,iBAAiBA,CAAA;IAC/B,KAAK,CAACA,iBAAiB,EAAE;IACzB,IAAI,CAAC/C,cAAc,EAAE;IACrB,IAAI,CAAC8C,gBAAgB,CAAC,OAAO,EAAE,IAAI,CAACE,WAAW,CAAC;EAClD;EAEgBC,oBAAoBA,CAAA;IAClC,IAAI,CAACC,mBAAmB,CAAC,OAAO,EAAE,IAAI,CAACF,WAAW,CAAC;IACnD,KAAK,CAACC,oBAAoB,EAAE;EAC9B;EAEUD,WAAWA,CAAA;;IACnB,CAAApB,EAAA,OAAI,CAACC,WAAW,cAAAD,EAAA,uBAAAA,EAAA,CAAEE,IAAI,CAACqB,GAAG,CAAC,SAAS,CAAC;EACvC;EAEUC,gBAAgBA,CAAA;IACxB,IAAI,CAAClE,MAAM,GACT,IAAI,CAACmE,aAAa,IAAI,IAAI,CAACA,aAAa,CAAC/D,MAAM,GAC3C,IAAI,CAAC+D,aAAa,CAACC,GAAG,CAAEC,CAAC,IAAKA,CAAC,CAACC,WAAqB,CAAC,GACtDpB,SAAS;EACjB;EAGA,IAAcf,WAAWA,CAAA;IACvB,OAAO,CAAC;EACV;EAGUrB,cAAcA,CAAA,GAAU;EAGxByD,aAAaA,CAAA;IACrB,OAAO,EAAE;EACX;EAGUd,WAAWA,CAACe,UAAkB;IACtC,OAAO,KAAK;EACd;EAGUC,YAAYA,CAAA;IACpB,OAAOnG,IAAI,EAAE;EACf;EAGUoG,cAAcA,CAAA,GAAI;EAGlBzB,eAAeA,CAAA,GAAI;EAE7B,IAAcvC,SAASA,CAAA;IACrB,OAAO,OAAO,IAAI,CAACR,UAAU,KAAK,QAAQ,GACrC,IAAI,CAACA,UAAqB,GAC3B,IAAI,CAACP,GAAG;EACd;EAEA,IAAca,SAASA,CAAA;IACrB,OAAO,OAAO,IAAI,CAACH,UAAU,KAAK,QAAQ,GACrC,IAAI,CAACA,UAAqB,GAC3B,IAAI,CAACR,GAAG;EACd;EAEU8E,aAAaA,CAAC/E,KAAa;IACnCA,KAAK,GAAG,IAAI,CAACW,YAAY,CAACX,KAAK,EAAE,IAAI,CAACc,SAAS,EAAE,IAAI,CAACF,SAAS,CAAC;IAChEZ,KAAK,GAAG,IAAI,CAACgF,eAAe,CAAChF,KAAK,CAAC;IAEnC,OAAOA,KAAK;EACd;EAEUiF,WAAWA,CAACjF,KAAa;IACjC,OAAO,IAAI,CAACkF,WAAW,GACnB,IAAI,CAACA,WAAW,CAACC,OAAO,CACtB,KAAK,EACLnF,KAAK,CAACoF,cAAc,CAAC,IAAI,CAACrD,MAAM,EAAE,IAAI,CAACsD,kBAAkB,CAAC,CAC3D,GACDrF,KAAK,CAACoF,cAAc,CAAC,IAAI,CAACrD,MAAM,EAAE,IAAI,CAACsD,kBAAkB,CAAC;EAChE;EAEQL,eAAeA,CAAChF,KAAa;IACnC,OAAO,IAAI,CAACe,IAAI,GAAGf,KAAK,GAAI,CAACA,KAAK,GAAG,IAAI,CAACc,SAAS,IAAI,IAAI,CAACC,IAAK,GAAGf,KAAK;EAC3E;EAEUoC,aAAaA,CAACkD,MAAoB;IAC1C,OAAO,IAAI,CAACnD,KAAK;EACnB;EAEQoD,cAAcA,CAAA;IACpB,MAAM7D,YAAY,GAAG,IAAI,CAACtB,MAAM,GAC5B,IAAI,CAACsB,YAAY,GAAG,CAAC,GACnB,IAAI,CAACtB,MAAM,CAACI,MAAM,GAClB,CAAC,GACH,IAAI,CAACkB,YAAY,KAAK,CAAC,GACvB,CAAC,GACD,IAAI,CAACA,YAAY;IAErB,OAAOA,YAAY,GAAG,CAAC,GACnB,CAACA,YAAY,GAAG,CAAC,IAAI,IAAI,CAACC,cAAc,GAAGD,YAAY,GACvD,IAAI,CAACC,cAAc,GAAG,CAAC,GACvB,IAAI,CAACA,cAAc,GACnB,CAAC;EACP;EAEQ6D,SAASA,CAACC,GAAW;IAC3B,MAAMC,SAAS,GAAG,IAAI,CAACH,cAAc,EAAE;IACvC,MAAMI,SAAS,GACbD,SAAS,GAAG,CAAC,GACT,CAAC,IAAI,CAACzF,GAAG,GAAG,IAAI,CAACF,GAAG,KAAK2F,SAAS,GAAG,CAAC,CAAC,GACvC,IAAI,CAACzF,GAAG,GAAG,IAAI,CAACF,GAAG;IACzB,MAAM6F,QAAQ,GAAGD,SAAS,GAAGF,GAAG;IAEhC,OAAO,IAAI,CAAC1F,GAAG,GAAG6F,QAAQ;EAC5B;EAEQC,SAASA,CAACJ,GAAW;IAC3B,OAAO,IAAI,CAAC/D,YAAY,IAAI,CAAC,GACzB,KAAK,GACL+D,GAAG,IAAI,IAAI,CAAC9D,cAAc,GAAG,CAAC,CAAC,KAAK,CAAC;EAC3C;EAEQiB,eAAeA,CAAA;IACrB,IAAI,IAAI,CAACrB,QAAQ,IAAI,IAAI,CAACE,WAAW,EAAE;MACrC;;IAGF,IAAI,IAAI,CAACqE,eAAe,EAAE;MACxBC,YAAY,CAAC,IAAI,CAACD,eAAe,CAAC;MAClC,IAAI,CAACA,eAAe,GAAG,IAAI;;IAG7B,IAAI,CAACxE,kBAAkB,GAAG,IAAI;EAChC;EAEQ8B,eAAeA,CAAA;IACrB,IAAI,IAAI,CAAC/B,eAAe,IAAI,CAAC,IAAI,CAACC,kBAAkB,EAAE;MACpD;;IAGF,IAAI,CAACwE,eAAe,GAAGE,UAAU,CAAC,MAAK;MACrC,IAAI,CAAC1E,kBAAkB,GAAG,KAAK;IACjC,CAAC,EAAE,GAAG,CAAC;EACT;EAEQX,YAAYA,CAACX,KAAa,EAAED,GAAG,GAAG,CAAC,EAAEE,GAAG,GAAG,GAAG;IACpD,OAAO0D,IAAI,CAAC1D,GAAG,CAAC0D,IAAI,CAAC5D,GAAG,CAACC,KAAK,EAAEC,GAAG,CAAC,EAAEF,GAAG,CAAC;EAC5C;EAEUkG,eAAeA,CAACjG,KAAa;IACrC,OAAO,CAACA,KAAK,GAAG,IAAI,CAACD,GAAG,KAAK,IAAI,CAACE,GAAG,GAAG,IAAI,CAACF,GAAG,CAAC;EACnD;EAEQmG,oBAAoBA,CAACC,MAAc;IACzC,IAAI,CAAC,IAAI,CAACpD,WAAW,EAAE;MACrB,OAAO,CAAC;;IAGV,MAAMqD,eAAe,GAAG,IAAI,CAACrD,WAAW,CAACsD,qBAAqB,EAAE;IAChE,MAAMC,WAAW,GAAG,CAACF,eAAe,CAACG,KAAK,GAAGH,eAAe,CAACI,IAAI,IAAI,CAAC;IACtE,MAAMC,cAAc,GAAGL,eAAe,CAACI,IAAI,GAAGF,WAAW;IAEzD,MAAMI,KAAK,GAAG,IAAI,CAACL,qBAAqB,EAAE,CAACM,KAAK,IAAI,IAAI,CAAC1G,GAAG,GAAG,IAAI,CAACF,GAAG,CAAC;IACxE,MAAM6G,MAAM,GAAG/G,KAAK,CAAC,IAAI,CAAC,GACtBsG,MAAM,GAAGM,cAAc,GACvBA,cAAc,GAAGN,MAAM;IAE3B,IAAI,IAAI,CAACpF,IAAI,EAAE;MACb,MAAM8F,YAAY,GAAGH,KAAK,GAAG,IAAI,CAAC3F,IAAI;MACtC,MAAM+F,kBAAkB,GAAGD,YAAY,GAAG,CAAC;MAI3C,MAAME,cAAc,GAAGpD,IAAI,CAACqD,GAAG,CAACJ,MAAM,CAAC;MACvC,IAAIG,cAAc,GAAGD,kBAAkB,EAAE;QACvC,OAAO,CAAC;;MAGV,OAAOnD,IAAI,CAACsD,KAAK,CAACL,MAAM,GAAGC,YAAY,CAAC,GAAG,IAAI,CAAC9F,IAAI;KACrD,MAAM;MACL,OAAO6F,MAAM,GAAGF,KAAK;;EAEzB;EAEQlE,YAAYA,CAAC2D,MAAc;IACjC,IAAI,IAAI,CAAC5E,QAAQ,EAAE;MACjB;;IAGF,MAAMkC,SAAS,GAAG,IAAI,CAACyC,oBAAoB,CAACC,MAAM,CAAC;IACnD,IAAI,IAAI,CAACpD,WAAW,IAAIU,SAAS,KAAK,CAAC,EAAE;MACvC,IAAI,CAACI,WAAW,CAACJ,SAAS,CAAC;;EAE/B;EA4FUyD,WAAWA,CAAA;IACnB,MAAMC,MAAM,GAAG,EAAE;IACjB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEC,UAAU,GAAG,IAAI,CAAC9B,cAAc,EAAE,EAAE6B,CAAC,GAAGC,UAAU,EAAED,CAAC,EAAE,EAAE;MACvE,MAAMvB,SAAS,GAAG,IAAI,CAACA,SAAS,CAACuB,CAAC,CAAC;MACnCD,MAAM,CAACG,IAAI,CAAC5I,IAAI;;0CAEoBmH,SAAS;cACrC,CAACA,SAAS,GAAG,IAAI,CAAChE,iBAAiB,GAAG,IAAI,CAACC,mBAAmB,IAC5DpD,IAAI,EAAE,GACNA,IAAI;;;wBAGI,IAAI,CAAC0B,MAAM,GACTyF,SAAS,GACP,IAAI,CAACzF,MAAM,CACTuD,IAAI,CAACsD,KAAK,CAACG,CAAC,IAAI,IAAI,CAACzF,cAAc,GAAG,CAAC,CAAC,CAAC,CAC1C,GACD,EAAE,GACJ,IAAI,CAACsD,WAAW,CAAC,IAAI,CAACO,SAAS,CAAC4B,CAAC,CAAC,CAAC;;;iBAG5C;;;OAGV,CAAC;;IAEJ,OAAOD,MAAM;EACf;EAEUI,WAAWA,CAACvH,KAAa,EAAEwH,SAAkB,EAAEC,OAAgB;IACvE,MAAMC,OAAO,GAAG,GAAG,IAAI,CAACzB,eAAe,CAACjG,KAAK,CAAC,GAAG,GAAG,GAAG;IAEvD,OAAOtB,IAAI;;;aAGFM,SAAS,CAACyI,OAAO,CAAC;mBACZ,IAAI,CAAClG,QAAQ,GAAG,CAAC,CAAC,GAAG,CAAC;gBACzBtC,QAAQ,CAAC;MAAE0I,gBAAgB,EAAED;IAAO,CAAE,CAAC;;wBAE/B,IAAI,CAAC5G,SAAS;wBACd,IAAI,CAACF,SAAS;wBACdZ,KAAK;yBACJhB,SAAS,CACxB,IAAI,CAACoB,MAAM,GACP,IAAI,CAACA,MAAM,CAACJ,KAAK,CAAC,GAClB,IAAI,CAACkF,WAAW,IAAI,IAAI,CAACG,kBAAkB,GAC3C,IAAI,CAACJ,WAAW,CAACjF,KAAK,CAAC,GACvBsD,SAAS,CACd;qBACYtE,SAAS,CAACwI,SAAS,CAAC;wBACjB,IAAI,CAACjG,QAAQ,GAAG,MAAM,GAAG,OAAO;wBAChC,IAAI,CAACuC,uBAAuB;wBAC5B,IAAI,CAACC,uBAAuB;iBAClC6D,EAAS,IAAM,IAAI,CAAC7E,WAAW,GAAG6E,EAAE,CAACC,MAAsB;gBAC7D,MAAK;;MAAC,OACZ,CAAA/E,EAAA,OAAI,CAACC,WAAW,cAAAD,EAAA,uBAAAA,EAAA,CAAEE,IAAI,CAACC,MAAM,CAAC,SAAS,CAAC,EACvC,IAAI,CAACF,WAAW,GAAGO,SAAU;KAC/B;;QAED,IAAI,CAAC7B,WAAW,GACd/C,IAAI,EAAE,GACNA,IAAI;;;sBAGQO,QAAQ,CAAC;MACf6I,OAAO,EAAE,IAAI,CAACxG,kBAAkB,GAAG,GAAG,GAAG,GAAG;MAC5CqG,gBAAgB,EAAED;KACnB,CAAC;;;kBAGE,IAAI,CAACtH,MAAM,GAAG,IAAI,CAACA,MAAM,CAACJ,KAAK,CAAC,GAAG,IAAI,CAACiF,WAAW,CAACjF,KAAK,CAAC;;;WAGjE;KACN;EACH;EAEQ+H,WAAWA,CAAA;IACjB,IAAI,CAAC,IAAI,CAACvG,aAAa,IAAI,CAAC,IAAI,CAACT,IAAI,EAAE;MACrC,OAAOrC,IAAI,EAAE;;IAGf,MAAMsJ,UAAU,GAAG,IAAI,CAAC/H,GAAG,GAAG,IAAI,CAACF,GAAG;IACtC,MAAMkI,QAAQ,GAAK,GAAG,IAAID,UAAU,GAAG,IAAI,CAACjH,IAAI,CAAC,GAAI,EAAE,GAAI,EAAE;IAE7D,OAAOrC,IAAI;;;;;;;;;wCASyBuJ,QAAQ,GAAGtE,IAAI,CAACuE,IAAI,CAAC,CAAC,CAAC;;;;;;KAM1D;EACH;EAEmBC,MAAMA,CAAA;IACvB,OAAOzJ,IAAI;;UAEL,IAAI,CAACkD,eAAe,KAAK,QAAQ,IAAI,IAAI,CAACA,eAAe,KAAK,OAAO,GACnElD,IAAI,qBAAqB,IAAI,CAACwI,WAAW,EAAE,QAAQ,GACnDxI,IAAI,EAAE;;;mCAGiBO,QAAQ,CAAC,IAAI,CAAC0F,aAAa,EAAE,CAAC;YACrD,IAAI,CAACoD,WAAW,EAAE;;UAEpB,IAAI,CAACnG,eAAe,KAAK,OAAO,GAC9BlD,IAAI,qBAAqB,IAAI,CAACwI,WAAW,EAAE,QAAQ,GACnDxI,IAAI,EAAE;6BACW,IAAI,CAACmG,YAAY,EAAE;4BACpB,IAAI,CAACP,gBAAgB;;KAE5C;EACH;;AA9nBuBxE,sBAAA,CAAAT,MAAM,GAAGA,MAAM;AAGtC+I,UAAA,EADCvJ,KAAK,CAAC,iBAAiB,CAAC,C,oDACK;AAG9BuJ,UAAA,EADCtJ,qBAAqB,CAAC;EAAEuJ,QAAQ,EAAE;AAAkB,CAAE,CAAC,C,4DAClB;AAatCD,UAAA,EADCrJ,KAAK,EAAE,C,iEAC6B;AAGrCqJ,UAAA,EADCrJ,KAAK,EAAE,C,qDACoB;AAmB5BqJ,UAAA,EADCxJ,QAAQ,CAAC;EAAE0J,IAAI,EAAEC;AAAM,CAAE,CAAC,C,gDAG1B;AAmBDH,UAAA,EADCxJ,QAAQ,CAAC;EAAE0J,IAAI,EAAEC;AAAM,CAAE,CAAC,C,gDAG1B;AAkBDH,UAAA,EADCxJ,QAAQ,CAAC;EAAE0J,IAAI,EAAEC,MAAM;EAAEC,SAAS,EAAE;AAAa,CAAE,CAAC,C,uDAGpD;AAkBDJ,UAAA,EADCxJ,QAAQ,CAAC;EAAE0J,IAAI,EAAEC,MAAM;EAAEC,SAAS,EAAE;AAAa,CAAE,CAAC,C,uDAGpD;AAODJ,UAAA,EADCxJ,QAAQ,CAAC;EAAE0J,IAAI,EAAEG,OAAO;EAAEC,OAAO,EAAE;AAAI,CAAE,CAAC,C,uDACnB;AAQxBN,UAAA,EADCxJ,QAAQ,CAAC;EAAE0J,IAAI,EAAEG,OAAO;EAAED,SAAS,EAAE;AAAgB,CAAE,CAAC,C,4DAC5B;AAO7BJ,UAAA,EADCxJ,QAAQ,CAAC;EAAE0J,IAAI,EAAEG,OAAO;EAAED,SAAS,EAAE;AAAc,CAAE,CAAC,C,0DAC5B;AAc3BJ,UAAA,EADCxJ,QAAQ,CAAC;EAAE0J,IAAI,EAAEC;AAAM,CAAE,CAAC,C,iDAG1B;AAODH,UAAA,EADCxJ,QAAQ,CAAC;EAAE0J,IAAI,EAAEC,MAAM;EAAEC,SAAS,EAAE;AAAe,CAAE,CAAC,C,2DAC/B;AAOxBJ,UAAA,EADCxJ,QAAQ,CAAC;EAAE0J,IAAI,EAAEC,MAAM;EAAEC,SAAS,EAAE;AAAiB,CAAE,CAAC,C,6DAC/B;AAO1BJ,UAAA,EADCxJ,QAAQ,CAAC;EAAE4J,SAAS,EAAE;AAAkB,CAAE,CAAC,C,8DACe;AAO3DJ,UAAA,EADCxJ,QAAQ,CAAC;EAAE0J,IAAI,EAAEG,OAAO;EAAED,SAAS,EAAE;AAAqB,CAAE,CAAC,C,gEAC7B;AAOjCJ,UAAA,EADCxJ,QAAQ,CAAC;EAAE0J,IAAI,EAAEG,OAAO;EAAED,SAAS,EAAE;AAAuB,CAAE,CAAC,C,kEAC7B;AAOnCJ,UAAA,EADCxJ,QAAQ,EAAE,C,qDACU;AAOrBwJ,UAAA,EADCxJ,QAAQ,CAAC;EAAE4J,SAAS,EAAE;AAAc,CAAE,CAAC,C,0DACZ;AAO5BJ,UAAA,EADCxJ,QAAQ,CAAC;EAAE4J,SAAS,EAAE;AAAK,CAAE,CAAC,C,iEACsB;AAQrDJ,UAAA,EAFCxJ,QAAQ,CAAC;EAAE0J,IAAI,EAAEC,MAAM;EAAEG,OAAO,EAAE,IAAI;EAAEF,SAAS,EAAE;AAAqB,CAAE,CAAC,EAC3ErJ,kBAAkB,CAAC,mBAAmB,EAAE,IAAI,CAAC,C,gEACH;AAO3CiJ,UAAA,EALChJ,KAAK,CAAC,KAAK,EAAE;EAAEuJ,oBAAoB,EAAE;AAAI,CAAE,CAAC,EAC5CvJ,KAAK,CAAC,KAAK,EAAE;EAAEuJ,oBAAoB,EAAE;AAAI,CAAE,CAAC,EAC5CvJ,KAAK,CAAC,YAAY,EAAE;EAAEuJ,oBAAoB,EAAE;AAAI,CAAE,CAAC,EACnDvJ,KAAK,CAAC,YAAY,EAAE;EAAEuJ,oBAAoB,EAAE;AAAI,CAAE,CAAC,EACnDvJ,KAAK,CAAC,MAAM,EAAE;EAAEuJ,oBAAoB,EAAE;AAAI,CAAE,CAAC,C,8DAG7C;AAGDP,UAAA,EADChJ,KAAK,CAAC,QAAQ,CAAC,C,yDAOf;AAjOUU,sBAAsB,GAAAsI,UAAA,EAFlClJ,MAAM,CAAC;EAAEO,QAAQ;EAAEH,SAAS;EAAEC,MAAM;EAAEC;AAAM,CAAE,CAAC,EAC/CI,gBAAgB,C,EACJE,sBAAsB,CAgoBlC;SAhoBYA,sBAAsB"},"metadata":{},"sourceType":"module","externalDependencies":[]}