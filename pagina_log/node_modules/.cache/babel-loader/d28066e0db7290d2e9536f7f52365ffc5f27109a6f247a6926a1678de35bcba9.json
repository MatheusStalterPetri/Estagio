{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { html, LitElement } from 'lit';\nimport { property, query } from 'lit/decorators.js';\nimport { themes } from '../../../theming/theming-decorator.js';\nimport { blazorIndirectRender } from '../../common/decorators/blazorIndirectRender.js';\nimport { blazorSuppressComponent } from '../../common/decorators/blazorSuppressComponent.js';\nimport { watch } from '../../common/decorators/watch.js';\nimport { EventEmitterMixin } from '../../common/mixins/event-emitter.js';\nimport { partNameMap } from '../../common/util.js';\nimport { MONTHS_PER_ROW } from '../common/calendar-base.js';\nimport { Calendar, TimeDeltaInterval } from '../common/calendar.model.js';\nimport { setDateSafe } from '../common/utils.js';\nimport { styles as bootstrap } from '../themes/bootstrap/year-month-view.bootstrap.css.js';\nimport { styles as fluent } from '../themes/fluent/year-month-view.fluent.css.js';\nimport { styles } from '../themes/year-month-view.base.css.js';\nlet IgcMonthsViewComponent = class IgcMonthsViewComponent extends EventEmitterMixin(LitElement) {\n  formatChange() {\n    this.initMonthFormatter();\n  }\n  constructor() {\n    super();\n    this.calendarModel = new Calendar();\n    this.value = new Date();\n    this.locale = 'en';\n    this.monthFormat = 'long';\n    this.setAttribute('role', 'grid');\n    this.initMonthFormatter();\n  }\n  focusActiveDate() {\n    this.activeMonth.focus();\n  }\n  initMonthFormatter() {\n    this.monthFormatter = new Intl.DateTimeFormat(this.locale, {\n      month: this.monthFormat\n    });\n  }\n  formattedMonth(value) {\n    return this.monthFormatter.format(value);\n  }\n  get months() {\n    let date = new Date(this.value.getFullYear(), 0, 1);\n    const result = [];\n    const rowsCount = 12 / MONTHS_PER_ROW;\n    for (let i = 0; i < rowsCount; i++) {\n      const row = [];\n      for (let j = 0; j < MONTHS_PER_ROW; j++) {\n        row.push(date);\n        date = this.calendarModel.timedelta(date, TimeDeltaInterval.Month, 1);\n      }\n      result.push(row);\n    }\n    return result;\n  }\n  resolveMonthPartName(date) {\n    const today = new Date();\n    return {\n      month: true,\n      selected: date.getMonth() === this.value.getMonth(),\n      current: date.getFullYear() === today.getFullYear() && date.getMonth() === today.getMonth()\n    };\n  }\n  selectMonth(month) {\n    const value = new Date(month);\n    setDateSafe(value, this.value.getDate());\n    this.value = value;\n    this.emitEvent('igcChange', {\n      detail: this.value\n    });\n  }\n  monthKeyDown(event, month) {\n    if (event.key === 'Enter' || event.key === ' ') {\n      event.preventDefault();\n      this.selectMonth(month);\n    }\n  }\n  render() {\n    return html`${this.months.map(row => {\n      return html`<div part=\"months-row\" role=\"row\">\n        ${row.map(month => {\n        const monthPartName = partNameMap(this.resolveMonthPartName(month));\n        const monthInnerPartName = monthPartName.replace('month', 'month-inner');\n        return html`<span part=${monthPartName}>\n            <span\n              part=${monthInnerPartName}\n              role=\"gridcell\"\n              aria-label=${month.toLocaleString(this.locale, {\n          month: 'long',\n          year: 'numeric'\n        })}\n              aria-selected=${month.getMonth() === this.value.getMonth()}\n              tabindex=\"${month.getFullYear() === this.value.getFullYear() && month.getMonth() === this.value.getMonth() ? 0 : -1}\"\n              @click=${() => this.selectMonth(month)}\n              @keydown=${event => this.monthKeyDown(event, month)}\n            >\n              ${this.formattedMonth(month)}\n            </span>\n          </span>`;\n      })}\n      </div>`;\n    })}`;\n  }\n};\nIgcMonthsViewComponent.tagName = 'igc-months-view';\nIgcMonthsViewComponent.styles = styles;\n__decorate([query('[tabindex=\"0\"]')], IgcMonthsViewComponent.prototype, \"activeMonth\", void 0);\n__decorate([property({\n  attribute: false\n})], IgcMonthsViewComponent.prototype, \"value\", void 0);\n__decorate([property()], IgcMonthsViewComponent.prototype, \"locale\", void 0);\n__decorate([property({\n  attribute: 'month-format'\n})], IgcMonthsViewComponent.prototype, \"monthFormat\", void 0);\n__decorate([watch('locale'), watch('monthFormat')], IgcMonthsViewComponent.prototype, \"formatChange\", null);\nIgcMonthsViewComponent = __decorate([blazorIndirectRender, blazorSuppressComponent, themes({\n  bootstrap,\n  fluent\n})], IgcMonthsViewComponent);\nexport default IgcMonthsViewComponent;","map":{"version":3,"names":["html","LitElement","property","query","themes","blazorIndirectRender","blazorSuppressComponent","watch","EventEmitterMixin","partNameMap","MONTHS_PER_ROW","Calendar","TimeDeltaInterval","setDateSafe","styles","bootstrap","fluent","IgcMonthsViewComponent","formatChange","initMonthFormatter","constructor","calendarModel","value","Date","locale","monthFormat","setAttribute","focusActiveDate","activeMonth","focus","monthFormatter","Intl","DateTimeFormat","month","formattedMonth","format","months","date","getFullYear","result","rowsCount","i","row","j","push","timedelta","Month","resolveMonthPartName","today","selected","getMonth","current","selectMonth","getDate","emitEvent","detail","monthKeyDown","event","key","preventDefault","render","map","monthPartName","monthInnerPartName","replace","toLocaleString","year","tagName","__decorate","attribute"],"sources":["../../../../src/components/calendar/months-view/months-view.ts"],"sourcesContent":["import { html, LitElement } from 'lit';\nimport { property, query } from 'lit/decorators.js';\nimport { themes } from '../../../theming/theming-decorator.js';\nimport { blazorIndirectRender } from '../../common/decorators/blazorIndirectRender.js';\nimport { blazorSuppressComponent } from '../../common/decorators/blazorSuppressComponent.js';\nimport { watch } from '../../common/decorators/watch.js';\nimport { Constructor } from '../../common/mixins/constructor.js';\nimport { EventEmitterMixin } from '../../common/mixins/event-emitter.js';\nimport { partNameMap } from '../../common/util.js';\nimport {\n  IgcCalendarBaseEventMap,\n  MONTHS_PER_ROW,\n} from '../common/calendar-base.js';\nimport { Calendar, TimeDeltaInterval } from '../common/calendar.model.js';\nimport { setDateSafe } from '../common/utils.js';\nimport { styles as bootstrap } from '../themes/bootstrap/year-month-view.bootstrap.css.js';\nimport { styles as fluent } from '../themes/fluent/year-month-view.fluent.css.js';\nimport { styles } from '../themes/year-month-view.base.css.js';\n\n/**\n * Instantiate a months view as a separate component in the calendar.\n *\n * @element igc-months-view\n *\n * @csspart months-row - The months row container.\n * @csspart month - The month container.\n * @csspart month-inner - The inner month container.\n */\n@blazorIndirectRender\n@blazorSuppressComponent\n@themes({\n  bootstrap,\n  fluent,\n})\nexport default class IgcMonthsViewComponent extends EventEmitterMixin<\n  IgcCalendarBaseEventMap,\n  Constructor<LitElement>\n>(LitElement) {\n  public static readonly tagName = 'igc-months-view';\n  public static styles = styles;\n  private calendarModel = new Calendar();\n  private monthFormatter: any;\n\n  @query('[tabindex=\"0\"]')\n  private activeMonth!: HTMLElement;\n\n  /** Ð¢he current value of the calendar. */\n  @property({ attribute: false })\n  public value = new Date();\n\n  /** Sets the locale used for formatting and displaying the dates. */\n  @property()\n  public locale = 'en';\n\n  /** The format of the month. Defaults to long. */\n  @property({ attribute: 'month-format' })\n  public monthFormat:\n    | 'numeric'\n    | '2-digit'\n    | 'long'\n    | 'short'\n    | 'narrow'\n    | undefined = 'long';\n\n  @watch('locale')\n  @watch('monthFormat')\n  protected formatChange() {\n    this.initMonthFormatter();\n  }\n\n  constructor() {\n    super();\n    this.setAttribute('role', 'grid');\n    this.initMonthFormatter();\n  }\n\n  /** Focuses the active date. */\n  public focusActiveDate() {\n    this.activeMonth.focus();\n  }\n\n  private initMonthFormatter() {\n    this.monthFormatter = new Intl.DateTimeFormat(this.locale, {\n      month: this.monthFormat,\n    });\n  }\n\n  private formattedMonth(value: Date) {\n    return this.monthFormatter.format(value);\n  }\n\n  private get months(): Date[][] {\n    let date = new Date(this.value.getFullYear(), 0, 1);\n    const result = [];\n\n    const rowsCount = 12 / MONTHS_PER_ROW;\n\n    for (let i = 0; i < rowsCount; i++) {\n      const row: Date[] = [];\n\n      for (let j = 0; j < MONTHS_PER_ROW; j++) {\n        row.push(date);\n        date = this.calendarModel.timedelta(date, TimeDeltaInterval.Month, 1);\n      }\n      result.push(row);\n    }\n\n    return result;\n  }\n\n  private resolveMonthPartName(date: Date) {\n    const today = new Date();\n    return {\n      month: true,\n      selected: date.getMonth() === this.value.getMonth(),\n      current:\n        date.getFullYear() === today.getFullYear() &&\n        date.getMonth() === today.getMonth(),\n    };\n  }\n\n  private selectMonth(month: Date) {\n    const value = new Date(month);\n    setDateSafe(value, this.value.getDate());\n    this.value = value;\n    this.emitEvent('igcChange', { detail: this.value });\n  }\n\n  private monthKeyDown(event: KeyboardEvent, month: Date) {\n    if (event.key === 'Enter' || event.key === ' ') {\n      event.preventDefault();\n      this.selectMonth(month);\n    }\n  }\n\n  protected override render() {\n    return html`${this.months.map((row) => {\n      return html`<div part=\"months-row\" role=\"row\">\n        ${row.map((month) => {\n          const monthPartName = partNameMap(this.resolveMonthPartName(month));\n          const monthInnerPartName = monthPartName.replace(\n            'month',\n            'month-inner'\n          );\n\n          return html`<span part=${monthPartName}>\n            <span\n              part=${monthInnerPartName}\n              role=\"gridcell\"\n              aria-label=${month.toLocaleString(this.locale, {\n                month: 'long',\n                year: 'numeric',\n              })}\n              aria-selected=${month.getMonth() === this.value.getMonth()}\n              tabindex=\"${month.getFullYear() === this.value.getFullYear() &&\n              month.getMonth() === this.value.getMonth()\n                ? 0\n                : -1}\"\n              @click=${() => this.selectMonth(month)}\n              @keydown=${(event: KeyboardEvent) =>\n                this.monthKeyDown(event, month)}\n            >\n              ${this.formattedMonth(month)}\n            </span>\n          </span>`;\n        })}\n      </div>`;\n    })}`;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'igc-months-view': IgcMonthsViewComponent;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}