{"ast":null,"code":"var __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar IgcInputBaseComponent_1;\nimport { html, LitElement, nothing } from 'lit';\nimport { property, query, queryAssignedElements } from 'lit/decorators.js';\nimport { themes } from '../../theming/theming-decorator.js';\nimport { alternateName } from '../common/decorators/alternateName.js';\nimport { blazorDeepImport } from '../common/decorators/blazorDeepImport.js';\nimport { blazorSuppress } from '../common/decorators/blazorSuppress.js';\nimport { EventEmitterMixin } from '../common/mixins/event-emitter.js';\nimport { SizableMixin } from '../common/mixins/sizable.js';\nimport { createCounter, partNameMap } from '../common/util.js';\nimport { styles } from './themes/light/input.base.css.js';\nimport { styles as bootstrap } from './themes/light/input.bootstrap.css.js';\nimport { styles as fluent } from './themes/light/input.fluent.css.js';\nimport { styles as indigo } from './themes/light/input.indigo.css.js';\nimport { styles as material } from './themes/light/input.material.css.js';\nlet IgcInputBaseComponent = IgcInputBaseComponent_1 = class IgcInputBaseComponent extends SizableMixin(EventEmitterMixin(LitElement)) {\n  constructor() {\n    super();\n    this.inputId = `input-${IgcInputBaseComponent_1.increment()}`;\n    this.dir = 'auto';\n    this.outlined = false;\n    this.required = false;\n    this.disabled = false;\n    this.readonly = false;\n    this.size = 'medium';\n  }\n  connectedCallback() {\n    super.connectedCallback();\n    this.shadowRoot.addEventListener('slotchange', () => this.requestUpdate());\n  }\n  themeAdopted(controller) {\n    this.themeController = controller;\n  }\n  focus(options) {\n    this.input.focus(options);\n  }\n  blur() {\n    this.input.blur();\n  }\n  resolvePartNames(base) {\n    return {\n      [base]: true,\n      prefixed: this.prefixes.length > 0,\n      suffixed: this.suffixes.length > 0,\n      filled: !!this.value\n    };\n  }\n  handleFocus() {\n    this.emitEvent('igcFocus');\n  }\n  handleBlur() {\n    this.emitEvent('igcBlur');\n  }\n  setSelectionRange(start, end, direction = 'none') {\n    this.input.setSelectionRange(start, end, direction);\n  }\n  setRangeText(replacement, start, end, selectMode = 'preserve') {\n    this.input.setRangeText(replacement, start, end, selectMode);\n  }\n  renderPrefix() {\n    return html`<div part=\"prefix\">\n      <slot name=\"prefix\"></slot>\n    </div>`;\n  }\n  renderSuffix() {\n    return html`<div part=\"suffix\">\n      <slot name=\"suffix\"></slot>\n    </div>`;\n  }\n  renderLabel() {\n    return this.label ? html`<label part=\"label\" for=\"${this.inputId}\"> ${this.label} </label>` : nothing;\n  }\n  renderMaterial() {\n    return html`\n      <div\n        part=\"${partNameMap({\n      ...this.resolvePartNames('container'),\n      labelled: this.label\n    })}\"\n      >\n        <div part=\"start\">${this.renderPrefix()}</div>\n        ${this.renderInput()}\n        <div part=\"notch\">${this.renderLabel()}</div>\n        <div part=\"filler\"></div>\n        <div part=\"end\">${this.renderSuffix()}</div>\n      </div>\n      <div part=\"helper-text\" .hidden=\"${this.helperText.length == 0}\">\n        <slot name=\"helper-text\"></slot>\n      </div>\n    `;\n  }\n  renderStandard() {\n    return html`${this.renderLabel()}\n      <div part=\"${partNameMap(this.resolvePartNames('container'))}\">\n        ${this.renderPrefix()} ${this.renderInput()} ${this.renderSuffix()}\n      </div>\n      <div part=\"helper-text\" .hidden=\"${this.helperText.length == 0}\">\n        <slot name=\"helper-text\"></slot>\n      </div>`;\n  }\n  render() {\n    return html`${this.themeController.theme === 'material' ? this.renderMaterial() : this.renderStandard()}`;\n  }\n};\nIgcInputBaseComponent.shadowRootOptions = {\n  ...LitElement.shadowRootOptions,\n  delegatesFocus: true\n};\nIgcInputBaseComponent.styles = styles;\nIgcInputBaseComponent.increment = createCounter();\n__decorate([blazorSuppress()], IgcInputBaseComponent.prototype, \"value\", void 0);\n__decorate([query('input')], IgcInputBaseComponent.prototype, \"input\", void 0);\n__decorate([queryAssignedElements({\n  slot: 'prefix'\n})], IgcInputBaseComponent.prototype, \"prefixes\", void 0);\n__decorate([queryAssignedElements({\n  slot: 'suffix'\n})], IgcInputBaseComponent.prototype, \"suffixes\", void 0);\n__decorate([queryAssignedElements({\n  slot: 'helper-text'\n})], IgcInputBaseComponent.prototype, \"helperText\", void 0);\n__decorate([property({\n  reflect: true\n}), blazorSuppress()], IgcInputBaseComponent.prototype, \"dir\", void 0);\n__decorate([property()], IgcInputBaseComponent.prototype, \"name\", void 0);\n__decorate([property({\n  reflect: true,\n  type: Boolean\n})], IgcInputBaseComponent.prototype, \"outlined\", void 0);\n__decorate([property({\n  reflect: true,\n  type: Boolean\n})], IgcInputBaseComponent.prototype, \"required\", void 0);\n__decorate([property({\n  reflect: true,\n  type: Boolean\n})], IgcInputBaseComponent.prototype, \"disabled\", void 0);\n__decorate([property({\n  reflect: true,\n  type: Boolean\n})], IgcInputBaseComponent.prototype, \"readonly\", void 0);\n__decorate([property({\n  type: String\n})], IgcInputBaseComponent.prototype, \"placeholder\", void 0);\n__decorate([property({\n  type: String\n})], IgcInputBaseComponent.prototype, \"label\", void 0);\n__decorate([alternateName('focusComponent')], IgcInputBaseComponent.prototype, \"focus\", null);\n__decorate([alternateName('blurComponent')], IgcInputBaseComponent.prototype, \"blur\", null);\nIgcInputBaseComponent = IgcInputBaseComponent_1 = __decorate([themes({\n  bootstrap,\n  material,\n  fluent,\n  indigo\n}), blazorDeepImport], IgcInputBaseComponent);\nexport { IgcInputBaseComponent };","map":{"version":3,"names":["html","LitElement","nothing","property","query","queryAssignedElements","themes","alternateName","blazorDeepImport","blazorSuppress","EventEmitterMixin","SizableMixin","createCounter","partNameMap","styles","bootstrap","fluent","indigo","material","IgcInputBaseComponent","IgcInputBaseComponent_1","constructor","inputId","increment","dir","outlined","required","disabled","readonly","size","connectedCallback","shadowRoot","addEventListener","requestUpdate","themeAdopted","controller","themeController","focus","options","input","blur","resolvePartNames","base","prefixed","prefixes","length","suffixed","suffixes","filled","value","handleFocus","emitEvent","handleBlur","setSelectionRange","start","end","direction","setRangeText","replacement","selectMode","renderPrefix","renderSuffix","renderLabel","label","renderMaterial","labelled","renderInput","helperText","renderStandard","render","theme","shadowRootOptions","delegatesFocus","__decorate","slot","reflect","type","Boolean","String"],"sources":["../../../src/components/input/input-base.ts"],"sourcesContent":["import { html, LitElement, nothing, TemplateResult } from 'lit';\nimport { property, query, queryAssignedElements } from 'lit/decorators.js';\nimport { themes } from '../../theming/theming-decorator.js';\nimport type { ReactiveTheme, ThemeController } from '../../theming/types.js';\nimport { alternateName } from '../common/decorators/alternateName.js';\nimport { blazorDeepImport } from '../common/decorators/blazorDeepImport.js';\nimport { blazorSuppress } from '../common/decorators/blazorSuppress.js';\nimport { Constructor } from '../common/mixins/constructor.js';\nimport { EventEmitterMixin } from '../common/mixins/event-emitter.js';\nimport { SizableMixin } from '../common/mixins/sizable.js';\nimport { Direction } from '../common/types.js';\nimport { createCounter, partNameMap } from '../common/util.js';\nimport { styles } from './themes/light/input.base.css.js';\nimport { styles as bootstrap } from './themes/light/input.bootstrap.css.js';\nimport { styles as fluent } from './themes/light/input.fluent.css.js';\nimport { styles as indigo } from './themes/light/input.indigo.css.js';\nimport { styles as material } from './themes/light/input.material.css.js';\n\nexport interface IgcInputEventMap {\n  /* alternateName: inputOcurred */\n  igcInput: CustomEvent<string>;\n  /* blazorSuppress */\n  igcChange: CustomEvent<string>;\n  igcFocus: CustomEvent<void>;\n  igcBlur: CustomEvent<void>;\n}\n\n@themes({ bootstrap, material, fluent, indigo })\n@blazorDeepImport\nexport abstract class IgcInputBaseComponent\n  extends SizableMixin(\n    EventEmitterMixin<IgcInputEventMap, Constructor<LitElement>>(LitElement)\n  )\n  implements ReactiveTheme\n{\n  protected static shadowRootOptions = {\n    ...LitElement.shadowRootOptions,\n    delegatesFocus: true,\n  };\n  public static styles = styles;\n  private static readonly increment = createCounter();\n\n  protected inputId = `input-${IgcInputBaseComponent.increment()}`;\n\n  /** The value attribute of the control. */\n  @blazorSuppress()\n  public abstract value: string | Date | null;\n\n  @query('input')\n  protected input!: HTMLInputElement;\n\n  @queryAssignedElements({ slot: 'prefix' })\n  protected prefixes!: Array<HTMLElement>;\n\n  @queryAssignedElements({ slot: 'suffix' })\n  protected suffixes!: Array<HTMLElement>;\n\n  @queryAssignedElements({ slot: 'helper-text' })\n  protected helperText!: Array<HTMLElement>;\n\n  protected themeController!: ThemeController;\n\n  /**\n   * The direction attribute of the control.\n   * @attr\n   */\n  @property({ reflect: true })\n  @blazorSuppress()\n  public override dir: Direction = 'auto';\n\n  /**\n   * The name attribute of the control.\n   * @attr\n   */\n  @property()\n  public name!: string;\n\n  /**\n   * Whether the control will have outlined appearance.\n   * @attr\n   */\n  @property({ reflect: true, type: Boolean })\n  public outlined = false;\n\n  /**\n   * Makes the control a required field.\n   * @attr\n   */\n  @property({ reflect: true, type: Boolean })\n  public required = false;\n\n  /**\n   * Makes the control a disabled field.\n   * @attr\n   */\n  @property({ reflect: true, type: Boolean })\n  public disabled = false;\n\n  /**\n   * Makes the control a readonly field.\n   * @attr\n   */\n  @property({ reflect: true, type: Boolean })\n  public readonly = false;\n\n  /**\n   * The placeholder attribute of the control.\n   * @attr\n   */\n  @property({ type: String })\n  public placeholder!: string;\n\n  /**\n   * The label for the control.\n   * @attr\n   */\n  @property({ type: String })\n  public label!: string;\n\n  constructor() {\n    super();\n    this.size = 'medium';\n  }\n\n  public override connectedCallback() {\n    super.connectedCallback();\n    this.shadowRoot!.addEventListener('slotchange', () => this.requestUpdate());\n  }\n\n  public themeAdopted(controller: ThemeController): void {\n    this.themeController = controller;\n  }\n\n  /** Sets focus on the control. */\n  @alternateName('focusComponent')\n  public override focus(options?: FocusOptions) {\n    this.input.focus(options);\n  }\n\n  /** Removes focus from the control. */\n  @alternateName('blurComponent')\n  public override blur() {\n    this.input.blur();\n  }\n\n  protected abstract renderInput(): TemplateResult;\n\n  protected resolvePartNames(base: string) {\n    return {\n      [base]: true,\n      prefixed: this.prefixes.length > 0,\n      suffixed: this.suffixes.length > 0,\n      filled: !!this.value,\n    };\n  }\n\n  protected handleFocus() {\n    this.emitEvent('igcFocus');\n  }\n\n  protected handleBlur() {\n    this.emitEvent('igcBlur');\n  }\n\n  /** Sets the text selection range of the control */\n  public setSelectionRange(\n    start: number,\n    end: number,\n    direction: 'backward' | 'forward' | 'none' = 'none'\n  ) {\n    this.input.setSelectionRange(start, end, direction);\n  }\n\n  /** Replaces the selected text in the input. */\n  public setRangeText(\n    replacement: string,\n    start: number,\n    end: number,\n    selectMode: 'select' | 'start' | 'end' | 'preserve' = 'preserve'\n  ) {\n    this.input.setRangeText(replacement, start, end, selectMode);\n  }\n\n  private renderPrefix() {\n    return html`<div part=\"prefix\">\n      <slot name=\"prefix\"></slot>\n    </div>`;\n  }\n\n  private renderSuffix() {\n    return html`<div part=\"suffix\">\n      <slot name=\"suffix\"></slot>\n    </div>`;\n  }\n\n  private renderLabel() {\n    return this.label\n      ? html`<label part=\"label\" for=\"${this.inputId}\"> ${this.label} </label>`\n      : nothing;\n  }\n\n  private renderMaterial() {\n    return html`\n      <div\n        part=\"${partNameMap({\n          ...this.resolvePartNames('container'),\n          labelled: this.label,\n        })}\"\n      >\n        <div part=\"start\">${this.renderPrefix()}</div>\n        ${this.renderInput()}\n        <div part=\"notch\">${this.renderLabel()}</div>\n        <div part=\"filler\"></div>\n        <div part=\"end\">${this.renderSuffix()}</div>\n      </div>\n      <div part=\"helper-text\" .hidden=\"${this.helperText.length == 0}\">\n        <slot name=\"helper-text\"></slot>\n      </div>\n    `;\n  }\n\n  private renderStandard() {\n    return html`${this.renderLabel()}\n      <div part=\"${partNameMap(this.resolvePartNames('container'))}\">\n        ${this.renderPrefix()} ${this.renderInput()} ${this.renderSuffix()}\n      </div>\n      <div part=\"helper-text\" .hidden=\"${this.helperText.length == 0}\">\n        <slot name=\"helper-text\"></slot>\n      </div>`;\n  }\n\n  protected override render() {\n    return html`${this.themeController.theme === 'material'\n      ? this.renderMaterial()\n      : this.renderStandard()}`;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}