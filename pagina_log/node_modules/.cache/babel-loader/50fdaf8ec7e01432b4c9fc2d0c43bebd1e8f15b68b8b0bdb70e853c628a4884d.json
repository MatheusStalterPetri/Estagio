{"ast":null,"code":"import { igcToggle } from './toggle.directive.js';\nexport class IgcToggleController {\n  get abortController() {\n    if (this._abortController.signal.aborted) {\n      this._abortController = new AbortController();\n    }\n    return this._abortController;\n  }\n  set target(value) {\n    this._target = value;\n    this.update();\n  }\n  get target() {\n    return this._target;\n  }\n  constructor(host, config) {\n    this.initialScrollTop = 0;\n    this.initialScrollLeft = 0;\n    this._abortController = new AbortController();\n    this.blockScroll = event => {\n      var _a, _b, _c, _d;\n      event.preventDefault();\n      if (!this.sourceElement || this.sourceElement !== event.target) {\n        this.sourceElement = event.target;\n        this.initialScrollTop = (_a = this.sourceElement.scrollTop) !== null && _a !== void 0 ? _a : (_b = this.sourceElement.firstElementChild) === null || _b === void 0 ? void 0 : _b.scrollTop;\n        this.initialScrollLeft = (_c = this.sourceElement.scrollLeft) !== null && _c !== void 0 ? _c : (_d = this.sourceElement.firstElementChild) === null || _d === void 0 ? void 0 : _d.scrollLeft;\n      }\n      this.sourceElement.scrollTop = this.initialScrollTop;\n      this.sourceElement.scrollLeft = this.initialScrollLeft;\n      if (this.sourceElement.firstElementChild) {\n        this.sourceElement.firstElementChild.scrollTop = this.initialScrollTop;\n        this.sourceElement.firstElementChild.scrollLeft = this.initialScrollLeft;\n      }\n    };\n    this.documentClicked = event => {\n      if (!this.host.keepOpenOnOutsideClick) {\n        const tree = event.composed ? event.composedPath() : [event.target];\n        if (tree.includes(this.host) || tree.includes(this.target)) {\n          return;\n        }\n        this.hide();\n      }\n    };\n    this.handleScroll = event => {\n      switch (this.host.scrollStrategy) {\n        case 'scroll':\n          break;\n        case 'block':\n          this.blockScroll(event);\n          break;\n        case 'close':\n          this.hide();\n          break;\n      }\n    };\n    (this.host = host).addController(this);\n    if (config === null || config === void 0 ? void 0 : config.target) {\n      this._target = config.target;\n    }\n    if (config === null || config === void 0 ? void 0 : config.closeCallback) {\n      this._hide = config.closeCallback;\n    }\n    this.update();\n  }\n  hostDisconnected() {\n    this.abortController.abort();\n  }\n  update() {\n    this.toggleDirective = igcToggle(this.target, this.host, this);\n    this.configureListeners();\n  }\n  hide() {\n    this._hide ? this._hide() : this.host.hide();\n  }\n  addEventListeners() {\n    const options = {\n      capture: true,\n      signal: this.abortController.signal\n    };\n    if (!this.host.keepOpenOnOutsideClick) {\n      document.addEventListener('click', this.documentClicked, options);\n    }\n    document.addEventListener('scroll', this.handleScroll, options);\n  }\n  configureListeners() {\n    this.host.open ? this.addEventListeners() : this.abortController.abort();\n  }\n}","map":{"version":3,"names":["igcToggle","IgcToggleController","abortController","_abortController","signal","aborted","AbortController","target","value","_target","update","constructor","host","config","initialScrollTop","initialScrollLeft","blockScroll","event","preventDefault","sourceElement","_a","scrollTop","_b","firstElementChild","_c","scrollLeft","_d","documentClicked","keepOpenOnOutsideClick","tree","composed","composedPath","includes","hide","handleScroll","scrollStrategy","addController","closeCallback","_hide","hostDisconnected","abort","toggleDirective","configureListeners","addEventListeners","options","capture","document","addEventListener","open"],"sources":["../../../src/components/toggle/toggle.controller.ts"],"sourcesContent":["import { ReactiveController, ReactiveControllerHost } from 'lit';\nimport { igcToggle, IgcToggleDirective } from './toggle.directive.js';\nimport type { DirectiveResult } from 'lit/directive';\nimport type { IgcToggleComponent } from './types.js';\n\ntype ToggleHost = ReactiveControllerHost & IgcToggleComponent & HTMLElement;\n\n/**\n * Toggle controller configuration\n */\ninterface ToggleControllerConfig {\n  /** The element, relative to which, the toggle will be positioned. */\n  target?: HTMLElement;\n  /**\n   * The function to call when closing the toggle element from an user interaction (scroll, click).\n   */\n  closeCallback?: Function;\n}\n\n/* blazorSuppress */\n/**\n * Controller, bundling the creation of a toggle directive and handling global events,\n * related to the configuration of togglable components.\n */\nexport class IgcToggleController implements ReactiveController {\n  private host: IgcToggleComponent & HTMLElement;\n  private sourceElement?: Element;\n  private initialScrollTop = 0;\n  private initialScrollLeft = 0;\n  private _target!: HTMLElement;\n  private _hide?: Function;\n  private _abortController = new AbortController();\n\n  /**\n   *  Abort controller used to clean up document level event listeners\n   *  See https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#add_an_abortable_listener\n   */\n  protected get abortController() {\n    if (this._abortController.signal.aborted) {\n      this._abortController = new AbortController();\n    }\n    return this._abortController;\n  }\n\n  /** The directive that marks the toggle. */\n  public toggleDirective!: DirectiveResult<typeof IgcToggleDirective>;\n  public rendered!: Promise<void>;\n\n  public set target(value: HTMLElement) {\n    this._target = value;\n    this.update();\n  }\n\n  /** The element, relative to which, the toggle will be positioned. */\n  public get target() {\n    return this._target;\n  }\n\n  constructor(host: ToggleHost, config?: ToggleControllerConfig) {\n    (this.host = host).addController(this);\n\n    if (config?.target) {\n      this._target = config.target;\n    }\n\n    if (config?.closeCallback) {\n      this._hide = config.closeCallback;\n    }\n\n    this.update();\n  }\n\n  public hostDisconnected() {\n    this.abortController.abort();\n  }\n\n  public update() {\n    this.toggleDirective = igcToggle(this.target, this.host, this);\n    this.configureListeners();\n  }\n\n  protected hide() {\n    this._hide ? this._hide() : this.host.hide();\n  }\n\n  private addEventListeners() {\n    const options: AddEventListenerOptions = {\n      capture: true,\n      signal: this.abortController.signal,\n    };\n\n    if (!this.host.keepOpenOnOutsideClick) {\n      document.addEventListener('click', this.documentClicked, options);\n    }\n\n    document.addEventListener('scroll', this.handleScroll, options);\n  }\n\n  private configureListeners() {\n    this.host.open ? this.addEventListeners() : this.abortController.abort();\n  }\n\n  private blockScroll = (event: Event) => {\n    event.preventDefault();\n    if (!this.sourceElement || this.sourceElement !== event.target) {\n      this.sourceElement = event.target as Element;\n      this.initialScrollTop =\n        this.sourceElement.scrollTop ??\n        this.sourceElement.firstElementChild?.scrollTop;\n      this.initialScrollLeft =\n        this.sourceElement.scrollLeft ??\n        this.sourceElement.firstElementChild?.scrollLeft;\n    }\n\n    this.sourceElement.scrollTop = this.initialScrollTop;\n    this.sourceElement.scrollLeft = this.initialScrollLeft;\n    if (this.sourceElement.firstElementChild) {\n      this.sourceElement.firstElementChild.scrollTop = this.initialScrollTop;\n      this.sourceElement.firstElementChild.scrollLeft = this.initialScrollLeft;\n    }\n  };\n\n  /** The document's click event handler to override in the host component if necessary. */\n  private documentClicked = (event: MouseEvent) => {\n    if (!this.host.keepOpenOnOutsideClick) {\n      const tree = event.composed ? event.composedPath() : [event.target];\n\n      if (tree.includes(this.host) || tree.includes(this.target)) {\n        return;\n      }\n\n      this.hide();\n    }\n  };\n\n  /** The document's scroll event handler to override in the host component if necessary. */\n  private handleScroll = (event: Event) => {\n    switch (this.host.scrollStrategy) {\n      case 'scroll':\n        break;\n      case 'block':\n        this.blockScroll(event);\n        break;\n      case 'close':\n        this.hide();\n        break;\n    }\n  };\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}