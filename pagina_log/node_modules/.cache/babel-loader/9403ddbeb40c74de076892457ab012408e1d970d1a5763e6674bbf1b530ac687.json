{"ast":null,"code":"var __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { html, LitElement, nothing } from 'lit';\nimport { property } from 'lit/decorators.js';\nimport { themes } from '../../theming/theming-decorator.js';\nimport { blazorTwoWayBind } from '../common/decorators/blazorTwoWayBind.js';\nimport { EventEmitterMixin } from '../common/mixins/event-emitter.js';\nimport { SizableMixin } from '../common/mixins/sizable.js';\nimport { styles } from './themes/chip.base.css.js';\nimport { styles as bootstrap } from './themes/chip.bootstrap.css.js';\nimport { styles as fluent } from './themes/chip.fluent.css.js';\nimport { styles as indigo } from './themes/chip.indigo.css.js';\nimport { styles as material } from './themes/chip.material.css.js';\nimport { defineComponents } from '../common/definitions/defineComponents.js';\nimport IgcIconComponent from '../icon/icon.js';\ndefineComponents(IgcIconComponent);\nlet IgcChipComponent = class IgcChipComponent extends SizableMixin(EventEmitterMixin(LitElement)) {\n  constructor() {\n    super();\n    this.disabled = false;\n    this.removable = false;\n    this.selectable = false;\n    this.selected = false;\n    this.size = 'medium';\n  }\n  handleSelect() {\n    if (this.selectable) {\n      this.selected = !this.selected;\n      this.emitEvent('igcSelect', {\n        detail: this.selected\n      });\n    }\n  }\n  handleRemove(e) {\n    this.emitEvent('igcRemove');\n    e.stopPropagation();\n  }\n  handleKeyup(e) {\n    if (/\\s|enter/i.test(e.key)) {\n      this.handleRemove(e);\n    }\n  }\n  render() {\n    return html`\n      <button\n        part=\"base\"\n        .disabled=\"${this.disabled}\"\n        aria-selected=\"${this.selected ? 'true' : 'false'}\"\n        aria-disabled=\"${this.disabled ? 'true' : 'false'}\"\n        @click=${this.handleSelect}\n      >\n        <span part=\"prefix\">\n          ${this.selectable && this.selected ? html`<slot @slotchange=${this.slotChanges} name=\"select\">\n                <igc-icon\n                  size=${this.size}\n                  name=\"chip_select\"\n                  collection=\"internal\"\n                ></igc-icon>\n              </slot>` : nothing}\n          <slot name=\"start\"></slot>\n          <slot name=\"prefix\"></slot>\n        </span>\n        <slot></slot>\n        <span part=\"suffix\">\n          <slot name=\"end\"></slot>\n          <slot name=\"suffix\"></slot>\n          ${this.removable && !this.disabled ? html`<slot\n                @slotchange=${this.slotChanges}\n                @click=${this.handleRemove}\n                @keyup=${this.handleKeyup}\n                name=\"remove\"\n              >\n                <igc-icon\n                  size=${this.size}\n                  name=\"chip_cancel\"\n                  collection=\"internal\"\n                  tabindex=\"0\"\n                  role=\"button\"\n                  aria-label=\"remove\"\n                ></igc-icon>\n              </slot>` : nothing}\n        </span>\n      </button>\n    `;\n  }\n  slotChanges() {\n    this.requestUpdate();\n  }\n};\nIgcChipComponent.tagName = 'igc-chip';\nIgcChipComponent.styles = styles;\n__decorate([property({\n  type: Boolean,\n  reflect: true\n})], IgcChipComponent.prototype, \"disabled\", void 0);\n__decorate([property({\n  type: Boolean,\n  reflect: true\n})], IgcChipComponent.prototype, \"removable\", void 0);\n__decorate([property({\n  type: Boolean,\n  reflect: true\n})], IgcChipComponent.prototype, \"selectable\", void 0);\n__decorate([property({\n  type: Boolean,\n  reflect: true\n}), blazorTwoWayBind('igcSelect', 'detail')], IgcChipComponent.prototype, \"selected\", void 0);\n__decorate([property({\n  reflect: true\n})], IgcChipComponent.prototype, \"variant\", void 0);\nIgcChipComponent = __decorate([themes({\n  material,\n  bootstrap,\n  fluent,\n  indigo\n})], IgcChipComponent);\nexport default IgcChipComponent;","map":{"version":3,"names":["html","LitElement","nothing","property","themes","blazorTwoWayBind","EventEmitterMixin","SizableMixin","styles","bootstrap","fluent","indigo","material","defineComponents","IgcIconComponent","IgcChipComponent","constructor","disabled","removable","selectable","selected","size","handleSelect","emitEvent","detail","handleRemove","e","stopPropagation","handleKeyup","test","key","render","slotChanges","requestUpdate","tagName","__decorate","type","Boolean","reflect"],"sources":["../../../src/components/chip/chip.ts"],"sourcesContent":["import { html, LitElement, nothing } from 'lit';\nimport { property } from 'lit/decorators.js';\nimport { themes } from '../../theming/theming-decorator.js';\nimport { blazorTwoWayBind } from '../common/decorators/blazorTwoWayBind.js';\nimport { Constructor } from '../common/mixins/constructor.js';\nimport { EventEmitterMixin } from '../common/mixins/event-emitter.js';\nimport { SizableMixin } from '../common/mixins/sizable.js';\nimport { styles } from './themes/chip.base.css.js';\nimport { styles as bootstrap } from './themes/chip.bootstrap.css.js';\nimport { styles as fluent } from './themes/chip.fluent.css.js';\nimport { styles as indigo } from './themes/chip.indigo.css.js';\nimport { styles as material } from './themes/chip.material.css.js';\n\nimport { defineComponents } from '../common/definitions/defineComponents.js';\nimport IgcIconComponent from '../icon/icon.js';\n\ndefineComponents(IgcIconComponent);\n\nexport interface IgcChipEventMap {\n  igcRemove: CustomEvent<boolean>;\n  igcSelect: CustomEvent<boolean>;\n}\n/**\n * Chips help people enter information, make selections, filter content, or trigger actions.\n *\n * @element igc-chip\n *\n * @slot - Renders the chip data.\n * @slot prefix - Renders content before the data of the chip.\n * @slot suffix - Renders content after the data of the chip.\n *\n * @fires igcRemove - Emits an event when the chip component is removed. Returns the removed chip component.\n * @fires igcSelect - Emits event when the chip component is selected/deselected and any related animations and transitions also end.\n *\n * @csspart base - The base wrapper of the chip.\n * @csspart prefix - The prefix container of the chip.\n * @csspart suffix - The suffix container of the chip.\n */\n@themes({ material, bootstrap, fluent, indigo })\nexport default class IgcChipComponent extends SizableMixin(\n  EventEmitterMixin<IgcChipEventMap, Constructor<LitElement>>(LitElement)\n) {\n  public static readonly tagName = 'igc-chip';\n\n  public static styles = styles;\n\n  /**\n   * Sets the disabled state for the chip.\n   * @attr\n   */\n  @property({ type: Boolean, reflect: true })\n  public disabled = false;\n\n  /**\n   * Defines if the chip is removable or not.\n   * @attr\n   */\n  @property({ type: Boolean, reflect: true })\n  public removable = false;\n\n  /**\n   * Defines if the chip is selectable or not.\n   * @attr\n   */\n  @property({ type: Boolean, reflect: true })\n  public selectable = false;\n\n  /**\n   * Defines if the chip is selected or not.\n   * @attr\n   */\n  @property({ type: Boolean, reflect: true })\n  @blazorTwoWayBind('igcSelect', 'detail')\n  public selected = false;\n\n  /**\n   * A property that sets the color variant of the chip component.\n   * @attr\n   */\n  @property({ reflect: true })\n  public variant!: 'primary' | 'success' | 'danger' | 'warning' | 'info';\n\n  constructor() {\n    super();\n    this.size = 'medium';\n  }\n\n  protected handleSelect() {\n    if (this.selectable) {\n      this.selected = !this.selected;\n      this.emitEvent('igcSelect', { detail: this.selected });\n    }\n  }\n\n  protected handleRemove(e: Event) {\n    this.emitEvent('igcRemove');\n    e.stopPropagation();\n  }\n\n  protected handleKeyup(e: KeyboardEvent) {\n    if (/\\s|enter/i.test(e.key)) {\n      this.handleRemove(e);\n    }\n  }\n\n  protected override render() {\n    return html`\n      <button\n        part=\"base\"\n        .disabled=\"${this.disabled}\"\n        aria-selected=\"${this.selected ? 'true' : 'false'}\"\n        aria-disabled=\"${this.disabled ? 'true' : 'false'}\"\n        @click=${this.handleSelect}\n      >\n        <span part=\"prefix\">\n          ${this.selectable && this.selected\n            ? html`<slot @slotchange=${this.slotChanges} name=\"select\">\n                <igc-icon\n                  size=${this.size}\n                  name=\"chip_select\"\n                  collection=\"internal\"\n                ></igc-icon>\n              </slot>`\n            : nothing}\n          <slot name=\"start\"></slot>\n          <slot name=\"prefix\"></slot>\n        </span>\n        <slot></slot>\n        <span part=\"suffix\">\n          <slot name=\"end\"></slot>\n          <slot name=\"suffix\"></slot>\n          ${this.removable && !this.disabled\n            ? html`<slot\n                @slotchange=${this.slotChanges}\n                @click=${this.handleRemove}\n                @keyup=${this.handleKeyup}\n                name=\"remove\"\n              >\n                <igc-icon\n                  size=${this.size}\n                  name=\"chip_cancel\"\n                  collection=\"internal\"\n                  tabindex=\"0\"\n                  role=\"button\"\n                  aria-label=\"remove\"\n                ></igc-icon>\n              </slot>`\n            : nothing}\n        </span>\n      </button>\n    `;\n  }\n\n  protected slotChanges() {\n    this.requestUpdate();\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'igc-chip': IgcChipComponent;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}