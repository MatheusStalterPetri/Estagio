{"ast":null,"code":"var __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar IgcCheckboxComponent_1;\nimport { html } from 'lit';\nimport { property } from 'lit/decorators.js';\nimport { ifDefined } from 'lit/directives/if-defined.js';\nimport { live } from 'lit/directives/live.js';\nimport { themes } from '../../theming/theming-decorator.js';\nimport { watch } from '../common/decorators/watch.js';\nimport { createCounter, partNameMap } from '../common/util.js';\nimport { IgcCheckboxBaseComponent } from './checkbox-base.js';\nimport { styles } from './themes/light/checkbox.base.css.js';\nimport { styles as bootstrap } from './themes/light/checkbox.bootstrap.css.js';\nimport { styles as fluent } from './themes/light/checkbox.fluent.css.js';\nimport { styles as indigo } from './themes/light/checkbox.indigo.css.js';\nimport { styles as material } from './themes/light/checkbox.material.css.js';\nlet IgcCheckboxComponent = IgcCheckboxComponent_1 = class IgcCheckboxComponent extends IgcCheckboxBaseComponent {\n  constructor() {\n    super(...arguments);\n    this.inputId = `checkbox-${IgcCheckboxComponent_1.increment()}`;\n    this.labelId = `checkbox-label-${this.inputId}`;\n    this.indeterminate = false;\n  }\n  handleClick() {\n    this.checked = !this.checked;\n    this.indeterminate = false;\n    this.emitEvent('igcChange', {\n      detail: this.checked\n    });\n  }\n  handleChange() {\n    this.invalid = !this.input.checkValidity();\n  }\n  render() {\n    return html`\n      <label\n        part=${partNameMap({\n      base: true,\n      checked: this.checked,\n      focused: this.focused\n    })}\n        for=${this.inputId}\n        @pointerdown=${this.handleMouseDown}\n      >\n        <input\n          id=${this.inputId}\n          type=\"checkbox\"\n          name=${ifDefined(this.name)}\n          value=${ifDefined(this.value)}\n          .required=${this.required}\n          .disabled=${this.disabled}\n          .checked=${live(this.checked)}\n          .indeterminate=${live(this.indeterminate)}\n          aria-checked=${this.indeterminate && !this.checked ? 'mixed' : this.checked}\n          aria-disabled=${this.disabled ? 'true' : 'false'}\n          aria-labelledby=${this.ariaLabelledby ? this.ariaLabelledby : this.labelId}\n          @click=${this.handleClick}\n          @blur=${this.handleBlur}\n          @focus=${this.handleFocus}\n        />\n        <span part=${partNameMap({\n      control: true,\n      checked: this.checked\n    })}>\n          <span part=${partNameMap({\n      indicator: true,\n      checked: this.checked\n    })}>\n            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n              <path d=\"M4.1,12.7 9,17.6 20.3,6.3\" />\n            </svg>\n          </span>\n        </span>\n        <span\n          .hidden=\"${this.hideLabel}\"\n          part=${partNameMap({\n      label: true,\n      checked: this.checked\n    })}\n          id=${this.labelId}\n        >\n          <slot></slot>\n        </span>\n      </label>\n    `;\n  }\n};\nIgcCheckboxComponent.tagName = 'igc-checkbox';\nIgcCheckboxComponent.styles = styles;\nIgcCheckboxComponent.increment = createCounter();\n__decorate([property({\n  type: Boolean,\n  reflect: true\n})], IgcCheckboxComponent.prototype, \"indeterminate\", void 0);\n__decorate([watch('checked', {\n  waitUntilFirstUpdate: true\n}), watch('focused', {\n  waitUntilFirstUpdate: true\n}), watch('indeterminate', {\n  waitUntilFirstUpdate: true\n})], IgcCheckboxComponent.prototype, \"handleChange\", null);\nIgcCheckboxComponent = IgcCheckboxComponent_1 = __decorate([themes({\n  material,\n  bootstrap,\n  fluent,\n  indigo\n})], IgcCheckboxComponent);\nexport default IgcCheckboxComponent;","map":{"version":3,"names":["html","property","ifDefined","live","themes","watch","createCounter","partNameMap","IgcCheckboxBaseComponent","styles","bootstrap","fluent","indigo","material","IgcCheckboxComponent","IgcCheckboxComponent_1","constructor","inputId","increment","labelId","indeterminate","handleClick","checked","emitEvent","detail","handleChange","invalid","input","checkValidity","render","base","focused","handleMouseDown","name","value","required","disabled","ariaLabelledby","handleBlur","handleFocus","control","indicator","hideLabel","label","tagName","__decorate","type","Boolean","reflect","waitUntilFirstUpdate"],"sources":["../../../src/components/checkbox/checkbox.ts"],"sourcesContent":["import { html } from 'lit';\nimport { property } from 'lit/decorators.js';\nimport { ifDefined } from 'lit/directives/if-defined.js';\nimport { live } from 'lit/directives/live.js';\nimport { themes } from '../../theming/theming-decorator.js';\nimport { watch } from '../common/decorators/watch.js';\nimport { createCounter, partNameMap } from '../common/util.js';\nimport { IgcCheckboxBaseComponent } from './checkbox-base.js';\nimport { styles } from './themes/light/checkbox.base.css.js';\nimport { styles as bootstrap } from './themes/light/checkbox.bootstrap.css.js';\nimport { styles as fluent } from './themes/light/checkbox.fluent.css.js';\nimport { styles as indigo } from './themes/light/checkbox.indigo.css.js';\nimport { styles as material } from './themes/light/checkbox.material.css.js';\n\n/**\n * A check box allowing single values to be selected/deselected.\n *\n * @element igc-checkbox\n *\n * @slot - The checkbox label.\n *\n * @fires igcChange - Emitted when the control's checked state changes.\n * @fires igcFocus - Emitted when the control gains focus.\n * @fires igcBlur - Emitted when the control loses focus.\n *\n * @csspart base - The base wrapper of the checkbox.\n * @csspart control - The checkbox control.\n * @csspart label - The checkbox label.\n * @csspart indicator - The checkbox icon.\n */\n@themes({ material, bootstrap, fluent, indigo })\nexport default class IgcCheckboxComponent extends IgcCheckboxBaseComponent {\n  public static readonly tagName = 'igc-checkbox';\n  protected static styles = styles;\n\n  private static readonly increment = createCounter();\n  private inputId = `checkbox-${IgcCheckboxComponent.increment()}`;\n  private labelId = `checkbox-label-${this.inputId}`;\n\n  /**\n   * Draws the checkbox in indeterminate state.\n   * @attr\n   */\n  @property({ type: Boolean, reflect: true })\n  public indeterminate = false;\n\n  protected handleClick() {\n    this.checked = !this.checked;\n    this.indeterminate = false;\n    this.emitEvent('igcChange', { detail: this.checked });\n  }\n\n  @watch('checked', { waitUntilFirstUpdate: true })\n  @watch('focused', { waitUntilFirstUpdate: true })\n  @watch('indeterminate', { waitUntilFirstUpdate: true })\n  protected handleChange() {\n    this.invalid = !this.input.checkValidity();\n  }\n\n  protected override render() {\n    return html`\n      <label\n        part=${partNameMap({\n          base: true,\n          checked: this.checked,\n          focused: this.focused,\n        })}\n        for=${this.inputId}\n        @pointerdown=${this.handleMouseDown}\n      >\n        <input\n          id=${this.inputId}\n          type=\"checkbox\"\n          name=${ifDefined(this.name)}\n          value=${ifDefined(this.value)}\n          .required=${this.required}\n          .disabled=${this.disabled}\n          .checked=${live(this.checked)}\n          .indeterminate=${live(this.indeterminate)}\n          aria-checked=${this.indeterminate && !this.checked\n            ? 'mixed'\n            : this.checked}\n          aria-disabled=${this.disabled ? 'true' : 'false'}\n          aria-labelledby=${this.ariaLabelledby\n            ? this.ariaLabelledby\n            : this.labelId}\n          @click=${this.handleClick}\n          @blur=${this.handleBlur}\n          @focus=${this.handleFocus}\n        />\n        <span part=${partNameMap({ control: true, checked: this.checked })}>\n          <span part=${partNameMap({ indicator: true, checked: this.checked })}>\n            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n              <path d=\"M4.1,12.7 9,17.6 20.3,6.3\" />\n            </svg>\n          </span>\n        </span>\n        <span\n          .hidden=\"${this.hideLabel}\"\n          part=${partNameMap({ label: true, checked: this.checked })}\n          id=${this.labelId}\n        >\n          <slot></slot>\n        </span>\n      </label>\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'igc-checkbox': IgcCheckboxComponent;\n  }\n}\n"],"mappings":";;;;;;;;AAAA,SAASA,IAAI,QAAQ,KAAK;AAC1B,SAASC,QAAQ,QAAQ,mBAAmB;AAC5C,SAASC,SAAS,QAAQ,8BAA8B;AACxD,SAASC,IAAI,QAAQ,wBAAwB;AAC7C,SAASC,MAAM,QAAQ,oCAAoC;AAC3D,SAASC,KAAK,QAAQ,+BAA+B;AACrD,SAASC,aAAa,EAAEC,WAAW,QAAQ,mBAAmB;AAC9D,SAASC,wBAAwB,QAAQ,oBAAoB;AAC7D,SAASC,MAAM,QAAQ,qCAAqC;AAC5D,SAASA,MAAM,IAAIC,SAAS,QAAQ,0CAA0C;AAC9E,SAASD,MAAM,IAAIE,MAAM,QAAQ,uCAAuC;AACxE,SAASF,MAAM,IAAIG,MAAM,QAAQ,uCAAuC;AACxE,SAASH,MAAM,IAAII,QAAQ,QAAQ,yCAAyC;AAmB7D,IAAMC,oBAAoB,GAAAC,sBAAA,GAA1B,MAAMD,oBAAqB,SAAQN,wBAAwB;EAA3DQ,YAAA;;IAKL,KAAAC,OAAO,GAAG,YAAYF,sBAAoB,CAACG,SAAS,EAAE,EAAE;IACxD,KAAAC,OAAO,GAAG,kBAAkB,IAAI,CAACF,OAAO,EAAE;IAO3C,KAAAG,aAAa,GAAG,KAAK;EA+D9B;EA7DYC,WAAWA,CAAA;IACnB,IAAI,CAACC,OAAO,GAAG,CAAC,IAAI,CAACA,OAAO;IAC5B,IAAI,CAACF,aAAa,GAAG,KAAK;IAC1B,IAAI,CAACG,SAAS,CAAC,WAAW,EAAE;MAAEC,MAAM,EAAE,IAAI,CAACF;IAAO,CAAE,CAAC;EACvD;EAKUG,YAAYA,CAAA;IACpB,IAAI,CAACC,OAAO,GAAG,CAAC,IAAI,CAACC,KAAK,CAACC,aAAa,EAAE;EAC5C;EAEmBC,MAAMA,CAAA;IACvB,OAAO7B,IAAI;;eAEAO,WAAW,CAAC;MACjBuB,IAAI,EAAE,IAAI;MACVR,OAAO,EAAE,IAAI,CAACA,OAAO;MACrBS,OAAO,EAAE,IAAI,CAACA;KACf,CAAC;cACI,IAAI,CAACd,OAAO;uBACH,IAAI,CAACe,eAAe;;;eAG5B,IAAI,CAACf,OAAO;;iBAEVf,SAAS,CAAC,IAAI,CAAC+B,IAAI,CAAC;kBACnB/B,SAAS,CAAC,IAAI,CAACgC,KAAK,CAAC;sBACjB,IAAI,CAACC,QAAQ;sBACb,IAAI,CAACC,QAAQ;qBACdjC,IAAI,CAAC,IAAI,CAACmB,OAAO,CAAC;2BACZnB,IAAI,CAAC,IAAI,CAACiB,aAAa,CAAC;yBAC1B,IAAI,CAACA,aAAa,IAAI,CAAC,IAAI,CAACE,OAAO,GAC9C,OAAO,GACP,IAAI,CAACA,OAAO;0BACA,IAAI,CAACc,QAAQ,GAAG,MAAM,GAAG,OAAO;4BAC9B,IAAI,CAACC,cAAc,GACjC,IAAI,CAACA,cAAc,GACnB,IAAI,CAAClB,OAAO;mBACP,IAAI,CAACE,WAAW;kBACjB,IAAI,CAACiB,UAAU;mBACd,IAAI,CAACC,WAAW;;qBAEdhC,WAAW,CAAC;MAAEiC,OAAO,EAAE,IAAI;MAAElB,OAAO,EAAE,IAAI,CAACA;IAAO,CAAE,CAAC;uBACnDf,WAAW,CAAC;MAAEkC,SAAS,EAAE,IAAI;MAAEnB,OAAO,EAAE,IAAI,CAACA;IAAO,CAAE,CAAC;;;;;;;qBAOzD,IAAI,CAACoB,SAAS;iBAClBnC,WAAW,CAAC;MAAEoC,KAAK,EAAE,IAAI;MAAErB,OAAO,EAAE,IAAI,CAACA;IAAO,CAAE,CAAC;eACrD,IAAI,CAACH,OAAO;;;;;KAKtB;EACH;;AA1EuBL,oBAAA,CAAA8B,OAAO,GAAG,cAAc;AAC9B9B,oBAAA,CAAAL,MAAM,GAAGA,MAAM;AAERK,oBAAA,CAAAI,SAAS,GAAGZ,aAAa,EAAE;AASnDuC,UAAA,EADC5C,QAAQ,CAAC;EAAE6C,IAAI,EAAEC,OAAO;EAAEC,OAAO,EAAE;AAAI,CAAE,CAAC,C,0DACd;AAW7BH,UAAA,EAHCxC,KAAK,CAAC,SAAS,EAAE;EAAE4C,oBAAoB,EAAE;AAAI,CAAE,CAAC,EAChD5C,KAAK,CAAC,SAAS,EAAE;EAAE4C,oBAAoB,EAAE;AAAI,CAAE,CAAC,EAChD5C,KAAK,CAAC,eAAe,EAAE;EAAE4C,oBAAoB,EAAE;AAAI,CAAE,CAAC,C,uDAGtD;AA1BkBnC,oBAAoB,GAAAC,sBAAA,GAAA8B,UAAA,EADxCzC,MAAM,CAAC;EAAES,QAAQ;EAAEH,SAAS;EAAEC,MAAM;EAAEC;AAAM,CAAE,CAAC,C,EAC3BE,oBAAoB,CA4ExC;eA5EoBA,oBAAoB"},"metadata":{},"sourceType":"module","externalDependencies":[]}