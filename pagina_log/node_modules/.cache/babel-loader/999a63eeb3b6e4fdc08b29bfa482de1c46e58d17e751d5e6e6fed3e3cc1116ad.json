{"ast":null,"code":"import DataOperation from './base.js';\nexport default class SortDataOperation extends DataOperation {\n  constructor() {\n    super(...arguments);\n    this.orderBy = new Map(Object.entries({\n      ascending: 1,\n      descending: -1\n    }));\n  }\n  compareValues(first, second) {\n    if (typeof first === 'string' && typeof second === 'string') {\n      return first.localeCompare(second);\n    }\n    return first > second ? 1 : first < second ? -1 : 0;\n  }\n  compareObjects(first, second, expression) {\n    var _a;\n    const {\n      direction,\n      key,\n      caseSensitive,\n      comparer\n    } = expression;\n    const a = this.resolveCase(this.resolveValue(first, key), caseSensitive);\n    const b = this.resolveCase(this.resolveValue(second, key), caseSensitive);\n    // TODO: Remove casting as any\n    return this.orderBy.get(direction) * ((_a = comparer === null || comparer === void 0 ? void 0 : comparer(a, b)) !== null && _a !== void 0 ? _a : this.compareValues(a, b));\n  }\n  apply(data, state) {\n    const expressions = Array.from(state.values()),\n      length = expressions.length;\n    data.sort((a, b) => {\n      let i = 0,\n        result = 0;\n      while (i < length && !result) {\n        result = this.compareObjects(a, b, expressions[i]);\n        i++;\n      }\n      return result;\n    });\n    return data;\n  }\n}","map":{"version":3,"names":["DataOperation","SortDataOperation","constructor","orderBy","Map","Object","entries","ascending","descending","compareValues","first","second","localeCompare","compareObjects","expression","direction","key","caseSensitive","comparer","a","resolveCase","resolveValue","b","get","_a","apply","data","state","expressions","Array","from","values","length","sort","i","result"],"sources":["../../../src/operations/sort.ts"],"sourcesContent":["import DataOperation from './base.js';\nimport type { SortExpression, SortState } from './sort/types.js';\n\nexport default class SortDataOperation<T> extends DataOperation<T> {\n  protected orderBy = new Map(\n    Object.entries({\n      ascending: 1,\n      descending: -1,\n    }),\n  );\n\n  protected compareValues<U>(first: U, second: U) {\n    if (typeof first === 'string' && typeof second === 'string') {\n      return first.localeCompare(second);\n    }\n    return first > second ? 1 : first < second ? -1 : 0;\n  }\n\n  protected compareObjects(first: T, second: T, expression: SortExpression<T>) {\n    const { direction, key, caseSensitive, comparer } = expression;\n\n    const a = this.resolveCase(this.resolveValue(first, key), caseSensitive);\n    const b = this.resolveCase(this.resolveValue(second, key), caseSensitive);\n\n    // TODO: Remove casting as any\n    return (\n      this.orderBy.get(direction)! * (comparer?.(a as any, b as any) ?? this.compareValues(a, b))\n    );\n  }\n\n  public apply(data: T[], state: SortState<T>) {\n    const expressions = Array.from(state.values()),\n      length = expressions.length;\n\n    data.sort((a, b) => {\n      let i = 0,\n        result = 0;\n\n      while (i < length && !result) {\n        result = this.compareObjects(a, b, expressions[i]);\n        i++;\n      }\n\n      return result;\n    });\n\n    return data;\n  }\n}\n"],"mappings":"AAAA,OAAOA,aAAa,MAAM,WAAW;AAGrC,eAAc,MAAOC,iBAAqB,SAAQD,aAAgB;EAAlEE,YAAA;;IACY,KAAAC,OAAO,GAAG,IAAIC,GAAG,CACzBC,MAAM,CAACC,OAAO,CAAC;MACbC,SAAS,EAAE,CAAC;MACZC,UAAU,EAAE,CAAC;KACd,CAAC,CACH;EAuCH;EArCYC,aAAaA,CAAIC,KAAQ,EAAEC,MAAS;IAC5C,IAAI,OAAOD,KAAK,KAAK,QAAQ,IAAI,OAAOC,MAAM,KAAK,QAAQ,EAAE;MAC3D,OAAOD,KAAK,CAACE,aAAa,CAACD,MAAM,CAAC;;IAEpC,OAAOD,KAAK,GAAGC,MAAM,GAAG,CAAC,GAAGD,KAAK,GAAGC,MAAM,GAAG,CAAC,CAAC,GAAG,CAAC;EACrD;EAEUE,cAAcA,CAACH,KAAQ,EAAEC,MAAS,EAAEG,UAA6B;;IACzE,MAAM;MAAEC,SAAS;MAAEC,GAAG;MAAEC,aAAa;MAAEC;IAAQ,CAAE,GAAGJ,UAAU;IAE9D,MAAMK,CAAC,GAAG,IAAI,CAACC,WAAW,CAAC,IAAI,CAACC,YAAY,CAACX,KAAK,EAAEM,GAAG,CAAC,EAAEC,aAAa,CAAC;IACxE,MAAMK,CAAC,GAAG,IAAI,CAACF,WAAW,CAAC,IAAI,CAACC,YAAY,CAACV,MAAM,EAAEK,GAAG,CAAC,EAAEC,aAAa,CAAC;IAEzE;IACA,OACE,IAAI,CAACd,OAAO,CAACoB,GAAG,CAACR,SAAS,CAAE,IAAI,CAAAS,EAAA,GAAAN,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAGC,CAAQ,EAAEG,CAAQ,CAAC,cAAAE,EAAA,cAAAA,EAAA,GAAI,IAAI,CAACf,aAAa,CAACU,CAAC,EAAEG,CAAC,CAAC,CAAC;EAE/F;EAEOG,KAAKA,CAACC,IAAS,EAAEC,KAAmB;IACzC,MAAMC,WAAW,GAAGC,KAAK,CAACC,IAAI,CAACH,KAAK,CAACI,MAAM,EAAE,CAAC;MAC5CC,MAAM,GAAGJ,WAAW,CAACI,MAAM;IAE7BN,IAAI,CAACO,IAAI,CAAC,CAACd,CAAC,EAAEG,CAAC,KAAI;MACjB,IAAIY,CAAC,GAAG,CAAC;QACPC,MAAM,GAAG,CAAC;MAEZ,OAAOD,CAAC,GAAGF,MAAM,IAAI,CAACG,MAAM,EAAE;QAC5BA,MAAM,GAAG,IAAI,CAACtB,cAAc,CAACM,CAAC,EAAEG,CAAC,EAAEM,WAAW,CAACM,CAAC,CAAC,CAAC;QAClDA,CAAC,EAAE;;MAGL,OAAOC,MAAM;IACf,CAAC,CAAC;IAEF,OAAOT,IAAI;EACb"},"metadata":{},"sourceType":"module","externalDependencies":[]}