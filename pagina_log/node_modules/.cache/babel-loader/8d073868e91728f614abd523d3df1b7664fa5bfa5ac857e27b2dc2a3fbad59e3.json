{"ast":null,"code":"var __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { html, LitElement } from 'lit';\nimport { themes } from '../../theming/theming-decorator.js';\nimport { styles } from './themes/light/header/combo-header.base.css.js';\nimport { styles as bootstrap } from '../dropdown/themes/light/dropdown-header.bootstrap.css.js';\nimport { styles as fluent } from '../dropdown/themes/light/dropdown-header.fluent.css.js';\nlet IgcComboHeaderComponent = class IgcComboHeaderComponent extends LitElement {\n  render() {\n    return html`<slot></slot>`;\n  }\n};\nIgcComboHeaderComponent.tagName = 'igc-combo-header';\nIgcComboHeaderComponent.styles = styles;\nIgcComboHeaderComponent = __decorate([themes({\n  bootstrap,\n  fluent\n})], IgcComboHeaderComponent);\nexport default IgcComboHeaderComponent;","map":{"version":3,"names":["html","LitElement","themes","styles","bootstrap","fluent","IgcComboHeaderComponent","render","tagName","__decorate"],"sources":["../../../src/components/combo/combo-header.ts"],"sourcesContent":["import { html, LitElement } from 'lit';\nimport { themes } from '../../theming/theming-decorator.js';\nimport { styles } from './themes/light/header/combo-header.base.css.js';\nimport { styles as bootstrap } from '../dropdown/themes/light/dropdown-header.bootstrap.css.js';\nimport { styles as fluent } from '../dropdown/themes/light/dropdown-header.fluent.css.js';\n\n/* blazorSuppress */\n@themes({ bootstrap, fluent })\nexport default class IgcComboHeaderComponent extends LitElement {\n  public static readonly tagName: string = 'igc-combo-header';\n  public static override styles = styles;\n\n  protected override render() {\n    return html`<slot></slot>`;\n  }\n}\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'igc-combo-header': IgcComboHeaderComponent;\n  }\n}\n"],"mappings":";;;;;;;AAAA,SAASA,IAAI,EAAEC,UAAU,QAAQ,KAAK;AACtC,SAASC,MAAM,QAAQ,oCAAoC;AAC3D,SAASC,MAAM,QAAQ,gDAAgD;AACvE,SAASA,MAAM,IAAIC,SAAS,QAAQ,2DAA2D;AAC/F,SAASD,MAAM,IAAIE,MAAM,QAAQ,wDAAwD;AAI1E,IAAMC,uBAAuB,GAA7B,MAAMA,uBAAwB,SAAQL,UAAU;EAI1CM,MAAMA,CAAA;IACvB,OAAOP,IAAI,eAAe;EAC5B;;AALuBM,uBAAA,CAAAE,OAAO,GAAW,kBAAkB;AACpCF,uBAAA,CAAAH,MAAM,GAAGA,MAAM;AAFnBG,uBAAuB,GAAAG,UAAA,EAD3CP,MAAM,CAAC;EAAEE,SAAS;EAAEC;AAAM,CAAE,CAAC,C,EACTC,uBAAuB,CAO3C;eAPoBA,uBAAuB"},"metadata":{},"sourceType":"module","externalDependencies":[]}