{"ast":null,"code":"import { defineComponent } from 'vue';\nimport ApexGrid from 'vue-apex-grid';\nexport default defineComponent({\n  name: 'LogViewer',\n  components: {\n    ApexGrid\n  },\n  data() {\n    return {\n      columns: [],\n      rows: []\n    };\n  },\n  methods: {\n    onFileChange(event) {\n      const file = event.target.files[0];\n      const reader = new FileReader();\n      reader.onload = () => {\n        const logData = reader.result;\n        this.parseLogData(logData);\n      };\n      reader.readAsText(file);\n    },\n    parseLogData(logData) {\n      const lines = logData.split('\\n');\n      const columnHeaders = lines[0].split(/\\s+/);\n      this.columns = columnHeaders.map(header => ({\n        header,\n        field: header\n      }));\n      this.rows = lines.slice(1).map(line => {\n        const cells = line.split(/\\s+/);\n        return columnHeaders.reduce((obj, header, index) => {\n          obj[header] = cells[index];\n          return obj;\n        }, {});\n      });\n    }\n  }\n});","map":{"version":3,"names":["defineComponent","ApexGrid","name","components","data","columns","rows","methods","onFileChange","event","file","target","files","reader","FileReader","onload","logData","result","parseLogData","readAsText","lines","split","columnHeaders","map","header","field","slice","line","cells","reduce","obj","index"],"sources":["C:\\Users\\mthss\\Documentos\\Projeto_estagio\\pagina_log\\src\\views\\LogView.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <h1>Visualizador de logs</h1>\r\n    <input type=\"file\" @change=\"onFileChange\" accept=\".log\">\r\n    <apex-grid :columns=\"columns\" :rows=\"rows\"></apex-grid>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { defineComponent } from 'vue';\r\nimport ApexGrid from 'vue-apex-grid';\r\n\r\nexport default defineComponent({\r\n  name: 'LogViewer',\r\n  components: {\r\n    ApexGrid\r\n  },\r\n  data() {\r\n    return {\r\n      columns: [],\r\n      rows: []\r\n    }\r\n  },\r\n  methods: {\r\n    onFileChange(event) {\r\n      const file = event.target.files[0];\r\n      const reader = new FileReader();\r\n\r\n      reader.onload = () => {\r\n        const logData = reader.result;\r\n        this.parseLogData(logData);\r\n      };\r\n\r\n      reader.readAsText(file);\r\n    },\r\n    parseLogData(logData) {\r\n      const lines = logData.split('\\n');\r\n      const columnHeaders = lines[0].split(/\\s+/);\r\n\r\n      this.columns = columnHeaders.map(header => ({\r\n        header,\r\n        field: header\r\n      }));\r\n\r\n      this.rows = lines.slice(1).map(line => {\r\n        const cells = line.split(/\\s+/);\r\n        return columnHeaders.reduce((obj, header, index) => {\r\n          obj[header] = cells[index];\r\n          return obj;\r\n        }, {});\r\n      });\r\n    }\r\n  }\r\n});\r\n</script>\r\n"],"mappings":"AASA,SAASA,eAAc,QAAS,KAAK;AACrC,OAAOC,QAAO,MAAO,eAAe;AAEpC,eAAeD,eAAe,CAAC;EAC7BE,IAAI,EAAE,WAAW;EACjBC,UAAU,EAAE;IACVF;EACF,CAAC;EACDG,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,OAAO,EAAE,EAAE;MACXC,IAAI,EAAE;IACR;EACF,CAAC;EACDC,OAAO,EAAE;IACPC,YAAYA,CAACC,KAAK,EAAE;MAClB,MAAMC,IAAG,GAAID,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;MAClC,MAAMC,MAAK,GAAI,IAAIC,UAAU,EAAE;MAE/BD,MAAM,CAACE,MAAK,GAAI,MAAM;QACpB,MAAMC,OAAM,GAAIH,MAAM,CAACI,MAAM;QAC7B,IAAI,CAACC,YAAY,CAACF,OAAO,CAAC;MAC5B,CAAC;MAEDH,MAAM,CAACM,UAAU,CAACT,IAAI,CAAC;IACzB,CAAC;IACDQ,YAAYA,CAACF,OAAO,EAAE;MACpB,MAAMI,KAAI,GAAIJ,OAAO,CAACK,KAAK,CAAC,IAAI,CAAC;MACjC,MAAMC,aAAY,GAAIF,KAAK,CAAC,CAAC,CAAC,CAACC,KAAK,CAAC,KAAK,CAAC;MAE3C,IAAI,CAAChB,OAAM,GAAIiB,aAAa,CAACC,GAAG,CAACC,MAAK,KAAM;QAC1CA,MAAM;QACNC,KAAK,EAAED;MACT,CAAC,CAAC,CAAC;MAEH,IAAI,CAAClB,IAAG,GAAIc,KAAK,CAACM,KAAK,CAAC,CAAC,CAAC,CAACH,GAAG,CAACI,IAAG,IAAK;QACrC,MAAMC,KAAI,GAAID,IAAI,CAACN,KAAK,CAAC,KAAK,CAAC;QAC/B,OAAOC,aAAa,CAACO,MAAM,CAAC,CAACC,GAAG,EAAEN,MAAM,EAAEO,KAAK,KAAK;UAClDD,GAAG,CAACN,MAAM,IAAII,KAAK,CAACG,KAAK,CAAC;UAC1B,OAAOD,GAAG;QACZ,CAAC,EAAE,CAAC,CAAC,CAAC;MACR,CAAC,CAAC;IACJ;EACF;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}