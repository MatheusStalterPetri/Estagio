{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, resolveComponent as _resolveComponent, createVNode as _createVNode } from \"vue\";\nconst _hoisted_1 = {\n  style: {\n    \"overflow-x\": \"auto\"\n  }\n};\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"Squid Web Cache Log Viewer\", -1 /* HOISTED */);\nconst _hoisted_3 = {\n  id: \"customers\"\n};\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"thead\", null, [/*#__PURE__*/_createElementVNode(\"tr\", null, [/*#__PURE__*/_createElementVNode(\"th\", null, \"Time Stamp\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Client Address\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Result Code\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Size\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Method\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"URL\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Hierarchy Code\")])], -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_apexchart = _resolveComponent(\"apexchart\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _createElementVNode(\"input\", {\n    type: \"file\",\n    onChange: _cache[0] || (_cache[0] = (...args) => $options.handleFileSelect && $options.handleFileSelect(...args))\n  }, null, 32 /* HYDRATE_EVENTS */), _createElementVNode(\"table\", _hoisted_3, [_hoisted_4, _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.logs, (log, index) => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: index\n    }, [_createElementVNode(\"td\", null, _toDisplayString(log.timestamp), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(log.clientAddress), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(log.resultCode), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(log.size), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(log.method), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(log.url), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(log.hierarchyCode), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))])]), _createVNode(_component_apexchart, {\n    type: \"line\",\n    options: $data.chartOptions,\n    series: $data.chartSeries\n  }, null, 8 /* PROPS */, [\"options\", \"series\"])]);\n}","map":{"version":3,"names":["style","_createElementVNode","id","_createElementBlock","_hoisted_1","_hoisted_2","type","onChange","_cache","args","$options","handleFileSelect","_hoisted_3","_hoisted_4","_Fragment","_renderList","$data","logs","log","index","key","_toDisplayString","timestamp","clientAddress","resultCode","size","method","url","hierarchyCode","_createVNode","_component_apexchart","options","chartOptions","series","chartSeries"],"sources":["C:\\Users\\mthss\\Documentos\\Projeto_estagio\\pagina_log\\src\\views\\LogView.vue"],"sourcesContent":["<style>\r\n#customers {\r\n  font-family: Arial, Helvetica, sans-serif;\r\n  border-collapse: collapse;\r\n  width: 100%;\r\n}\r\n\r\n#customers td, #customers th {\r\n  border: 1px solid #ddd;\r\n  padding: 8px;\r\n}\r\n\r\n#customers tr:nth-child(even){background-color: #f2f2f2;}\r\n\r\n#customers tr:hover {background-color: #ddd;}\r\n\r\n#customers th {\r\n  padding-top: 12px;\r\n  padding-bottom: 12px;\r\n  text-align: left;\r\n  background-color: #04AA6D;\r\n  color: white;\r\n}\r\n</style>\r\n\r\n<template>\r\n  <div style=\"overflow-x:auto;\">\r\n    <h1>Squid Web Cache Log Viewer</h1>\r\n    <input type=\"file\" @change=\"handleFileSelect\">\r\n    <table id=\"customers\">\r\n      <thead>\r\n        <tr>\r\n          <th>Time Stamp</th>\r\n          <th>Client Address</th>\r\n          <th>Result Code</th>\r\n          <th>Size</th>\r\n          <th>Method</th>\r\n          <th>URL</th>\r\n          <th>Hierarchy Code</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr v-for=\"(log, index) in logs\" :key=\"index\">\r\n          <td>{{ log.timestamp }}</td>\r\n          <td>{{ log.clientAddress }}</td>\r\n          <td>{{ log.resultCode }}</td>\r\n          <td>{{ log.size }}</td>\r\n          <td>{{ log.method }}</td>\r\n          <td>{{ log.url }}</td>\r\n          <td>{{ log.hierarchyCode }}</td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n    <apexchart type=\"line\" :options=\"chartOptions\" :series=\"chartSeries\"></apexchart>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { VueApexCharts } from 'vue3-apexcharts';\r\n\r\nexport default {\r\n  components: {\r\n    ApexChart: VueApexCharts,\r\n  },\r\n  data() {\r\n    return {\r\n      logs: [],\r\n      chartOptions: {\r\n        chart: {\r\n          id: 'log-chart',\r\n          height: 300,\r\n          type: 'line',\r\n        },\r\n        xaxis: {\r\n          type: 'datetime',\r\n          categories: [],\r\n        },\r\n        yaxis: {\r\n          title: {\r\n            text: 'Log Entries',\r\n          },\r\n        },\r\n      },\r\n      chartSeries: [{\r\n        name: 'Entries',\r\n        data: [],\r\n      }],\r\n    };\r\n  },\r\n  methods: {\r\n    handleFileSelect(event) {\r\n      const file = event.target.files[0];\r\n      const reader = new FileReader();\r\n\r\n      reader.onload = () => {\r\n        const logs = reader.result.split('\\n').map((line) => {\r\n          const [timestamp, clientAddress, resultCode, size, method, url, hierarchyCode] = line.split(/\\s+/);\r\n          return { timestamp, clientAddress, resultCode, size, method, url, hierarchyCode };\r\n        });\r\n\r\n        this.logs = logs;\r\n\r\n        // Update the chart with the new data\r\n        const categories = logs.map((log) => log.timestamp);\r\n        const data = logs.map((log) => log.size);\r\n        this.chartOptions.xaxis.categories = categories;\r\n        this.chartSeries[0].data = data;\r\n      };\r\n\r\n      reader.readAsText(file);\r\n    },\r\n  },\r\n};\r\n</script>\r\n "],"mappings":";;EA0BOA,KAAwB,EAAxB;IAAA;EAAA;AAAwB;gCAC3BC,mBAAA,CAAmC,YAA/B,4BAA0B;;EAEvBC,EAAE,EAAC;AAAW;gCACnBD,mBAAA,CAUQ,gB,aATNA,mBAAA,CAQK,a,aAPHA,mBAAA,CAAmB,YAAf,YAAU,G,aACdA,mBAAA,CAAuB,YAAnB,gBAAc,G,aAClBA,mBAAA,CAAoB,YAAhB,aAAW,G,aACfA,mBAAA,CAAa,YAAT,MAAI,G,aACRA,mBAAA,CAAe,YAAX,QAAM,G,aACVA,mBAAA,CAAY,YAAR,KAAG,G,aACPA,mBAAA,CAAuB,YAAnB,gBAAc,E;;;;uBAZ1BE,mBAAA,CA4BM,OA5BNC,UA4BM,GA3BJC,UAAmC,EACnCJ,mBAAA,CAA8C;IAAvCK,IAAI,EAAC,MAAM;IAAEC,QAAM,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,gBAAA,IAAAD,QAAA,CAAAC,gBAAA,IAAAF,IAAA,CAAgB;qCAC5CR,mBAAA,CAuBQ,SAvBRW,UAuBQ,GAtBNC,UAUQ,EACRZ,mBAAA,CAUQ,iB,kBATNE,mBAAA,CAQKW,SAAA,QAAAC,WAAA,CARsBC,KAAA,CAAAC,IAAI,GAAnBC,GAAG,EAAEC,KAAK;yBAAtBhB,mBAAA,CAQK;MAR6BiB,GAAG,EAAED;IAAK,IAC1ClB,mBAAA,CAA4B,YAAAoB,gBAAA,CAArBH,GAAG,CAACI,SAAS,kBACpBrB,mBAAA,CAAgC,YAAAoB,gBAAA,CAAzBH,GAAG,CAACK,aAAa,kBACxBtB,mBAAA,CAA6B,YAAAoB,gBAAA,CAAtBH,GAAG,CAACM,UAAU,kBACrBvB,mBAAA,CAAuB,YAAAoB,gBAAA,CAAhBH,GAAG,CAACO,IAAI,kBACfxB,mBAAA,CAAyB,YAAAoB,gBAAA,CAAlBH,GAAG,CAACQ,MAAM,kBACjBzB,mBAAA,CAAsB,YAAAoB,gBAAA,CAAfH,GAAG,CAACS,GAAG,kBACd1B,mBAAA,CAAgC,YAAAoB,gBAAA,CAAzBH,GAAG,CAACU,aAAa,iB;sCAI9BC,YAAA,CAAiFC,oBAAA;IAAtExB,IAAI,EAAC,MAAM;IAAEyB,OAAO,EAAEf,KAAA,CAAAgB,YAAY;IAAGC,MAAM,EAAEjB,KAAA,CAAAkB"},"metadata":{},"sourceType":"module","externalDependencies":[]}