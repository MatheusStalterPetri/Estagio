{"ast":null,"code":"var __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { html, LitElement } from 'lit';\nimport { property, queryAssignedElements, queryAssignedNodes, state } from 'lit/decorators.js';\nimport { themes } from '../../theming/theming-decorator.js';\nimport { partNameMap } from '../common/util.js';\nimport { styles as fluent } from './themes/light/fluent/nav-drawer-item.fluent.css.js';\nimport { styles as indigo } from './themes/light/indigo/nav-drawer-item.indigo.css.js';\nimport { styles } from './themes/light/nav-drawer-item.base.css.js';\nlet IgcNavDrawerItemComponent = class IgcNavDrawerItemComponent extends LitElement {\n  constructor() {\n    super(...arguments);\n    this.disabled = false;\n    this.active = false;\n  }\n  connectedCallback() {\n    var _a;\n    super.connectedCallback();\n    (_a = this.shadowRoot) === null || _a === void 0 ? void 0 : _a.addEventListener('slotchange', _ => {\n      this._textLength = this._text.length;\n    });\n  }\n  resolvePartNames(base) {\n    return {\n      [base]: true,\n      mini: this._textLength < 1\n    };\n  }\n  render() {\n    return html`\n      <div part=\"${partNameMap(this.resolvePartNames('base'))}\">\n        <span part=\"icon\" .hidden=\"${this.navdrawerIcon.length == 0}\">\n          <slot name=\"icon\"></slot>\n        </span>\n        <span part=\"content\">\n          <slot name=\"content\"></slot>\n        </span>\n      </div>\n    `;\n  }\n};\nIgcNavDrawerItemComponent.tagName = 'igc-nav-drawer-item';\nIgcNavDrawerItemComponent.styles = styles;\n__decorate([property({\n  type: Boolean,\n  reflect: true\n})], IgcNavDrawerItemComponent.prototype, \"disabled\", void 0);\n__decorate([property({\n  type: Boolean,\n  reflect: true\n})], IgcNavDrawerItemComponent.prototype, \"active\", void 0);\n__decorate([state()], IgcNavDrawerItemComponent.prototype, \"_textLength\", void 0);\n__decorate([queryAssignedElements({\n  slot: 'content'\n})], IgcNavDrawerItemComponent.prototype, \"_text\", void 0);\n__decorate([queryAssignedNodes({\n  slot: 'icon',\n  flatten: true\n})], IgcNavDrawerItemComponent.prototype, \"navdrawerIcon\", void 0);\nIgcNavDrawerItemComponent = __decorate([themes({\n  fluent,\n  indigo\n})], IgcNavDrawerItemComponent);\nexport default IgcNavDrawerItemComponent;","map":{"version":3,"names":["html","LitElement","property","queryAssignedElements","queryAssignedNodes","state","themes","partNameMap","styles","fluent","indigo","IgcNavDrawerItemComponent","constructor","disabled","active","connectedCallback","_a","shadowRoot","addEventListener","_","_textLength","_text","length","resolvePartNames","base","mini","render","navdrawerIcon","tagName","__decorate","type","Boolean","reflect","slot","flatten"],"sources":["../../../src/components/nav-drawer/nav-drawer-item.ts"],"sourcesContent":["import { html, LitElement } from 'lit';\nimport {\n  property,\n  queryAssignedElements,\n  queryAssignedNodes,\n  state,\n} from 'lit/decorators.js';\nimport { themes } from '../../theming/theming-decorator.js';\nimport { partNameMap } from '../common/util.js';\nimport { styles as fluent } from './themes/light/fluent/nav-drawer-item.fluent.css.js';\nimport { styles as indigo } from './themes/light/indigo/nav-drawer-item.indigo.css.js';\nimport { styles } from './themes/light/nav-drawer-item.base.css.js';\n\n/**\n * Represents a navigation drawer item.\n *\n * @element igc-nav-drawer-item\n *\n * @slot content - The content slot for the drawer item.\n * @slot icon - The slot for the icon of the drawer item.\n *\n * @csspart base - The base wrapper of the drawer item.\n * @csspart icon - The icon container.\n * @csspart content - The content container.\n */\n@themes({ fluent, indigo })\nexport default class IgcNavDrawerItemComponent extends LitElement {\n  public static readonly tagName = 'igc-nav-drawer-item';\n  public static override styles = styles;\n\n  /**\n   * Determines whether the drawer is disabled.\n   * @attr\n   */\n  @property({ type: Boolean, reflect: true })\n  public disabled = false;\n\n  /**\n   * Determines whether the drawer is active.\n   * @attr\n   */\n  @property({ type: Boolean, reflect: true })\n  public active = false;\n\n  @state()\n  private _textLength!: number;\n\n  @queryAssignedElements({ slot: 'content' })\n  private _text!: Array<HTMLElement>;\n\n  @queryAssignedNodes({ slot: 'icon', flatten: true })\n  protected navdrawerIcon!: Array<Node>;\n\n  public override connectedCallback() {\n    super.connectedCallback();\n    this.shadowRoot?.addEventListener('slotchange', (_) => {\n      this._textLength = this._text.length;\n    });\n  }\n\n  protected resolvePartNames(base: string) {\n    return {\n      [base]: true,\n      mini: this._textLength < 1,\n    };\n  }\n\n  protected override render() {\n    return html`\n      <div part=\"${partNameMap(this.resolvePartNames('base'))}\">\n        <span part=\"icon\" .hidden=\"${this.navdrawerIcon.length == 0}\">\n          <slot name=\"icon\"></slot>\n        </span>\n        <span part=\"content\">\n          <slot name=\"content\"></slot>\n        </span>\n      </div>\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'igc-nav-drawer-item': IgcNavDrawerItemComponent;\n  }\n}\n"],"mappings":";;;;;;;AAAA,SAASA,IAAI,EAAEC,UAAU,QAAQ,KAAK;AACtC,SACEC,QAAQ,EACRC,qBAAqB,EACrBC,kBAAkB,EAClBC,KAAK,QACA,mBAAmB;AAC1B,SAASC,MAAM,QAAQ,oCAAoC;AAC3D,SAASC,WAAW,QAAQ,mBAAmB;AAC/C,SAASC,MAAM,IAAIC,MAAM,QAAQ,qDAAqD;AACtF,SAASD,MAAM,IAAIE,MAAM,QAAQ,qDAAqD;AACtF,SAASF,MAAM,QAAQ,4CAA4C;AAepD,IAAMG,yBAAyB,GAA/B,MAAMA,yBAA0B,SAAQV,UAAU;EAAlDW,YAAA;;IASN,KAAAC,QAAQ,GAAG,KAAK;IAOhB,KAAAC,MAAM,GAAG,KAAK;EAqCvB;EA1BkBC,iBAAiBA,CAAA;;IAC/B,KAAK,CAACA,iBAAiB,EAAE;IACzB,CAAAC,EAAA,OAAI,CAACC,UAAU,cAAAD,EAAA,uBAAAA,EAAA,CAAEE,gBAAgB,CAAC,YAAY,EAAGC,CAAC,IAAI;MACpD,IAAI,CAACC,WAAW,GAAG,IAAI,CAACC,KAAK,CAACC,MAAM;IACtC,CAAC,CAAC;EACJ;EAEUC,gBAAgBA,CAACC,IAAY;IACrC,OAAO;MACL,CAACA,IAAI,GAAG,IAAI;MACZC,IAAI,EAAE,IAAI,CAACL,WAAW,GAAG;KAC1B;EACH;EAEmBM,MAAMA,CAAA;IACvB,OAAO1B,IAAI;mBACIO,WAAW,CAAC,IAAI,CAACgB,gBAAgB,CAAC,MAAM,CAAC,CAAC;qCACxB,IAAI,CAACI,aAAa,CAACL,MAAM,IAAI,CAAC;;;;;;;KAO9D;EACH;;AAnDuBX,yBAAA,CAAAiB,OAAO,GAAG,qBAAqB;AAC/BjB,yBAAA,CAAAH,MAAM,GAAGA,MAAM;AAOtCqB,UAAA,EADC3B,QAAQ,CAAC;EAAE4B,IAAI,EAAEC,OAAO;EAAEC,OAAO,EAAE;AAAI,CAAE,CAAC,C,0DACnB;AAOxBH,UAAA,EADC3B,QAAQ,CAAC;EAAE4B,IAAI,EAAEC,OAAO;EAAEC,OAAO,EAAE;AAAI,CAAE,CAAC,C,wDACrB;AAGtBH,UAAA,EADCxB,KAAK,EAAE,C,6DACqB;AAG7BwB,UAAA,EADC1B,qBAAqB,CAAC;EAAE8B,IAAI,EAAE;AAAS,CAAE,CAAC,C,uDACR;AAGnCJ,UAAA,EADCzB,kBAAkB,CAAC;EAAE6B,IAAI,EAAE,MAAM;EAAEC,OAAO,EAAE;AAAI,CAAE,CAAC,C,+DACd;AAzBnBvB,yBAAyB,GAAAkB,UAAA,EAD7CvB,MAAM,CAAC;EAAEG,MAAM;EAAEC;AAAM,CAAE,CAAC,C,EACNC,yBAAyB,CAqD7C;eArDoBA,yBAAyB"},"metadata":{},"sourceType":"module","externalDependencies":[]}