{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { computePosition, flip, offset, shift, size } from '@floating-ui/dom';\nimport { directive, Directive, PartType } from 'lit/directive.js';\nimport { noChange } from 'lit';\nexport class IgcToggleDirective extends Directive {\n  updatePosition(target, options, controller) {\n    var _a, _b;\n    this.floatingElement = this.createFloatingElement(options.open);\n    if (!target) {\n      if (controller) {\n        controller.rendered = Promise.resolve();\n      }\n      return noChange;\n    }\n    const promise = computePosition(target, this.floatingElement, {\n      placement: (_a = options.placement) !== null && _a !== void 0 ? _a : 'bottom-start',\n      strategy: (_b = options.positionStrategy) !== null && _b !== void 0 ? _b : 'absolute',\n      middleware: this.createMiddleware(options)\n    }).then(({\n      x,\n      y\n    }) => {\n      Object.assign(this.floatingElement.style, {\n        left: 0,\n        top: 0,\n        transform: `translate(${x}px,${y}px)`\n      });\n    });\n    if (controller) {\n      controller.rendered = promise;\n    }\n    return noChange;\n  }\n  createFloatingElement(open = false) {\n    if (!this.floatingElement) {\n      this.floatingElement = this.part.element;\n    }\n    this.floatingElement.style.display = open ? '' : 'none';\n    return this.floatingElement;\n  }\n  createMiddleware(options) {\n    const middleware = [];\n    if (options.distance) {\n      middleware.push(offset({\n        mainAxis: options.distance\n      }));\n    }\n    if (options.flip) {\n      middleware.push(flip());\n    }\n    if (this.shiftOptions) {\n      middleware.push(shift(this.shiftOptions));\n    }\n    Object.assign(this.floatingElement.style, {\n      width: ''\n    });\n    if (options.sameWidth) {\n      const floatingElement = this.floatingElement;\n      middleware.push(size({\n        apply({\n          rects\n        }) {\n          Object.assign(floatingElement.style, {\n            width: `${rects.reference.width}px`\n          });\n        }\n      }));\n    }\n    return middleware;\n  }\n  constructor(partInfo) {\n    super(partInfo);\n    this.shiftOptions = {\n      mainAxis: true\n    };\n    this.part = partInfo;\n    if (partInfo.type !== PartType.ELEMENT) {\n      throw new Error('The `igcToggle` directive must be attached to an element tag.');\n    }\n  }\n  render(target, options, controller) {\n    return this.updatePosition(target, options, controller);\n  }\n}\nexport const igcToggle = directive(IgcToggleDirective);","map":{"version":3,"names":["computePosition","flip","offset","shift","size","directive","Directive","PartType","noChange","IgcToggleDirective","updatePosition","target","options","controller","floatingElement","createFloatingElement","open","rendered","Promise","resolve","promise","placement","_a","strategy","_b","positionStrategy","middleware","createMiddleware","then","x","y","Object","assign","style","left","top","transform","part","element","display","distance","push","mainAxis","shiftOptions","width","sameWidth","apply","rects","reference","constructor","partInfo","type","ELEMENT","Error","render","igcToggle"],"sources":["../../../src/components/toggle/toggle.directive.ts"],"sourcesContent":["import {\n  computePosition,\n  flip,\n  offset,\n  shift,\n  size,\n  Middleware,\n} from '@floating-ui/dom';\nimport {\n  directive,\n  Directive,\n  PartInfo,\n  ElementPart,\n  PartType,\n} from 'lit/directive.js';\nimport { noChange } from 'lit';\nimport type { IgcToggleOptions } from './types.js';\nimport type { IgcToggleController } from './toggle.controller.js';\n\n/* blazorSuppressComponent */\nexport class IgcToggleDirective extends Directive {\n  private part: PartInfo;\n  private shiftOptions? = {\n    mainAxis: true,\n  };\n\n  private floatingElement!: HTMLElement;\n\n  private updatePosition(\n    target: HTMLElement,\n    options: IgcToggleOptions,\n    controller?: IgcToggleController\n  ) {\n    this.floatingElement = this.createFloatingElement(options.open);\n\n    if (!target) {\n      if (controller) {\n        controller.rendered = Promise.resolve();\n      }\n      return noChange;\n    }\n\n    const promise = computePosition(target, this.floatingElement, {\n      placement: options.placement ?? 'bottom-start',\n      strategy: options.positionStrategy ?? 'absolute',\n      middleware: this.createMiddleware(options),\n    }).then(({ x, y }) => {\n      Object.assign(this.floatingElement.style, {\n        left: 0,\n        top: 0,\n        transform: `translate(${x}px,${y}px)`,\n      });\n    });\n\n    if (controller) {\n      controller.rendered = promise;\n    }\n\n    return noChange;\n  }\n\n  private createFloatingElement(open = false) {\n    if (!this.floatingElement) {\n      this.floatingElement = (this.part as ElementPart).element as HTMLElement;\n    }\n\n    this.floatingElement.style.display = open ? '' : 'none';\n\n    return this.floatingElement;\n  }\n\n  private createMiddleware(options: IgcToggleOptions) {\n    const middleware: Middleware[] = [];\n\n    if (options.distance) {\n      middleware.push(\n        offset({\n          mainAxis: options.distance,\n        })\n      );\n    }\n\n    if (options.flip) {\n      middleware.push(flip());\n    }\n\n    if (this.shiftOptions) {\n      middleware.push(shift(this.shiftOptions));\n    }\n\n    // Toggling `sameWidth` does not reset the applied style on the floater element\n    Object.assign(this.floatingElement.style, { width: '' });\n\n    if (options.sameWidth) {\n      const floatingElement = this.floatingElement;\n      middleware.push(\n        size({\n          apply({ rects }) {\n            Object.assign(floatingElement.style, {\n              width: `${rects.reference.width}px`,\n            });\n          },\n        })\n      );\n    }\n\n    return middleware;\n  }\n\n  constructor(partInfo: PartInfo) {\n    super(partInfo);\n    this.part = partInfo;\n    if (partInfo.type !== PartType.ELEMENT) {\n      throw new Error(\n        'The `igcToggle` directive must be attached to an element tag.'\n      );\n    }\n  }\n\n  public render(\n    target: HTMLElement,\n    options: IgcToggleOptions,\n    controller?: IgcToggleController\n  ) {\n    return this.updatePosition(target, options, controller);\n  }\n}\n\nexport const igcToggle = directive(IgcToggleDirective);\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}